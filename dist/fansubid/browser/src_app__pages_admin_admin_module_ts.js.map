{"version":3,"file":"src_app__pages_admin_admin_module_ts.js","mappings":"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","sources":["./src/app/_pages/admin/admin-list-banned/admin-list-banned.component.ts","./src/app/_pages/admin/admin-list-banned/admin-list-banned.component.html","./src/app/_pages/admin/admin-list-cors/admin-list-cors.component.ts","./src/app/_pages/admin/admin-list-cors/admin-list-cors.component.html","./src/app/_pages/admin/admin-list-ddl/admin-list-ddl.component.ts","./src/app/_pages/admin/admin-list-ddl/admin-list-ddl.component.html","./src/app/_pages/admin/admin-list-email/admin-list-email.component.ts","./src/app/_pages/admin/admin-list-email/admin-list-email.component.html","./src/app/_pages/admin/admin-list-fansub-member/admin-list-fansub-member.component.ts","./src/app/_pages/admin/admin-list-fansub-member/admin-list-fansub-member.component.html","./src/app/_pages/admin/admin-list-information-dialog/admin-list-information-dialog.component.ts","./src/app/_pages/admin/admin-list-information-dialog/admin-list-information-dialog.component.html","./src/app/_pages/admin/admin-list-project-type/admin-list-project-type.component.ts","./src/app/_pages/admin/admin-list-project-type/admin-list-project-type.component.html","./src/app/_pages/admin/admin-list-push-notification/admin-list-push-notification.component.ts","./src/app/_pages/admin/admin-list-push-notification/admin-list-push-notification.component.html","./src/app/_pages/admin/admin-list-user/admin-list-user.component.ts","./src/app/_pages/admin/admin-list-user/admin-list-user.component.html","./src/app/_pages/admin/admin-menu/admin-menu.component.ts","./src/app/_pages/admin/admin-menu/admin-menu.component.html","./src/app/_pages/admin/admin.module.ts","./src/app/_shared/services/task-cron-job.service.ts","./node_modules/@angular-material-components/datetime-picker/fesm2015/angular-material-components-datetime-picker.mjs"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { environment } from '../../../../environments/app/environment';\r\n\r\nimport { RoleModel } from '../../../../models/req-res.model';\r\n\r\nimport { AdminService } from '../../../_shared/services/admin.service';\r\nimport { AuthService } from '../../../_shared/services/auth.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { DialogService } from '../../../_shared/services/dialog.service';\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-banned',\r\n  templateUrl: './admin-list-banned.component.html',\r\n  styleUrls: ['./admin-list-banned.component.css']\r\n})\r\nexport class AdminListBannedComponent implements OnInit, OnDestroy {\r\n\r\n  subsBannedGet = null;\r\n  subsBannedDelete = null;\r\n  subsDialog = null;\r\n\r\n  count = 0;\r\n  page = 1;\r\n  row = 10;\r\n\r\n  q = '';\r\n  sort = '';\r\n  order = '';\r\n\r\n  bannedData = {\r\n    column: ['Id', 'Korban', 'Alasan', 'Pelaku', 'Aksi'],\r\n    row: []\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private adm: AdminService,\r\n    private bs: BusyService,\r\n    private ds: DialogService,\r\n    private gs: GlobalService,\r\n    private as: AuthService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.getBan();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsBannedGet?.unsubscribe();\r\n    this.subsBannedDelete?.unsubscribe();\r\n    this.subsDialog?.unsubscribe();\r\n  }\r\n\r\n  getBan(): void {\r\n    this.bs.busy();\r\n    if (this.subsBannedGet) {\r\n      this.subsBannedGet.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsBannedGet = this.adm.getAllBanned(this.q, this.page, this.row, this.sort, this.order).subscribe({\r\n      next: res => {\r\n        this.gs.log('[BANNED_LIST_SUCCESS]', res);\r\n        this.count = res.count;\r\n        const bannedDataRow = [];\r\n        let excludedRole = [];\r\n        if (this.as.currentUserSubject?.value?.role === RoleModel.ADMIN) {\r\n          excludedRole = [RoleModel.ADMIN];\r\n        } else {\r\n          excludedRole = [RoleModel.ADMIN, RoleModel.MODERATOR];\r\n        }\r\n        for (const r of res.results) {\r\n          bannedDataRow.push({\r\n            Id: r.id,\r\n            foto_korban: r.user_.image_url,\r\n            foto_pelaku: (r.banned_by_?.image_url || `${environment.baseUrl}/assets/img/favicon.png`),\r\n            Korban: r.user_.username,\r\n            Pelaku: (r.banned_by_?.username || 'AUTO_BANNED'),\r\n            Alasan: r.reason,\r\n            Aksi: [\r\n              ...(this.gs.includesOneOf(r.user_.role, excludedRole) ? [] : [\r\n                { type: 'button', icon: 'lock_open', name: 'UnBAN', row: r }\r\n              ])\r\n            ]\r\n          });\r\n        }\r\n        this.bannedData.row = bannedDataRow;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[BANNED_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  action(data): void {\r\n    this.gs.log('[BANNED_LIST_CLICK_AKSI]', data);\r\n    if (data.name === 'UnBAN') {\r\n      this.unBan(data.row);\r\n    }\r\n    // TODO :: Other Action\r\n  }\r\n\r\n  async unBan(data): Promise<void> {\r\n    this.gs.log('[BANNED_LIST_CLICK_UNBAN]', data);\r\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\r\n      `UnBAN Akun -- '${data.user_.username}'`,\r\n      'Apakah Yakin Dan Akun Telah Direview Sebelum UnBAN ?'\r\n    )).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\r\n        if (re === true) {\r\n          this.bs.busy();\r\n          this.subsBannedDelete = this.adm.unBan(data.id).subscribe({\r\n            next: res => {\r\n              this.gs.log('[BANNED_LIST_CLICK_UNBAN_SUCCESS]', res);\r\n              this.bs.idle();\r\n              this.getBan();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[BANNED_LIST_CLICK_UNBAN_ERROR]', err, 'error');\r\n              this.bs.idle();\r\n              this.getBan();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getBan();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPaginatorClicked(data): void {\r\n    this.gs.log('[BANNED_LIST_CLICK_PAGINATOR]', data);\r\n    this.page = data.pageIndex + 1;\r\n    this.row = data.pageSize;\r\n    this.getBan();\r\n  }\r\n\r\n  onServerSideFilter(data: any): void {\r\n    this.gs.log('[BANNED_LIST_ENTER_FILTER]', data);\r\n    this.q = data;\r\n    this.getBan();\r\n  }\r\n\r\n  onServerSideOrder(data: any): void {\r\n    this.gs.log('[BANNED_LIST_CLICK_ORDER]', data);\r\n    this.q = data.q;\r\n    this.sort = data.active;\r\n    this.order = data.direction;\r\n    this.getBan();\r\n  }\r\n\r\n  openBan(data): void {\r\n    this.gs.log('[BANNED_LIST_CLICK_BANNED]', data);\r\n    this.router.navigateByUrl(`/user/${data.Korban}`);\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">User Yang Terkena BAN</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"bannedData.column\" [tableDataRow]=\"bannedData.row\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\"\r\n            (buttonClicked)=\"action($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\" (rowClicked)=\"openBan($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { environment } from '../../../../environments/app/environment';\r\n\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\nimport { AdminService } from '../../../_shared/services/admin.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { DialogService } from '../../../_shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-cors',\r\n  templateUrl: './admin-list-cors.component.html',\r\n  styleUrls: ['./admin-list-cors.component.css']\r\n})\r\nexport class AdminListCorsComponent implements OnInit, OnDestroy {\r\n\r\n  subsCorsGet = null;\r\n  subsCorsDelete = null;\r\n  subsDialog = null;\r\n\r\n  count = 0;\r\n  page = 1;\r\n  row = 10;\r\n\r\n  q = '';\r\n  sort = '';\r\n  order = '';\r\n\r\n  corsData = {\r\n    column: ['Id', 'Nama Api', 'IP Domain', 'Api Key', 'Pemilik', 'Aksi'],\r\n    row: []\r\n  };\r\n\r\n  constructor(\r\n    private bs: BusyService,\r\n    private ds: DialogService,\r\n    private gs: GlobalService,\r\n    private adm: AdminService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.getCors();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsCorsGet?.unsubscribe();\r\n    this.subsCorsDelete?.unsubscribe();\r\n    this.subsDialog?.unsubscribe();\r\n  }\r\n\r\n  getCors(): void {\r\n    this.bs.busy();\r\n    if (this.subsCorsGet) {\r\n      this.subsCorsGet.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsCorsGet = this.adm.getAllCors(this.q, this.page, this.row, this.sort, this.order).subscribe({\r\n      next: res => {\r\n        this.gs.log('[CORS_LIST_SUCCESS]', res);\r\n        this.count = res.count;\r\n        const corsDataRow = [];\r\n        for (const r of res.results) {\r\n          corsDataRow.push({\r\n            Id: r.id,\r\n            'Nama Api': r.name,\r\n            'IP Domain': r.ip_domain,\r\n            'Api Key': r.api_key,\r\n            foto: (r.user_?.image_url || `${environment.baseUrl}/assets/img/favicon.png`),\r\n            Pemilik: (r.user_?.username || 'SYSTEM'),\r\n            Aksi: [\r\n              { type: 'button', icon: 'layers_clear', name: 'Revoke', row: r }\r\n            ]\r\n          });\r\n        }\r\n        this.corsData.row = corsDataRow;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[CORS_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  action(data): void {\r\n    this.gs.log('[CORS_LIST_CLICK_AKSI]', data);\r\n    if (data.name === 'Revoke') {\r\n      this.revokeCors(data.row);\r\n    }\r\n    // TODO :: Other Action\r\n  }\r\n\r\n  async revokeCors(data): Promise<void> {\r\n    this.gs.log('[CORS_LIST_CLICK_REVOKE]', data);\r\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\r\n      `Revoke Kunci -- '${data.id}' :: '${data.ip_domain}'`,\r\n      'Apakah Yakin Untuk Menonaktifkan Kunci Ini ?'\r\n    )).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\r\n        if (re === true) {\r\n          this.bs.busy();\r\n          this.subsCorsDelete = this.adm.revokeCors(data.id).subscribe({\r\n            next: res => {\r\n              this.gs.log('[CORS_LIST_CLICK_REVOKE_SUCCESS]', res);\r\n              this.bs.idle();\r\n              this.getCors();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[CORS_LIST_CLICK_REVOKE_ERROR]', err, 'error');\r\n              this.bs.idle();\r\n              this.getCors();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getCors();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPaginatorClicked(data): void {\r\n    this.gs.log('[CORS_LIST_CLICK_PAGINATOR]', data);\r\n    this.page = data.pageIndex + 1;\r\n    this.row = data.pageSize;\r\n    this.getCors();\r\n  }\r\n\r\n  onServerSideFilter(data: any): void {\r\n    this.gs.log('[CORS_LIST_ENTER_FILTER]', data);\r\n    this.q = data;\r\n    this.getCors();\r\n  }\r\n\r\n  onServerSideOrder(data: any): void {\r\n    this.gs.log('[CORS_LIST_CLICK_ORDER]', data);\r\n    this.q = data.q;\r\n    this.sort = data.active;\r\n    this.order = data.direction;\r\n    this.getCors();\r\n  }\r\n\r\n  openCors(data): void {\r\n    this.gs.log('[CORS_LIST_CLICK_CORS]', data);\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Kelola API Key</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"corsData.column\" [tableDataRow]=\"corsData.row\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\"\r\n            (buttonClicked)=\"action($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\" (rowClicked)=\"openCors($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { environment } from '../../../../environments/app/environment';\r\n\r\nimport { DdlLampiranService } from '../../../_shared/services/ddl-lampiran.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { DialogService } from '../../../_shared/services/dialog.service';\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-ddl',\r\n  templateUrl: './admin-list-ddl.component.html',\r\n  styleUrls: ['./admin-list-ddl.component.css']\r\n})\r\nexport class AdminListDdlComponent implements OnInit, OnDestroy {\r\n\r\n  subsAttachmentGet = null;\r\n  subsAttachmentReUpload = null;\r\n  subsDialog = null;\r\n\r\n  count = 0;\r\n  page = 1;\r\n  row = 10;\r\n\r\n  q = '';\r\n  sort = '';\r\n  order = '';\r\n\r\n  attachmentData = {\r\n    column: ['Nama Lampiran', 'Ext', 'Size', 'Mime', 'Tanggal', 'Pemilik', 'Aksi'],\r\n    row: []\r\n  };\r\n\r\n  failed = true;\r\n\r\n  constructor(\r\n    private dls: DdlLampiranService,\r\n    private bs: BusyService,\r\n    private ds: DialogService,\r\n    private gs: GlobalService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.getAttachment();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsAttachmentGet?.unsubscribe();\r\n    this.subsAttachmentReUpload?.unsubscribe();\r\n    this.subsDialog?.unsubscribe();\r\n  }\r\n\r\n  getAttachment(): void {\r\n    this.bs.busy();\r\n    if (this.subsAttachmentGet) {\r\n      this.subsAttachmentGet.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsAttachmentGet = this.dls.getAttachmentNotUploaded(this.q, this.page, this.row, this.sort, this.order, this.failed).subscribe({\r\n      next: res => {\r\n        this.gs.log('[LAMPIRAN_PENDING_LIST_SUCCESS]', res);\r\n        this.count = res.count;\r\n        const attachmentDataRow = [];\r\n        for (const r of res.results) {\r\n          attachmentDataRow.push({\r\n            foto: (r.user_?.image_url || r.parent_attachment_?.user_?.image_url || `${environment.baseUrl}/assets/img/favicon.png`),\r\n            pending: r.pending,\r\n            'Nama Lampiran': r.name,\r\n            Ext: r.ext,\r\n            Size: r.size,\r\n            Mime: r.mime,\r\n            Tanggal: r.created_at,\r\n            Pemilik: (r.user_?.username || r.parent_attachment_?.user_?.username || 'SYSTEM'),\r\n            Aksi: (r.pending || r.discord || r.google_drive) ? [] : [\r\n              { type: 'button', icon: 'cloud_upload', name: 'ReUpload', row: r }\r\n            ]\r\n          });\r\n        }\r\n        this.attachmentData.row = attachmentDataRow;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[LAMPIRAN_PENDING_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  action(data): void {\r\n    this.gs.log('[LAMPIRAN_LIST_CLICK_AKSI]', data);\r\n    if (data.name === 'ReUpload') {\r\n      this.reUpload(data.row);\r\n    }\r\n    // TODO :: Other Action\r\n  }\r\n\r\n  async reUpload(data): Promise<void> {\r\n    this.gs.log('[LAMPIRAN_PENDING_LIST_CLICK_REUPLOAD]', data);\r\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\r\n      'Upload Ulang ?',\r\n      `\r\n        Id: ${data.id} <br />\r\n        Filename: ${data.name}.${data.ext} <br />\r\n        Size: ${data.size} Bytes <br />\r\n        Mime: ${data.mime} <br />\r\n        Pemilik: ${data.user_.username}\r\n      `\r\n    )).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\r\n        if (re === true) {\r\n          this.bs.busy();\r\n          this.subsAttachmentReUpload = this.dls.reUpload({\r\n            id: data.id\r\n          }).subscribe({\r\n            next: res => {\r\n              this.gs.log('[LAMPIRAN_PENDING_LIST_CLICK_REUPLOAD_SUCCESS]', res);\r\n              this.bs.idle();\r\n              this.getAttachment();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[LAMPIRAN_PENDING_LIST_CLICK_REUPLOAD_ERROR]', err, 'error');\r\n              this.bs.idle();\r\n              this.getAttachment();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getAttachment();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPaginatorClicked(data): void {\r\n    this.gs.log('[LAMPIRAN_PENDING_LIST_CLICK_PAGINATOR]', data);\r\n    this.page = data.pageIndex + 1;\r\n    this.row = data.pageSize;\r\n    this.getAttachment();\r\n  }\r\n\r\n  onServerSideFilter(data: any): void {\r\n    this.gs.log('[LAMPIRAN_PENDING_LIST_ENTER_FILTER]', data);\r\n    this.q = data;\r\n    this.getAttachment();\r\n  }\r\n\r\n  onServerSideOrder(data: any): void {\r\n    this.gs.log('[LAMPIRAN_PENDING_LIST_CLICK_ORDER]', data);\r\n    this.q = data.q;\r\n    this.sort = data.active;\r\n    this.order = data.direction;\r\n    this.getAttachment();\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row my-4\">\r\n        <div class=\"col-12 text-end text-success\">\r\n          <mat-slide-toggle [(ngModel)]=\"failed\" (change)=\"getAttachment()\" labelPosition=\"before\">\r\n            Tampilkan Yang Tidak Selesai Saja\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Kelola Berkas DDL</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"attachmentData.column\" [tableDataRow]=\"attachmentData.row\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\"\r\n            (buttonClicked)=\"action($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\n\nimport { environment } from '../../../../environments/app/environment';\n\nimport { BusyService } from '../../../_shared/services/busy.service';\nimport { DialogService } from '../../../_shared/services/dialog.service';\nimport { GlobalService } from '../../../_shared/services/global.service';\nimport { MailService } from '../../../_shared/services/mail.service';\n\n@Component({\n  selector: 'app-admin-list-email',\n  templateUrl: './admin-list-email.component.html',\n  styleUrls: ['./admin-list-email.component.css']\n})\nexport class AdminListEmailComponent implements OnInit, OnDestroy {\n\n  subsAllMail = null;\n  subsDialog = null;\n  subsMail = null;\n\n  count = 0;\n  page = 1;\n  row = 10;\n\n  q = '';\n  sort = '';\n  order = '';\n\n  mailData = {\n    column: ['Tanggal', 'Pengirim', 'Penerima', 'Topik', 'Lampiran'],\n    row: []\n  };\n\n  constructor(\n    private bs: BusyService,\n    private gs: GlobalService,\n    private ms: MailService,\n    private ds: DialogService\n  ) {\n    this.gs.bannerImg = null;\n    this.gs.sizeContain = false;\n    this.gs.bgRepeat = false;\n  }\n\n  ngOnInit(): void {\n    if (this.gs.isBrowser) {\n      this.getAllMail();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subsAllMail?.unsubscribe();\n    this.subsDialog?.unsubscribe();\n    this.subsMail?.unsubscribe();\n  }\n\n  filterAddress(raw: string) {\n    let addr = '';\n    if (raw) {\n      for (const rw of raw.split(',')) {\n        if (addr) {\n          addr += ', ';\n        }\n        if (rw.includes('<') && rw.includes('>')) {\n          addr += rw.split('<')[1].split('>')[0].trim();\n        } else {\n          addr += rw.trim();\n        }\n      }\n    }\n    return addr;\n  }\n\n  filterLampiran(attachment: any) {\n    let lampiran = '';\n    if (attachment) {\n      for (const a of attachment) {\n        if (lampiran) {\n          lampiran += ', ';\n        }\n        lampiran += `\n          <a href=\"${environment.apiUrl}/attachment/${a.id}?ngsw-bypass=true\" target=\"_blank\">\n            ${a.name}.${a.ext} (${a.size} Bytes)\n          </a>\n        `;\n      }\n    }\n    return lampiran;\n  }\n\n  getAllMail(): void {\n    this.bs.busy();\n    if (this.subsMail) {\n      this.subsMail.unsubscribe();\n      this.bs.idle();\n    }\n    this.subsAllMail = this.ms.getAllMail(this.q, this.page, this.row, this.sort, this.order).subscribe({\n      next: res => {\n        this.gs.log('[MAIL_LIST_SUCCESS]', res);\n        this.count = res.count;\n        this.mailData.row = [];\n        for (const r of res.results) {\n          this.mailData.row.push({\n            id: r.id,\n            Tanggal: r.date,\n            Pengirim: this.filterAddress(r.from),\n            Penerima: this.filterAddress(r.to),\n            Topik: r.subject,\n            Lampiran: `${r.attachment_count} Berkas`\n          });\n        }\n        this.bs.idle();\n      },\n      error: err => {\n        this.gs.log('[MAIL_LIST_ERROR]', err, 'error');\n        this.bs.idle();\n      }\n    });\n  }\n\n  getMail(mailId: string): void {\n    this.subsMail = this.ms.getMail(mailId).subscribe({\n      next: res => {\n        this.gs.log('[MAIL_DETAIL_SUCCESS]', res);\n        this.bs.idle();\n        this.subsDialog = this.ds.openInfoDialog({\n          data: {\n            title: res.result.subject,\n            htmlMessage: `\n              From: ${this.filterAddress(res.result.from)}\n              <br />\n              To: ${this.filterAddress(res.result.to)}\n              <br />\n              Cc: ${this.filterAddress(res.result.cc)}\n              <br />\n              Bcc: ${this.filterAddress(res.result.bcc)}\n              <br /> <br />\n              Date: ${new Date(res.result.date)}\n              <br />\n              Lampiran: ${this.filterLampiran(res.result.attachment_)}\n              <hr class=\"my-3\">\n              ${res.result.html || res.result.text}\n            `,\n            confirmText: 'Tutup',\n            infoText: res.result.id\n          },\n          disableClose: false\n        }).afterClosed().subscribe({\n          next: r => {\n            this.gs.log('[INFO_DIALOG_CLOSED]', r);\n            this.getAllMail();\n            this.subsDialog.unsubscribe();\n          }\n        });\n      },\n      error: err => {\n        this.gs.log('[MAIL_DETAIL_ERROR]', err, 'error');\n        this.bs.idle();\n        this.getAllMail();\n      }\n    });\n  }\n\n  onRowClicked(data): void {\n    this.gs.log('[MAIL_LIST_CLICK_EMAIL]', data);\n    this.getMail(data.id);\n  }\n\n  onPaginatorClicked(data): void {\n    this.gs.log('[MAIL_LIST_CLICK_PAGINATOR]', data);\n    this.page = data.pageIndex + 1;\n    this.row = data.pageSize;\n    this.getAllMail();\n  }\n\n  onServerSideFilter(data: any): void {\n    this.gs.log('[MAIL_LIST_ENTER_FILTER]', data);\n    this.q = data;\n    this.getAllMail();\n  }\n\n  onServerSideOrder(data: any): void {\n    this.gs.log('[MAIL_LIST_CLICK_ORDER]', data);\n    this.q = data.q;\n    this.sort = data.active;\n    if (this.sort === 'created_at') {\n      this.sort = 'date';\n    } else if (this.sort === 'title') {\n      this.sort = 'subject';\n    }\n    this.order = data.direction;\n    this.getAllMail();\n  }\n\n}\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Semua Email Pengguna</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"mailData.column\" [tableDataRow]=\"mailData.row\" [count]=\"count\"\r\n            [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\" (rowClicked)=\"onRowClicked($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { FansubMemberModel } from '../../../../models/req-res.model';\r\n\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { DialogService } from '../../../_shared/services/dialog.service';\r\nimport { FansubService } from '../../../_shared/services/fansub.service';\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-fansub-member',\r\n  templateUrl: './admin-list-fansub-member.component.html',\r\n  styleUrls: ['./admin-list-fansub-member.component.css']\r\n})\r\nexport class AdminListFansubMemberComponent implements OnInit {\r\n\r\n  count = 0;\r\n  page = 1;\r\n  row = 10;\r\n\r\n  q = '';\r\n  sort = '';\r\n  order = '';\r\n\r\n  memberData = {\r\n    column: ['Id', 'Fansub', 'Anggota', 'Keterangan', 'Aksi'],\r\n    row: []\r\n  };\r\n\r\n  subsMemberGet = null;\r\n  subsMemberPut = null;\r\n  subsMemberDelete = null;\r\n  subsDialog = null;\r\n\r\n  constructor(\r\n    private bs: BusyService,\r\n    private ds: DialogService,\r\n    private fansub: FansubService,\r\n    private gs: GlobalService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.getFansubMember();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsMemberGet?.unsubscribe();\r\n    this.subsMemberPut?.unsubscribe();\r\n    this.subsMemberDelete?.unsubscribe();\r\n    this.subsDialog?.unsubscribe();\r\n  }\r\n\r\n  getFansubMember(): void {\r\n    this.bs.busy();\r\n    if (this.subsMemberGet) {\r\n      this.subsMemberGet.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsMemberGet = this.fansub.getAllFansubMember(this.q, this.page, this.row, this.sort, this.order).subscribe({\r\n      next: res => {\r\n        this.gs.log('[FANSUB_MEMBER_LIST_SUCCESS]', res);\r\n        const memberDataRow = [];\r\n        this.count = res.count;\r\n        for (const r of res.results) {\r\n          memberDataRow.push({\r\n            foto_fansub: r.fansub_.image_url,\r\n            foto_anggota: r.user_.image_url,\r\n            Id: r.id,\r\n            Fansub: r.fansub_.slug,\r\n            Anggota: r.user_.username,\r\n            Keterangan: r.keterangan,\r\n            Aksi: (\r\n              r.approved\r\n            ) ? [\r\n              { type: 'button', icon: 'no_meeting_room', name: 'KICK', row: r }\r\n            ] : [\r\n              { type: 'button', icon: 'done', name: 'ACCEPT', row: r },\r\n              { type: 'button', icon: 'close', name: 'REJECT', row: r }\r\n            ]\r\n          });\r\n        }\r\n        this.memberData.row = memberDataRow;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[FANSUB_MEMBER_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPaginatorClicked(data): void {\r\n    this.gs.log('[FANSUB_MEMBER_LIST_CLICK_PAGINATOR]', data);\r\n    this.page = data.pageIndex + 1;\r\n    this.row = data.pageSize;\r\n    this.getFansubMember();\r\n  }\r\n\r\n  onServerSideFilter(data: any): void {\r\n    this.gs.log('[FANSUB_MEMBER_LIST_ENTER_FILTER]', data);\r\n    this.q = data;\r\n    this.getFansubMember();\r\n  }\r\n\r\n  onServerSideOrder(data: any): void {\r\n    this.gs.log('[FANSUB_MEMBER_LIST_CLICK_ORDER]', data);\r\n    this.q = data.q;\r\n    this.sort = data.active;\r\n    this.order = data.direction;\r\n    this.getFansubMember();\r\n  }\r\n\r\n  action(data): void {\r\n    this.gs.log('[FANSUB_MEMBER_LIST_CLICK_AKSI]', data);\r\n    if (data.name === 'KICK') {\r\n      this.kickMember(data.row);\r\n    } else if (data.name === 'ACCEPT') {\r\n      this.approveOrRejectFansubMember(data.row, true);\r\n    } else if (data.name === 'REJECT') {\r\n      this.approveOrRejectFansubMember(data.row, false);\r\n    }\r\n  }\r\n\r\n  approveOrRejectFansubMember(data: FansubMemberModel, ac: boolean): void {\r\n    this.subsDialog = this.ds.openInputDialog({\r\n      data: {\r\n        title: `Keterangan ${ac ? 'Approve' : 'Reject'} '${data.user_.username}' :: '${data.fansub_.slug}'`,\r\n        input: {\r\n          keterangan: {\r\n            inputLabel: 'Keterangan',\r\n            inputPlaceholder: `Pemilik, Translator, Timer, QA / QC, TypeSetter, dll.`,\r\n            inputValue: null,\r\n            inputRequired: true\r\n          }\r\n        },\r\n        confirmText: 'OK',\r\n        cancelText: 'Batal',\r\n        infoText: 'Max. 10 Huruf'\r\n      }\r\n    }).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INPUT_DIALOG_CLOSED]', re);\r\n        if (re) {\r\n          this.bs.busy();\r\n          this.subsMemberPut = this.fansub.approveRejectFansubMember(data.id, {\r\n            approved: ac,\r\n            keterangan: re.keterangan?.substring(0, 10)\r\n          }).subscribe({\r\n            next: res => {\r\n              this.gs.log('[FANSUB_MEMBER_APPROVE_REJECT_SUCCESS]', res);\r\n              this.getFansubMember();\r\n              this.bs.idle();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[FANSUB_MEMBER_APPROVE_REJECT_ERROR]', err, 'error');\r\n              this.getFansubMember();\r\n              this.bs.idle();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getFansubMember();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  async kickMember(data: FansubMemberModel): Promise<void> {\r\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\r\n      `Kick Member -- '${data.user_.username}' :: '${data.fansub_.slug}'`,\r\n      'Apakah Yakin Dan Akun Telah Direview Sebelum Dikeluarkan ?'\r\n    )).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\r\n        if (re === true) {\r\n          this.bs.busy();\r\n          this.subsMemberDelete = this.fansub.leaveFansubMember(data.id).subscribe({\r\n            next: res => {\r\n              this.gs.log('[FANSUB_MEMBER_KICK_SUCCESS]', res);\r\n              this.getFansubMember();\r\n              this.bs.idle();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[FANSUB_MEMBER_KICK_ERROR]', err, 'error');\r\n              this.getFansubMember();\r\n              this.bs.idle();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getFansubMember();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Atur Keanggotaan Fansub</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"memberData.column\" [tableDataRow]=\"memberData.row\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\"\r\n            (buttonClicked)=\"action($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { CONSTANTS } from '../../../../constants';\n\nimport { GlobalService } from '../../../_shared/services/global.service';\nimport { InformationService } from '../../../_shared/services/information.service';\nimport { BusyService } from '../../../_shared/services/busy.service';\nimport { DialogService } from '../../../_shared/services/dialog.service';\n\n@Component({\n  selector: 'app-admin-list-information-dialog',\n  templateUrl: './admin-list-information-dialog.component.html',\n  styleUrls: ['./admin-list-information-dialog.component.css']\n})\nexport class AdminListInformationDialogComponent implements OnInit, OnDestroy {\n\n  fg: FormGroup;\n\n  submitted = false;\n\n  count = 0;\n  page = 1;\n  row = 10;\n\n  q = '';\n  sort = '';\n  order = '';\n\n  infoData = {\n    column: ['Id', 'Judul', 'Pemilik', 'Aksi'],\n    row: []\n  };\n\n  subsInfoGet = null;\n  subsInfoCreateOrUpdate = null;\n  subsInfoDelete = null;\n  subsDialog = null;\n\n  constructor(\n    private fb: FormBuilder,\n    private bs: BusyService,\n    private ds: DialogService,\n    private gs: GlobalService,\n    private info: InformationService\n  ) {\n    this.gs.bannerImg = null;\n    this.gs.sizeContain = false;\n    this.gs.bgRepeat = false;\n  }\n\n  ngOnInit(): void {\n    if (this.gs.isBrowser) {\n      this.initForm();\n      this.getInfo();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subsInfoGet?.unsubscribe();\n    this.subsInfoCreateOrUpdate?.unsubscribe();\n    this.subsInfoDelete?.unsubscribe();\n    this.subsDialog?.unsubscribe();\n  }\n\n  get GS(): GlobalService {\n    return this.gs;\n  }\n\n  initForm(): void {\n    this.fg = this.fb.group({\n      id: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\n      title: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\n      content: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\n      confirm: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\n      cancel: [null, Validators.compose([Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\n      close: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\n      broadcast: [null, Validators.compose([Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])]\n    });\n  }\n\n  getInfo(): void {\n    this.bs.busy();\n    if (this.subsInfoGet) {\n      this.subsInfoGet.unsubscribe();\n      this.bs.idle();\n    }\n    this.subsInfoGet = this.info.getAllInfo(this.q, this.page, this.row, this.sort, this.order).subscribe({\n      next: res => {\n        this.gs.log('[INFORMATION_LIST_SUCCESS]', res);\n        this.count = res.count;\n        const infoDataRow = [];\n        for (const r of res.results) {\n          infoDataRow.push({\n            content: r.content,\n            confirm: r.confirm,\n            cancel: r.cancel,\n            close: r.close,\n            foto: r.user_.image_url,\n            Id: r.id,\n            Judul: r.title,\n            Pemilik: r.user_.username,\n            Aksi: [\n              { type: 'button', icon: 'close', name: 'Hapus', row: r }\n            ]\n          });\n        }\n        this.infoData.row = infoDataRow;\n        this.bs.idle();\n      },\n      error: err => {\n        this.gs.log('[INFORMATION_LIST_ERROR]', err, 'error');\n        this.bs.idle();\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.bs.busy();\n    this.submitted = true;\n    if (this.fg.invalid) {\n      this.submitted = false;\n      this.bs.idle();\n      return;\n    }\n    this.subsInfoCreateOrUpdate = this.info.createUpdateInfo({\n      id: this.fg.value.id,\n      title: this.fg.value.title,\n      content: this.fg.value.content,\n      confirm: this.fg.value.confirm,\n      cancel: this.fg.value.cancel,\n      close: (this.fg.value.close === '1'),\n      broadcast: (this.fg.value.broadcast === '1')\n    }).subscribe({\n      next: res => {\n        this.gs.log('[INFORMATION_CREATE_UPDATE_SUCCESS]', res);\n        this.submitted = false;\n        this.bs.idle();\n        for (const c in this.fg.controls) {\n          if (this.fg.controls[c]) {\n            this.fg.controls[c].patchValue(null);\n            this.fg.controls[c].updateValueAndValidity();\n            this.fg.controls[c].setErrors(null);\n            this.fg.controls[c].markAsUntouched();\n            this.fg.controls[c].markAsPristine();\n          }\n        }\n        this.getInfo();\n      },\n      error: err => {\n        this.gs.log('[INFORMATION_CREATE_UPDATE_ERROR]', err, 'error');\n        this.submitted = false;\n        this.bs.idle();\n        this.getInfo();\n      }\n    });\n  }\n\n  action(data): void {\n    this.gs.log('[INFORMMATION_LIST_CLICK_AKSI]', data);\n    if (data.name === 'Hapus') {\n      this.deleteInfo(data.row);\n    }\n    // TODO :: Other Action\n  }\n\n  async deleteInfo(data): Promise<void> {\n    this.gs.log('[INFORMATION_LIST_CLICK_DELETE]', data);\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\n      `Hapus Info -- '${data.id}' :: '${data.title}'`,\n      'Yakin Akan Menghapus Informasi Ini ?'\n    )).afterClosed().subscribe({\n      next: re => {\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\n        if (re === true) {\n          this.bs.busy();\n          this.subsInfoDelete = this.info.deleteInfo(data.id).subscribe({\n            next: res => {\n              this.gs.log('[INFORMATION_LIST_CLICK_DELETE_SUCCESS]', res);\n              this.bs.idle();\n              this.getInfo();\n            },\n            error: err => {\n              this.gs.log('[INFORMATION_LIST_CLICK_DELETE_ERROR]', err, 'error');\n              this.bs.idle();\n              this.getInfo();\n            }\n          });\n        } else if (re === false) {\n          this.getInfo();\n        }\n        this.subsDialog.unsubscribe();\n      }\n    });\n  }\n\n  onPaginatorClicked(data): void {\n    this.gs.log('[INFORMATION_LIST_CLICK_PAGINATOR]', data);\n    this.page = data.pageIndex + 1;\n    this.row = data.pageSize;\n    this.getInfo();\n  }\n\n  onServerSideFilter(data: any): void {\n    this.gs.log('[INFORMATION_LIST_ENTER_FILTER]', data);\n    this.q = data;\n    this.getInfo();\n  }\n\n  onServerSideOrder(data: any): void {\n    this.gs.log('[INFORMATION_LIST_CLICK_ORDER]', data);\n    this.q = data.q;\n    this.sort = data.active;\n    this.order = data.direction;\n    this.getInfo();\n  }\n\n  editInfo(data): void {\n    this.gs.log('[INFORMATION_LIST_CLICK_INFORMATION]', data);\n    this.fg.controls['id'].patchValue(data.Id);\n    this.fg.controls['title'].patchValue(data.Judul);\n    this.fg.controls['content'].patchValue(data.content);\n    this.fg.controls['confirm'].patchValue(data.confirm);\n    this.fg.controls['cancel'].patchValue(data.cancel);\n    this.fg.controls['close'].patchValue(`${+data?.close}`);\n    this.fg.controls['broadcast'].patchValue(`${+data?.broadcast}`);\n  }\n\n}\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <form [formGroup]=\"fg\" (submit)=\"onSubmit();\" *ngIf=\"fg\">\r\n          <div class=\"col-12 sticky-top bg-bifeldy pb-1\">\r\n            <h2 class=\"pt-3 border-bottom-dotted\">\r\n              <b class=\"text-bifeldy\">Tambah / Ubah Informasi Dialog Pop-Up!</b>\r\n            </h2>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n              <mat-form-field appearance=\"outline\" class=\"p-3 col-12 col-md-4\" [color]=\"'accent'\">\r\n                <mat-label>Kode ID</mat-label>\r\n                <input matInput formControlName=\"id\" placeholder=\"ID_DIALOG\" required />\r\n                <mat-icon matSuffix>short_text</mat-icon>\r\n                <mat-hint align=\"end\">ID Untuk Request API</mat-hint>\r\n                <mat-error>\r\n                  <div *ngIf=\"fg.get('id').hasError('required')\">Kode Tidak Boleh Kosong</div>\r\n                  <div *ngIf=\"fg.get('id').hasError('pattern')\">Kode Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"outline\" class=\"p-3 col-12 col-md-8\" [color]=\"'accent'\">\r\n                <mat-label>Judul Dialog</mat-label>\r\n                <input matInput formControlName=\"title\" placeholder=\"Judul Dialog\" required />\r\n                <mat-icon matSuffix>short_text</mat-icon>\r\n                <mat-error>\r\n                  <div *ngIf=\"fg.get('title').hasError('required')\">Judul Tidak Boleh Kosong</div>\r\n                  <div *ngIf=\"fg.get('title').hasError('pattern')\">Judul Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-md-5 col-xl-4 p-3\">\r\n                <div class=\"row\">\r\n                  <mat-form-field appearance=\"outline\" class=\"p-3 col-12\" [color]=\"'accent'\">\r\n                    <mat-label>Tombol OK</mat-label>\r\n                    <input matInput formControlName=\"confirm\" placeholder=\"OK!\" required />\r\n                    <mat-icon matSuffix>short_text</mat-icon>\r\n                    <mat-error>\r\n                      <div *ngIf=\"fg.get('confirm').hasError('required')\">Tombol OK Tidak Boleh Kosong</div>\r\n                      <div *ngIf=\"fg.get('confirm').hasError('pattern')\">Tombol OK Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"outline\" class=\"p-3 col-12\" [color]=\"'accent'\">\r\n                    <mat-label>Tombol Cancel</mat-label>\r\n                    <input matInput formControlName=\"cancel\" placeholder=\"Batal!\" />\r\n                    <mat-icon matSuffix>short_text</mat-icon>\r\n                    <mat-error>\r\n                      <div *ngIf=\"fg.get('cancel').hasError('required')\">Judul Tidak Boleh Kosong</div>\r\n                      <div *ngIf=\"fg.get('cancel').hasError('pattern')\">Judul Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"outline\" class=\"p-3 col-12\" [color]=\"'accent'\">\r\n                    <mat-label>Cegah Klik Tutup Dimana Saja</mat-label>\r\n                    <mat-select formControlName=\"close\" placeholder=\"Ya / Tidak\" required>\r\n                      <mat-option value=\"0\">Tidak</mat-option>\r\n                      <mat-option value=\"1\">Ya</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint align=\"end\">Antisipasi Kesalahan Klik</mat-hint>\r\n                    <mat-error>\r\n                      <div *ngIf=\"fg.get('close').hasError('required')\">Mohon Pilih Salah Satu</div>\r\n                      <div *ngIf=\"fg.get('close').hasError('pattern')\">Status Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"outline\" class=\"p-3 col-12\" [color]=\"'accent'\">\r\n                    <mat-label>Langsung Disiarkan Saja</mat-label>\r\n                    <mat-select formControlName=\"broadcast\" placeholder=\"Ya / Tidak\" required>\r\n                      <mat-option value=\"0\">Tidak</mat-option>\r\n                      <mat-option value=\"1\">Ya</mat-option>\r\n                    </mat-select>\r\n                    <mat-hint align=\"end\">Live Popup Message Tidak Disimpan</mat-hint>\r\n                    <mat-error>\r\n                      <div *ngIf=\"fg.get('broadcast').hasError('required')\">Mohon Pilih Salah Satu</div>\r\n                      <div *ngIf=\"fg.get('broadcast').hasError('pattern')\">Status Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-7 col-xl-8 pt-3\">\r\n                <div class=\"row\">\r\n                  <angular-editor class=\"p-3 w-100\" formControlName=\"content\" [config]=\"GS.angularEditorConfig\" required></angular-editor>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-12\">\r\n                <div class=\"row gy-3\">\r\n                  <div class=\"col g-0\"></div>\r\n                  <div class=\"col-12 col-md-3\">\r\n                    <button type=\"submit\" mat-flat-button color=\"accent\" class=\"w-100\" [disabled]=\"submitted || fg.invalid\">\r\n                      Simpan\r\n                      <mat-icon class=\"ms-1\">save</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Informasi Dialog Pop-Up Tersimpan</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"infoData.column\" [tableDataRow]=\"infoData.row\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\"\r\n            (buttonClicked)=\"action($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\" (rowClicked)=\"editInfo($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { CONSTANTS } from '../../../../constants';\r\n\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\nimport { ProjectService } from '../../../_shared/services/project.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { ImgbbService } from '../../../_shared/services/imgbb.service';\r\nimport { DialogService } from '../../../_shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-project-type',\r\n  templateUrl: './admin-list-project-type.component.html',\r\n  styleUrls: ['./admin-list-project-type.component.css']\r\n})\r\nexport class AdminListProjectTypeComponent implements OnInit, OnDestroy {\r\n\r\n  fg: FormGroup;\r\n\r\n  submitted = false;\r\n\r\n  subsProjectGet = null;\r\n  subsProjectCreate = null;\r\n  subsProjectDelete = null;\r\n  subsImgbb = null;\r\n  subsDialog = null;\r\n\r\n  gambar = null;\r\n\r\n  image = null;\r\n  imageErrorText = null;\r\n  imageLimitExceeded = null;\r\n  image_url = '/assets/img/form/no-image.png';\r\n\r\n  projectData = {\r\n    column: ['Nama', 'Image', 'Deskripsi', 'Berkas', 'Aksi'],\r\n    row: []\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private bs: BusyService,\r\n    private gs: GlobalService,\r\n    private ds: DialogService,\r\n    private imgbb: ImgbbService,\r\n    private project: ProjectService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.initForm();\r\n      this.getProject();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsProjectCreate?.unsubscribe();\r\n    this.subsProjectGet?.unsubscribe();\r\n    this.subsProjectDelete?.unsubscribe();\r\n    this.subsImgbb?.unsubscribe();\r\n    this.subsDialog?.unsubscribe();\r\n  }\r\n\r\n  initForm(): void {\r\n    this.fg = this.fb.group({\r\n      name: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\r\n      description: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\r\n      image: [null, Validators.compose([Validators.pattern(CONSTANTS.regexUrl)])]\r\n    });\r\n  }\r\n\r\n  getProject(): void {\r\n    this.bs.busy();\r\n    if (this.subsProjectGet) {\r\n      this.subsProjectGet.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsProjectGet = this.project.getProject().subscribe({\r\n      next: res => {\r\n        this.gs.log('[PROJECT_LIST_SUCCESS]', res);\r\n        const projectDataRow = [];\r\n        for (const r of res.results) {\r\n          projectDataRow.push({\r\n            Nama: r.name,\r\n            Image: r.image_url,\r\n            Deskripsi: r.description,\r\n            Berkas: (r as any).total_berkas,\r\n            Aksi: ( (r as any).total_berkas > 0 ) ? [] : [\r\n              { type: 'button', icon: 'delete_forever', name: 'Hapus', row: r }\r\n            ]\r\n          });\r\n        }\r\n        this.projectData.row = projectDataRow;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[PROJECT_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.bs.busy();\r\n    this.submitted = true;\r\n    if (this.fg.invalid) {\r\n      this.submitted = false;\r\n      this.bs.idle();\r\n      return;\r\n    }\r\n    this.subsProjectCreate = this.project.createProject({\r\n      name: this.fg.value.name,\r\n      description: this.fg.value.description,\r\n      image: this.fg.value.image,\r\n    }).subscribe({\r\n      next: res => {\r\n        this.gs.log('[PROJECT_CREATE_SUCCESS]', res);\r\n        this.submitted = false;\r\n        this.bs.idle();\r\n        for (const c in this.fg.controls) {\r\n          if (this.fg.controls[c]) {\r\n            this.fg.controls[c].patchValue(null);\r\n            this.fg.controls[c].updateValueAndValidity();\r\n            this.fg.controls[c].setErrors(null);\r\n            this.fg.controls[c].markAsUntouched();\r\n            this.fg.controls[c].markAsPristine();\r\n          }\r\n        }\r\n        this.getProject();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[PROJECT_CREATE_ERROR]', err, 'error');\r\n        this.submitted = false;\r\n        this.bs.idle();\r\n        this.getProject();\r\n      }\r\n    });\r\n  }\r\n\r\n  action(data): void {\r\n    this.gs.log('[PROJECT_LIST_CLICK_AKSI]', data);\r\n    if (data.name === 'Hapus') {\r\n      this.deleteProject(data.row);\r\n    }\r\n    // TODO :: Other Action\r\n  }\r\n\r\n  async deleteProject(data): Promise<void> {\r\n    this.gs.log('[PROJECT_LIST_CLICK_DELETE]', data);\r\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\r\n      `Hapus Proyek -- '${data.id}' :: '${data.nama}'`,\r\n      'Menghapus Dapat Membuat Error / Menghapus Berkas Yang Menunjuk Ke Tipe Ini !'\r\n    )).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\r\n        if (re === true) {\r\n          this.bs.busy();\r\n          this.subsProjectDelete = this.project.deleteProject(data.id).subscribe({\r\n            next: res => {\r\n              this.gs.log('[PROJECT_LIST_CLICK_DELETE_SUCCESS]', res);\r\n              this.bs.idle();\r\n              this.getProject();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[PROJECT_LIST_CLICK_DELETE_ERROR]', err, 'error');\r\n              this.bs.idle();\r\n              this.getProject();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getProject();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadImage(event, gambar): void {\r\n    this.gambar = gambar;\r\n    this.image = null;\r\n    this.imageLimitExceeded = null;\r\n    this.imageErrorText = null;\r\n    this.fg.controls['image'].patchValue(null);\r\n    const file = event.target.files[0];\r\n    try {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = e => {\r\n        this.gs.log('[IMAGE_SELECTED]', e);\r\n        if (file.size <= CONSTANTS.fileSizeImageLimit) {\r\n          const img = this.gs.document.createElement('img');\r\n          img.onload = () => {\r\n            this.image = file;\r\n            this.image_url = reader.result.toString();\r\n          };\r\n          img.src = reader.result.toString();\r\n        } else {\r\n          this.image = null;\r\n          this.image_url = '/assets/img/form/image-error.png';\r\n          this.imageLimitExceeded = CONSTANTS.fileSizeImageLimit;\r\n          this.gambar.clear(event);\r\n        }\r\n      };\r\n    } catch (error) {\r\n      this.image = null;\r\n      this.image_url = '/assets/img/form/no-image.png';\r\n      this.gambar.clear(event);\r\n    }\r\n  }\r\n\r\n  submitImage(): void {\r\n    this.submitted = true;\r\n    this.subsImgbb = this.imgbb.uploadImage({\r\n      file: this.image\r\n    }).subscribe({\r\n      next: res => {\r\n        this.gs.log('[IMAGE_SUCCESS]', res);\r\n        this.fg.controls['image'].patchValue(res.result.url);\r\n        this.submitted = false;\r\n      },\r\n      error: err => {\r\n        this.gs.log('[IMAGE_ERROR]', err, 'error');\r\n        this.fg.controls['image'].patchValue(null);\r\n        this.imageErrorText = err.result?.message || err.info;\r\n        this.submitted = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  openProject(data): void {\r\n    this.gs.log('[PROJECT_LIST_CLICK_PROJECT]', data);\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <form [formGroup]=\"fg\" (submit)=\"onSubmit();\" *ngIf=\"fg\">\r\n          <div class=\"col-12 sticky-top bg-bifeldy pb-1\">\r\n            <h2 class=\"pt-3 border-bottom-dotted\">\r\n              <b class=\"text-bifeldy\">Buat Tipe Jenis Proyek Baru</b>\r\n            </h2>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-md-5 col-xl-4 p-3\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12\">\r\n                    <img class=\"w-100 border\" [src]=\"image_url\" />\r\n                    <mat-form-field appearance=\"outline\" class=\"pt-3 w-100\" [color]=\"'accent'\">\r\n                      <mat-label>Gambar</mat-label>\r\n                      <ngx-mat-file-input class=\"w-100\" (change)=\"uploadImage($event, gambar)\" #gambar [disabled]=\"fg.value.image\"\r\n                        [accept]=\"'image/gif, image/jpeg, image/jpg, image/png'\"></ngx-mat-file-input>\r\n                      <mat-icon matSuffix>image</mat-icon>\r\n                    </mat-form-field>\r\n                    <mat-error class=\"px-3 w-100\">\r\n                      <small>\r\n                        <div *ngIf=\"imageLimitExceeded\">Ukuran Upload Melebihi Batas {{ imageLimitExceeded | bytes }} !</div>\r\n                        <div *ngIf=\"imageErrorText\">{{ imageErrorText }}</div>\r\n                      </small>\r\n                    </mat-error>\r\n                  </div>\r\n                  <div class=\"col-12\" *ngIf=\"image && !fg.value.image\">\r\n                    <button type=\"button\" mat-raised-button class=\"w-100\" color=\"primary\" [disabled]=\"submitted\" (click)=\"submitImage()\">\r\n                      <mat-icon class=\"me-1\">add_photo_alternate</mat-icon>\r\n                      Unggah\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-md-7 col-xl-8 p-3\">\r\n                <div class=\"row\">\r\n                  <mat-form-field appearance=\"outline\" class=\"p-3 col-12\" [color]=\"'accent'\">\r\n                    <mat-label>Nama</mat-label>\r\n                    <input matInput formControlName=\"name\" placeholder=\"**_BD\" required />\r\n                    <mat-icon matSuffix>short_text</mat-icon>\r\n                    <mat-hint align=\"end\">Untuk Jenis Berkas</mat-hint>\r\n                    <mat-error>\r\n                      <div *ngIf=\"fg.get('name').hasError('required')\">Nama Tidak Boleh Kosong</div>\r\n                      <div *ngIf=\"fg.get('name').hasError('pattern')\">Nama Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                  <mat-form-field appearance=\"outline\" class=\"p-3 col-12\" [color]=\"'accent'\">\r\n                    <mat-label>Deskripsi</mat-label>\r\n                    <input matInput formControlName=\"description\" placeholder=\"Edisi Terbatas\" required />\r\n                    <mat-icon matSuffix>wysiwyg</mat-icon>\r\n                    <mat-error>\r\n                      <div *ngIf=\"fg.get('description').hasError('required')\">Deskripsi Tidak Boleh Kosong</div>\r\n                      <div *ngIf=\"fg.get('description').hasError('pattern')\">Deskripsi Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 p-3\">\r\n                <div class=\"row mt-3\">\r\n                  <div class=\"col-12\">\r\n                    <div class=\"row gy-3\">\r\n                      <div class=\"col g-0\"></div>\r\n                      <div class=\"col-12 col-md-3\">\r\n                        <button type=\"submit\" mat-flat-button color=\"accent\" class=\"w-100\" [disabled]=\"submitted || fg.invalid\">\r\n                          Simpan\r\n                          <mat-icon class=\"ms-1\">save</mat-icon>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Hapus Jenis Proyek Yang Ada</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"projectData.column\" [tableDataRow]=\"projectData.row\"\r\n            (rowClicked)=\"openProject($event)\" (buttonClicked)=\"action($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgxMatDatetimePicker } from '@angular-material-components/datetime-picker';\r\n\r\nimport { CONSTANTS } from '../../../../constants';\r\n\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\nimport { AdminService } from '../../../_shared/services/admin.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { DialogService } from '../../../_shared/services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-push-notification',\r\n  templateUrl: './admin-list-push-notification.component.html',\r\n  styleUrls: ['./admin-list-push-notification.component.css']\r\n})\r\nexport class AdminListPushNotificationComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild('kalender', { static: true }) kalender: NgxMatDatetimePicker<any>;\r\n\r\n  fg: FormGroup;\r\n\r\n  submitted = false;\r\n\r\n  subsNotifGet = null;\r\n  subsNotifCreate = null;\r\n  subsNotifDelete = null;\r\n  subsDialog = null;\r\n\r\n  count = 0;\r\n  page = 1;\r\n  row = 10;\r\n\r\n  q = '';\r\n  sort = '';\r\n  order = '';\r\n\r\n  notifData = {\r\n    column: ['Deadline', 'Judul', 'Konten', 'Pemilik', 'Aksi'],\r\n    row: []\r\n  };\r\n\r\n  currentDateTime = new Date();\r\n  maxDateTime = new Date(Date.now() + CONSTANTS.timeMaxDaysNotification);\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private bs: BusyService,\r\n    private ds: DialogService,\r\n    private gs: GlobalService,\r\n    private adm: AdminService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.initForm();\r\n      this.getNotif();\r\n    }\r\n  }\r\n\r\n  get maxNotificationDays(): number {\r\n    return CONSTANTS.timeMaxDaysNotification / 24 / 60 / 60 / 1000;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsNotifCreate?.unsubscribe();\r\n    this.subsNotifGet?.unsubscribe();\r\n    this.subsNotifDelete?.unsubscribe();\r\n    this.subsDialog?.unsubscribe();\r\n  }\r\n\r\n  initForm(): void {\r\n    this.fg = this.fb.group({\r\n      title: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\r\n      content: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\r\n      type: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\r\n      dismissible: [null, Validators.compose([Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])],\r\n      deadline: [null, Validators.compose([Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)])]\r\n    });\r\n  }\r\n\r\n  get dateTimePicker(): any {\r\n    return this.kalender;\r\n  }\r\n\r\n  getNotif(): void {\r\n    this.bs.busy();\r\n    if (this.subsNotifGet) {\r\n      this.subsNotifGet.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsNotifGet = this.adm.getAllNotif(this.q, this.page, this.row, this.sort, this.order).subscribe({\r\n      next: res => {\r\n        this.gs.log('[NOTIFICATION_LIST_SUCCESS]', res);\r\n        this.count = res.count;\r\n        const notifDataRow = [];\r\n        for (const r of res.results) {\r\n          notifDataRow.push({\r\n            foto: r.user_.image_url,\r\n            Deadline: r.deadline,\r\n            Judul: r.title,\r\n            Konten: r.content,\r\n            Pemilik: r.user_.username,\r\n            Aksi: [\r\n              { type: 'button', icon: 'close', name: 'Hapus', row: r }\r\n            ]\r\n          });\r\n        }\r\n        this.notifData.row = notifDataRow;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[NOTIFICATION_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    this.bs.busy();\r\n    this.submitted = true;\r\n    if (this.fg.invalid) {\r\n      this.submitted = false;\r\n      this.bs.idle();\r\n      return;\r\n    }\r\n    this.subsNotifCreate = this.adm.createNotif({\r\n      type: this.fg.value.type,\r\n      title: this.fg.value.title,\r\n      content: this.fg.value.content,\r\n      dismissible: (this.fg.value.dismissible === '1'),\r\n      deadline: this.fg.value.deadline\r\n    }).subscribe({\r\n      next: res => {\r\n        this.gs.log('[NOTIFICATION_CREATE_SUCCESS]', res);\r\n        this.submitted = false;\r\n        this.bs.idle();\r\n        for (const c in this.fg.controls) {\r\n          if (this.fg.controls[c]) {\r\n            this.fg.controls[c].patchValue(null);\r\n            this.fg.controls[c].updateValueAndValidity();\r\n            this.fg.controls[c].setErrors(null);\r\n            this.fg.controls[c].markAsUntouched();\r\n            this.fg.controls[c].markAsPristine();\r\n          }\r\n        }\r\n        this.getNotif();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[NOTIFICATION_CREATE_ERROR]', err, 'error');\r\n        this.submitted = false;\r\n        this.bs.idle();\r\n        this.getNotif();\r\n      }\r\n    });\r\n  }\r\n\r\n  action(data): void {\r\n    this.gs.log('[NOTIFICATION_LIST_CLICK_AKSI]', data);\r\n    if (data.name === 'Hapus') {\r\n      this.deleteNotif(data.row);\r\n    }\r\n    // TODO :: Other Action\r\n  }\r\n\r\n  async deleteNotif(data): Promise<void> {\r\n    this.gs.log('[NOTIFICATION_LIST_CLICK_DELETE]', data);\r\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\r\n      `Hapus Notif -- '${data.id}' :: '${data.title}'`,\r\n      'Yakin Akan Menghapus Notifikasi Ini ?'\r\n    )).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\r\n        if (re === true) {\r\n          this.bs.busy();\r\n          this.subsNotifDelete = this.adm.deleteNotif(data.id).subscribe({\r\n            next: res => {\r\n              this.gs.log('[NOTIFICATION_LIST_CLICK_DELETE_SUCCESS]', res);\r\n              this.bs.idle();\r\n              this.getNotif();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[NOTIFICATION_LIST_CLICK_DELETE_ERROR]', err, 'error');\r\n              this.bs.idle();\r\n              this.getNotif();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getNotif();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPaginatorClicked(data): void {\r\n    this.gs.log('[NOTIFICATION_LIST_CLICK_PAGINATOR]', data);\r\n    this.page = data.pageIndex + 1;\r\n    this.row = data.pageSize;\r\n    this.getNotif();\r\n  }\r\n\r\n  onServerSideFilter(data: any): void {\r\n    this.gs.log('[NOTIFICATION_LIST_ENTER_FILTER]', data);\r\n    this.q = data;\r\n    this.getNotif();\r\n  }\r\n\r\n  onServerSideOrder(data: any): void {\r\n    this.gs.log('[NOTIFICATION_LIST_CLICK_ORDER]', data);\r\n    this.q = data.q;\r\n    this.sort = data.active;\r\n    this.order = data.direction;\r\n    this.getNotif();\r\n  }\r\n\r\n  openNotif(data): void {\r\n    this.gs.log('[NOTIFICATION_LIST_CLICK_NOTIFICATION]', data);\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <form [formGroup]=\"fg\" (submit)=\"onSubmit();\" *ngIf=\"fg\">\r\n          <div class=\"col-12 sticky-top bg-bifeldy pb-1\">\r\n            <h2 class=\"pt-3 border-bottom-dotted\">\r\n              <b class=\"text-bifeldy\">Buat Push Notifikasi</b>\r\n            </h2>\r\n          </div>\r\n          <div class=\"col-12\">\r\n            <div class=\"row\">\r\n              <mat-form-field appearance=\"outline\" class=\"p-3 col-12 col-md-4\" [color]=\"'accent'\">\r\n                <mat-label>Judul</mat-label>\r\n                <input matInput formControlName=\"title\" placeholder=\"Perhatian!\" required />\r\n                <mat-icon matSuffix>short_text</mat-icon>\r\n                <mat-hint align=\"end\">Teks Tebal Di Kiri</mat-hint>\r\n                <mat-error>\r\n                  <div *ngIf=\"fg.get('title').hasError('required')\">Judul Tidak Boleh Kosong</div>\r\n                  <div *ngIf=\"fg.get('title').hasError('pattern')\">Judul Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"outline\" class=\"p-3 col-12 col-md-8\" [color]=\"'accent'\">\r\n                <mat-label>Konten / Isi</mat-label>\r\n                <input matInput formControlName=\"content\" placeholder=\"Akan Diadakan Maintenance Pada ...\" required />\r\n                <mat-icon matSuffix>wysiwyg</mat-icon>\r\n                <mat-error>\r\n                  <div *ngIf=\"fg.get('content').hasError('required')\">Isi Tidak Boleh Kosong</div>\r\n                  <div *ngIf=\"fg.get('content').hasError('pattern')\">Isi Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"outline\" class=\"p-3 col-12 col-md-4\" [color]=\"'accent'\">\r\n                <mat-label>Jenis Warna</mat-label>\r\n                <mat-select formControlName=\"type\" placeholder=\"Class Warna Bootstrap\" required>\r\n                  <mat-option value=\"danger\">Merah</mat-option>\r\n                  <mat-option value=\"warning\">Kuning</mat-option>\r\n                  <mat-option value=\"success\">Hijau</mat-option>\r\n                  <mat-option value=\"light\">Putih</mat-option>\r\n                  <mat-option value=\"dark\">Hitam</mat-option>\r\n                  <mat-option value=\"secondary\">Abu Abu</mat-option>\r\n                  <mat-option value=\"primary\">Biru Tua</mat-option>\r\n                  <mat-option value=\"info\">Biru Muda</mat-option>\r\n                </mat-select>\r\n                <mat-error>\r\n                  <div *ngIf=\"fg.get('type').hasError('required')\">Mohon Pilih Salah Satu</div>\r\n                  <div *ngIf=\"fg.get('type').hasError('pattern')\">Tipe Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"outline\" class=\"p-3 col-12 col-md-4\" [color]=\"'accent'\">\r\n                <mat-label>Dapat Ditutup</mat-label>\r\n                <mat-select formControlName=\"dismissible\" placeholder=\"Ya / Tidak\" required>\r\n                  <mat-option value=\"1\">Ya</mat-option>\r\n                  <mat-option value=\"0\">Tidak</mat-option>\r\n                </mat-select>\r\n                <mat-hint align=\"end\">Tombol X Di Kanan</mat-hint>\r\n                <mat-error>\r\n                  <div *ngIf=\"fg.get('dismissible').hasError('required')\">Mohon Pilih Salah Satu</div>\r\n                  <div *ngIf=\"fg.get('dismissible').hasError('pattern')\">Dismissible Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <mat-form-field appearance=\"outline\" class=\"p-3 col-12 col-md-4\" [color]=\"'accent'\">\r\n                <mat-label>Deadline</mat-label>\r\n                <input matInput [ngxMatDatetimePicker]=\"kalender\" formControlName=\"deadline\" (focus)=\"kalender.open()\" placeholder=\"{{ currentDateTime | date:'d MMMM y, HH:mm:ss' }}\"\r\n                  [min]=\"currentDateTime\" [max]=\"maxDateTime\" />\r\n                <mat-datepicker-toggle matSuffix [for]=\"dateTimePicker\"></mat-datepicker-toggle>\r\n                <ngx-mat-datetime-picker #kalender [showSpinners]=\"true\" [showSeconds]=\"true\" [enableMeridian]=\"true\"></ngx-mat-datetime-picker>\r\n                <mat-hint align=\"end\">Muncul Setiap Halaman Di Refresh</mat-hint>\r\n                <mat-error>\r\n                  <div *ngIf=\"fg.get('deadline').hasError('matDatetimePickerParse')\">Tanggal Tidak Valid</div>\r\n                  <div *ngIf=\"fg.get('deadline').hasError('matDatetimePickerMax')\">Paling Lama {{ maxNotificationDays }} Hari Mendatang</div>\r\n                  <div *ngIf=\"fg.get('deadline').hasError('matDatetimePickerMin')\">Paling Cepat Detik Ini Sekarang</div>\r\n                  <div *ngIf=\"fg.get('deadline').hasError('pattern')\">Tanggal Hanya Boleh Huruf Standar Papan Ketik</div>\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n            <div class=\"row mt-3\">\r\n              <div class=\"col-12\">\r\n                <div class=\"row gy-3\">\r\n                  <div class=\"col g-0\"></div>\r\n                  <div class=\"col-12 col-md-3\">\r\n                    <button type=\"submit\" mat-flat-button color=\"accent\" class=\"w-100\" [disabled]=\"submitted || fg.invalid\">\r\n                      Simpan\r\n                      <mat-icon class=\"ms-1\">save</mat-icon>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Deadline Notifikasi</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"notifData.column\" [tableDataRow]=\"notifData.row\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\"\r\n            (buttonClicked)=\"action($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\" (rowClicked)=\"openNotif($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { environment } from '../../../../environments/app/environment';\r\n\r\nimport { RoleModel } from '../../../../models/req-res.model';\r\n\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\nimport { AdminService } from '../../../_shared/services/admin.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { DialogService } from '../../../_shared/services/dialog.service';\r\nimport { UserService } from '../../../_shared/services/user.service';\r\nimport { AuthService } from '../../../_shared/services/auth.service';\r\nimport { StatsServerService } from '../../../_shared/services/stats-server.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-list-user',\r\n  templateUrl: './admin-list-user.component.html',\r\n  styleUrls: ['./admin-list-user.component.css']\r\n})\r\nexport class AdminListUserComponent implements OnInit, OnDestroy {\r\n\r\n  subsUserGet = null;\r\n  subsUserDelete = null;\r\n  subsPromote = null;\r\n  subsDialog = null;\r\n  subsBannedGet = null;\r\n\r\n  count = 0;\r\n  page = 1;\r\n  row = 10;\r\n\r\n  q = '';\r\n  sort = '';\r\n  order = '';\r\n\r\n  userData = {\r\n    column: ['Id', 'Role', 'Image', 'Username', 'Nama Lengkap', 'Email', 'Aksi'],\r\n    row: []\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private bs: BusyService,\r\n    private ds: DialogService,\r\n    private as: AuthService,\r\n    private gs: GlobalService,\r\n    private ss: StatsServerService,\r\n    private adm: AdminService,\r\n    private user: UserService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.getUser();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsUserGet?.unsubscribe();\r\n    this.subsUserDelete?.unsubscribe();\r\n    this.subsPromote?.unsubscribe();\r\n    this.subsDialog?.unsubscribe();\r\n    this.subsBannedGet?.unsubscribe();\r\n  }\r\n\r\n  getUser(): void {\r\n    this.bs.busy();\r\n    if (this.subsUserGet) {\r\n      this.subsUserGet.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsUserGet = this.user.getAllUser(this.q, this.page, this.row, this.sort, this.order).subscribe({\r\n      next: res => {\r\n        this.gs.log('[USER_LIST_SUCCESS]', res);\r\n        this.count = res.count;\r\n        this.bs.busy();\r\n        this.subsBannedGet = this.adm.getBanned({\r\n          username: res.results.map(r => r.username)\r\n        }).subscribe({\r\n          next: result => {\r\n            this.gs.log('[BANNED_LIST_SUCCESS]', res);\r\n            const userDataRow = [];\r\n            let excludedRole = [];\r\n            if (this.as.currentUserSubject?.value?.role === RoleModel.ADMIN) {\r\n              excludedRole = [RoleModel.ADMIN];\r\n            } else {\r\n              excludedRole = [RoleModel.ADMIN, RoleModel.MODERATOR];\r\n            }\r\n            for (const r of res.results) {\r\n              userDataRow.push({\r\n                Id: r.id,\r\n                Role: r.role,\r\n                Image: r.image_url,\r\n                Username: r.username,\r\n                Email: r._email,\r\n                'Nama Lengkap': r.kartu_tanda_penduduk_.nama,\r\n                banned: (Object.keys(result.results[r.username]).length > 0),\r\n                Aksi: [\r\n                  { type: 'button', icon: 'mail_outline', name: 'MAIL', row: r },\r\n                  ...((\r\n                    (Object.keys(result.results[r.username]).length > 0) ||\r\n                    (r.username === this.as.currentUserSubject?.value?.username) ||\r\n                    this.gs.includesOneOf(r.role, excludedRole)\r\n                  ) ? [] : [\r\n                    { type: 'button', icon: 'lock', name: 'BAN', row: r },\r\n                    { type: 'button', icon: 'handyman', name: RoleModel.ADMIN, row: r },\r\n                    { type: 'button', icon: 'security', name: RoleModel.MODERATOR, row: r },\r\n                    { type: 'button', icon: 'rate_review', name: RoleModel.FANSUBBER, row: r },\r\n                    { type: 'button', icon: 'person', name: RoleModel.USER, row: r }\r\n                  ])\r\n                ]\r\n              });\r\n            }\r\n            this.userData.row = userDataRow;\r\n            this.bs.idle();\r\n          },\r\n          error: err => {\r\n            this.gs.log('[BANNED_LIST_ERROR]', err, 'error');\r\n            this.bs.idle();\r\n          }\r\n        });\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[USER_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  action(data): void {\r\n    this.gs.log('[USER_LIST_CLICK_AKSI]', data);\r\n    if (data.name === 'BAN') {\r\n      this.ban(data.row);\r\n    } else if (data.name === 'MAIL') {\r\n      this.router.navigate(['/create/mailbox'], {\r\n        queryParams: {\r\n          to: `${data.row.username}@${environment.domain}`,\r\n          cc: data.row._email\r\n        }\r\n      });\r\n    } else {\r\n      this.proDemote(data.row, data.name);\r\n    }\r\n  }\r\n\r\n  ban(data): void {\r\n    this.gs.log('[USER_LIST_CLICK_BAN]', data);\r\n    this.subsDialog = this.ds.openInputDialog({\r\n      data: {\r\n        title: `BAN Akun -- '${data.username}'`,\r\n        input: {\r\n          reason: {\r\n            inputLabel: 'Alasan',\r\n            inputPlaceholder: `Manually Banned By ${this.as.currentUserSubject?.value?.role}`,\r\n            inputValue: null,\r\n            inputRequired: true\r\n          }\r\n        },\r\n        confirmText: 'Ya, BAN Akun',\r\n        cancelText: 'Tidak, Batal'\r\n      },\r\n      disableClose: false\r\n    }).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INPUT_DIALOG_CLOSED]', re);\r\n        if (re) {\r\n          this.bs.busy();\r\n          this.subsUserDelete = this.adm.ban({\r\n            id: data.id,\r\n            email: data.email,\r\n            username: data.username,\r\n            reason: re.reason\r\n          }).subscribe({\r\n            next: res => {\r\n              this.gs.log('[USER_LIST_CLICK_BAN_SUCCESS]', res);\r\n              this.bs.idle();\r\n              this.getUser();\r\n              this.ss.socketEmitVolatile('force-logout', {\r\n                username: data.username,\r\n                reason: re.reason\r\n              });\r\n            },\r\n            error: err => {\r\n              this.gs.log('[USER_LIST_CLICK_BAN_ERROR]', err, 'error');\r\n              this.bs.idle();\r\n              this.getUser();\r\n            }\r\n          });\r\n        } else {\r\n          this.getUser();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  async proDemote(data, role: RoleModel): Promise<void> {\r\n    this.gs.log('[USER_LIST_CLICK_PROMOTE]', data);\r\n    this.subsDialog = (await this.ds.openKonfirmasiDialog(\r\n      `Pro/Demosikan Akun -- '${data.username}'`,\r\n      `Apakah Yakin Ingin Menjadikannya Sebagai ${role} ?`\r\n    )).afterClosed().subscribe({\r\n      next: re => {\r\n        this.gs.log('[INFO_DIALOG_CLOSED]', re);\r\n        if (re === true) {\r\n          this.bs.busy();\r\n          this.subsPromote = this.adm.proDemote({\r\n            id: data.id,\r\n            role\r\n          }).subscribe({\r\n            next: res => {\r\n              this.gs.log('[USER_LIST_CLICK_PROMOTE_SUCCESS]', res);\r\n              this.bs.idle();\r\n              this.getUser();\r\n            },\r\n            error: err => {\r\n              this.gs.log('[USER_LIST_CLICK_PROMOTE_ERROR]', err, 'error');\r\n              this.bs.idle();\r\n              this.getUser();\r\n            }\r\n          });\r\n        } else if (re === false) {\r\n          this.getUser();\r\n        }\r\n        this.subsDialog.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  onPaginatorClicked(data): void {\r\n    this.gs.log('[USER_LIST_CLICK_PAGINATOR]', data);\r\n    this.page = data.pageIndex + 1;\r\n    this.row = data.pageSize;\r\n    this.getUser();\r\n  }\r\n\r\n  onServerSideFilter(data: any): void {\r\n    this.gs.log('[USER_LIST_ENTER_FILTER]', data);\r\n    this.q = data;\r\n    this.getUser();\r\n  }\r\n\r\n  onServerSideOrder(data: any): void {\r\n    this.gs.log('[USER_LIST_CLICK_ORDER]', data);\r\n    this.q = data.q;\r\n    this.sort = data.active;\r\n    this.order = data.direction;\r\n    this.getUser();\r\n  }\r\n\r\n  openUser(data): void {\r\n    this.gs.log('[USER_LIST_CLICK_USER]', data);\r\n    this.router.navigateByUrl(`/user/${data.Username}`);\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Kelola Seluruh Member</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12 p-3\">\r\n          <app-material-table [tableDataColumn]=\"userData.column\" [tableDataRow]=\"userData.row\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\"\r\n            (buttonClicked)=\"action($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\" (serverSideOrder)=\"onServerSideOrder($event)\" (rowClicked)=\"openUser($event)\"></app-material-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { TaskCronJobModel } from '../../../../models/req-res.model';\r\n\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\nimport { AdminService } from '../../../_shared/services/admin.service';\r\nimport { StatsServerService } from '../../../_shared/services/stats-server.service';\r\nimport { AuthService } from '../../../_shared/services/auth.service';\r\nimport { TaskCronJobService } from '../../../_shared/services/task-cron-job.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-menu',\r\n  templateUrl: './admin-menu.component.html',\r\n  styleUrls: ['./admin-menu.component.css']\r\n})\r\nexport class AdminMenuComponent implements OnInit, OnDestroy {\r\n\r\n  cronJobs: TaskCronJobModel[] = [];\r\n\r\n  subsCronJobsGet = null;\r\n  subsCronJobsPut = null;\r\n\r\n  constructor(\r\n    private bs: BusyService,\r\n    private gs: GlobalService,\r\n    private as: AuthService,\r\n    private adm: AdminService,\r\n    private ss: StatsServerService,\r\n    private tcj: TaskCronJobService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.sizeContain = false;\r\n    this.gs.bgRepeat = false;\r\n  }\r\n\r\n  get AS(): AuthService {\r\n    return this.as;\r\n  }\r\n\r\n  get GS(): GlobalService {\r\n    return this.gs;\r\n  }\r\n\r\n  get ADM(): AdminService {\r\n    return this.adm;\r\n  }\r\n\r\n  get SS(): StatsServerService {\r\n    return this.ss;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      this.getAllTaskCronJobs();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsCronJobsGet?.unsubscribe();\r\n    this.subsCronJobsPut?.unsubscribe();\r\n  }\r\n\r\n  toggleSetting(key: string, checked: boolean): void {\r\n    this.ss.socketEmit('server-set', { [key]: checked });\r\n  }\r\n\r\n  getAllTaskCronJobs(): void {\r\n    this.bs.busy();\r\n    this.subsCronJobsGet = this.tcj.getAllTaskCronJobs().subscribe({\r\n      next: res => {\r\n        this.gs.log('[TASK_CRON_JOB_LIST_SUCCESS]', res);\r\n        this.cronJobs = res.results;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[TASK_CRON_JOB_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleCronJob(t: TaskCronJobModel): void {\r\n    this.bs.busy();\r\n    this.subsCronJobsPut = this.tcj.toggleOnOffTaskCronJob(t.id).subscribe({\r\n      next: res => {\r\n        this.gs.log('[TASK_CRON_JOB_TOGGLE_SUCCESS]', res);\r\n        this.bs.idle();\r\n        this.getAllTaskCronJobs();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[TASK_CRON_JOB_TOGGLE_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n        this.getAllTaskCronJobs();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid p-0\">\r\n  <div class=\"wrapper\" [style.background]=\"'linear-gradient(to bottom, ' + (GS.isDarkMode ? '#673ab7' : '#3f51b5') + ' 0%, #ee0dfd 100%)'\">\r\n    <ul class=\"bg-bubbles align-items-center p-0\">\r\n      <li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li><li></li>\r\n      <div class=\"row align-items-center h-100\">\r\n        <div class=\"col-12 mx-auto\">\r\n          <div class=\"container text-light\">\r\n            <h2 class=\"mb-1\" style=\"line-height: normal;\">\r\n              {{ AS.currentUserSubject?.value?.kartu_tanda_penduduk_.nama }} :: {{ AS.currentUserSubject?.value?.role }}\r\n            </h2>\r\n            <p class=\"mb-0\">Admin & Mod Panel List, Halaman Khusus Orang Dalam ...</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  \r\n  <!-- Detail -->\r\n  <div class=\"row pb-3 px-0\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row px-3\">\r\n        <div class=\"col-12 col-md-6 col-xl-3 p-2\" *ngFor=\"let m of ADM.menuList\">\r\n          <mat-card class=\"gradient-border rgb-border\">\r\n            <mat-card-header routerLink=\"/admin-mod/{{ m.url }}\" style=\"cursor: pointer;\">\r\n              <div mat-card-avatar>\r\n                <mat-icon style=\"font-size: 300%;\" *ngIf=\"m.icon\">{{ m.icon }}</mat-icon>\r\n              </div>\r\n              <mat-card-title class=\"text-warning mb-1\" style=\"cursor: pointer;\">\r\n                <h3 class=\"mb-0\">{{ m.name }}</h3>\r\n              </mat-card-title>\r\n              <mat-card-subtitle class=\"mb-0\">{{ m.deskripsi }}</mat-card-subtitle>\r\n            </mat-card-header>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"SS.currentServerSubject?.value\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Web & Server Configuration</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"row px-3\">\r\n            <mat-slide-toggle class=\"my-2 col-12 col-md-6 col-xl-3\" [disabled]=\"!SS.mySocket?.id\"\r\n             *ngFor=\"let s of SS.currentServerSubject?.value | keyvalue\" [(ngModel)]=\"SS.currentServerSubject?.value[s.key]\" (change)=\"toggleSetting(s.key, $event.checked)\">\r\n              {{ s.key }} - {{ s.value }}\r\n            </mat-slide-toggle>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"cronJobs.length > 0\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <span class=\"float-end text-warning\" style=\"font-size: small; cursor: pointer;\" (click)=\"getAllTaskCronJobs()\">\r\n              Refresh\r\n            </span>\r\n            <b class=\"text-bifeldy\">Cron & Task Scheduler</b>\r\n          </h2>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <div class=\"row px-3\">\r\n            <mat-selection-list [multiple]=\"false\" class=\"p-0\">\r\n              <mat-grid-list [cols]=\"GS.gridListBreakpoint\" rowHeight=\"72px\">\r\n                <mat-grid-tile *ngFor=\"let t of cronJobs\">\r\n                  <mat-list-option (click)=\"toggleCronJob(t)\" class=\"text-{{ t.running ? 'warning' : 'danger' }}\">\r\n                    <mat-icon mat-list-icon class=\"ps-3\">update</mat-icon>\r\n                    <h4 matLine>{{ t.id }}</h4>\r\n                    <p matLine>\r\n                      last: {{ t.last_date | date:'d MMMM y, HH:mm:ss z' }}\r\n                      <br />\r\n                      next: {{ t.next_date | date:'d MMMM y, HH:mm:ss z' }}\r\n                    </p>\r\n                  </mat-list-option>\r\n                </mat-grid-tile>\r\n              </mat-grid-list>\r\n            </mat-selection-list>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 sticky-top bg-bifeldy\">\r\n          <h2 class=\"pt-3 border-bottom-dotted\">\r\n            <b class=\"text-bifeldy\">Request & Response Logs</b>\r\n          </h2>\r\n        </div>\r\n        <mat-form-field class=\"p-3 col-12\" appearance=\"outline\" [color]=\"'accent'\">\r\n          <mat-label>Request & Response Logs</mat-label>\r\n          <textarea matInput rows=\"10\" [(ngModel)]=\"SS.serverLog\"></textarea>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMatDatetimePickerModule, NgxMatNativeDateModule, NgxMatTimepickerModule } from '@angular-material-components/datetime-picker';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\n\r\nimport { SharedMaterialModule } from '../../_shared/modules/shared-material.module';\r\n\r\nimport { CustomPipeModule } from '../../_shared/pipes/custom-pipe.module';\r\n\r\nimport { MaterialTableModule } from '../../_shared/components/material-table/material-table.module';\r\nimport { NotificationsModule } from '../../_shared/components/notifications/notifications.module';\r\n\r\nimport { AdminMenuComponent } from './admin-menu/admin-menu.component';\r\nimport { AdminListDdlComponent } from './admin-list-ddl/admin-list-ddl.component';\r\nimport { AdminListUserComponent } from './admin-list-user/admin-list-user.component';\r\nimport { AdminListProjectTypeComponent } from './admin-list-project-type/admin-list-project-type.component';\r\nimport { AdminListPushNotificationComponent } from './admin-list-push-notification/admin-list-push-notification.component';\r\nimport { AdminListFansubMemberComponent } from './admin-list-fansub-member/admin-list-fansub-member.component';\r\nimport { AdminListBannedComponent } from './admin-list-banned/admin-list-banned.component';\r\nimport { AdminListCorsComponent } from './admin-list-cors/admin-list-cors.component';\r\nimport { AdminListInformationDialogComponent } from './admin-list-information-dialog/admin-list-information-dialog.component';\r\nimport { AdminListEmailComponent } from './admin-list-email/admin-list-email.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: AdminMenuComponent\r\n  },\r\n  {\r\n    path: 'banned-list',\r\n    component: AdminListBannedComponent,\r\n    data: {\r\n      title: 'Admin - List All Banned User',\r\n      description: 'Kelola Banned User',\r\n      keywords: 'Kelola Banned User'\r\n    }\r\n  },\r\n  {\r\n    path: 'cors-list',\r\n    component: AdminListCorsComponent,\r\n    data: {\r\n      title: 'CORS - List All Api Key',\r\n      description: 'Kelola Api Key',\r\n      keywords: 'Kelola Api Key'\r\n    }\r\n  },\r\n  {\r\n    path: 'ddl-list',\r\n    component: AdminListDdlComponent,\r\n    data: {\r\n      title: 'Admin - List All Berkas DDL',\r\n      description: 'Kelola Berkas DDL',\r\n      keywords: 'Kelola Berkas DDL'\r\n    }\r\n  },\r\n  {\r\n    path: 'user-list',\r\n    component: AdminListUserComponent,\r\n    data: {\r\n      title: 'Admin - List All Users',\r\n      description: 'Atur Seluruh Member',\r\n      keywords: 'BAN & UN-BAN User'\r\n    }\r\n  },\r\n  {\r\n    path: 'project-type',\r\n    component: AdminListProjectTypeComponent,\r\n    data: {\r\n      title: 'Admin - List All Project Type',\r\n      description: 'Atur Kategori Garapan',\r\n      keywords: 'Jenis Proyek Berkas'\r\n    }\r\n  },\r\n  {\r\n    path: 'fansub-member',\r\n    component: AdminListFansubMemberComponent,\r\n    data: {\r\n      title: 'Admin - List All Fansub Member',\r\n      description: 'Atur Keanggotaan Fansub',\r\n      keywords: 'Keanggotaan Fansub'\r\n    }\r\n  },\r\n  {\r\n    path: 'push-notification',\r\n    component: AdminListPushNotificationComponent,\r\n    data: {\r\n      title: 'Admin - Push Notification',\r\n      description: 'Buat Pengumuman Dadakan',\r\n      keywords: 'Push Notification'\r\n    }\r\n  },\r\n  {\r\n    path: 'information',\r\n    component: AdminListInformationDialogComponent,\r\n    data: {\r\n      title: 'Admin - List All Information',\r\n      description: 'Atur Informasi Dialog',\r\n      keywords: 'Informations'\r\n    }\r\n  },\r\n  {\r\n    path: 'email',\r\n    component: AdminListEmailComponent,\r\n    data: {\r\n      title: 'Admin - List All Email',\r\n      description: 'Email Inbox & Outbox',\r\n      keywords: 'Surat Elektronik'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminMenuComponent,\r\n    AdminListDdlComponent,\r\n    AdminListUserComponent,\r\n    AdminListProjectTypeComponent,\r\n    AdminListPushNotificationComponent,\r\n    AdminListFansubMemberComponent,\r\n    AdminListBannedComponent,\r\n    AdminListCorsComponent,\r\n    AdminListInformationDialogComponent,\r\n    AdminListEmailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    SharedMaterialModule,\r\n    MaterialTableModule,\r\n    NotificationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxMatNativeDateModule,\r\n    NgxMatDatetimePickerModule,\r\n    NgxMatTimepickerModule,\r\n    MaterialFileInputModule,\r\n    AngularEditorModule,\r\n    CustomPipeModule\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { JsonResponse, TaskCronJobModel } from '../../../models/req-res.model';\r\n\r\nimport { ApiService } from './api.service';\r\nimport { GlobalService } from './global.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskCronJobService {\r\n\r\n  constructor(\r\n    private api: ApiService,\r\n    private gs: GlobalService\r\n  ) {\r\n    if (this.gs.isBrowser) {\r\n      //\r\n    }\r\n  }\r\n\r\n  getAllTaskCronJobs(): Observable<JsonResponse<TaskCronJobModel>> {\r\n    return this.api.getData(`/task-cron-job`);\r\n  }\r\n\r\n  toggleOnOffTaskCronJob(tcrId): Observable<JsonResponse<TaskCronJobModel>> {\r\n    return this.api.putData(`/task-cron-job/${tcrId}`);\r\n  }\r\n\r\n}\r\n","import * as i7 from '@angular/cdk/portal';\nimport { ComponentPortal, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, Injectable, Optional, Inject, ViewChild, forwardRef, TemplateRef, ContentChild, Directive, NgModule } from '@angular/core';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { ESCAPE, SPACE, ENTER, PAGE_DOWN, PAGE_UP, END, HOME, DOWN_ARROW, UP_ARROW, RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { take, startWith, takeUntil, debounceTime, filter } from 'rxjs/operators';\nimport * as i1$1 from '@angular/material/datepicker';\nimport { DateRange, matDatepickerAnimations, MAT_DATEPICKER_SCROLL_STRATEGY, MatDatepickerModule, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER } from '@angular/material/datepicker';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { DateAdapter, mixinColor, MAT_DATE_LOCALE } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/bidi';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i9 from '@angular/cdk/overlay';\nimport { OverlayConfig } from '@angular/cdk/overlay';\nimport * as i2$1 from '@angular/forms';\nimport { Validators, NG_VALUE_ACCESSOR, NG_VALIDATORS, ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport * as i4 from '@angular/material/icon';\nimport { MatIconModule } from '@angular/material/icon';\nimport * as i2$2 from '@angular/material/form-field';\nimport * as i7$1 from '@angular/material/input';\nimport { MAT_INPUT_VALUE_ACCESSOR, MatInputModule } from '@angular/material/input';\nimport * as i8 from '@angular/material/dialog';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport * as i1$2 from '@angular/cdk/platform';\nimport { PlatformModule } from '@angular/cdk/platform';\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst NGX_MAT_DATE_FORMATS = new InjectionToken('ngx-mat-date-formats');\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * An internal class that represents the data corresponding to a single calendar cell.\r\n * @docs-private\r\n */\r\nclass NgxMatCalendarCell {\r\n    constructor(value, displayValue, ariaLabel, enabled, cssClasses = {}, compareValue = value, rawValue) {\r\n        this.value = value;\r\n        this.displayValue = displayValue;\r\n        this.ariaLabel = ariaLabel;\r\n        this.enabled = enabled;\r\n        this.cssClasses = cssClasses;\r\n        this.compareValue = compareValue;\r\n        this.rawValue = rawValue;\r\n    }\r\n}\r\n/**\r\n * An internal component used to display calendar data in a table.\r\n * @docs-private\r\n */\r\nclass NgxMatCalendarBody {\r\n    constructor(_elementRef, _ngZone) {\r\n        this._elementRef = _elementRef;\r\n        this._ngZone = _ngZone;\r\n        /** The number of columns in the table. */\r\n        this.numCols = 7;\r\n        /** The cell number of the active cell in the table. */\r\n        this.activeCell = 0;\r\n        /** Whether a range is being selected. */\r\n        this.isRange = false;\r\n        /**\r\n         * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\r\n         * maintained even as the table resizes.\r\n         */\r\n        this.cellAspectRatio = 1;\r\n        /** Start of the preview range. */\r\n        this.previewStart = null;\r\n        /** End of the preview range. */\r\n        this.previewEnd = null;\r\n        /** Emits when a new value is selected. */\r\n        this.selectedValueChange = new EventEmitter();\r\n        /** Emits when the preview has changed as a result of a user action. */\r\n        this.previewChange = new EventEmitter();\r\n        /**\r\n         * Event handler for when the user enters an element\r\n         * inside the calendar body (e.g. by hovering in or focus).\r\n         */\r\n        this._enterHandler = (event) => {\r\n            if (this._skipNextFocus && event.type === 'focus') {\r\n                this._skipNextFocus = false;\r\n                return;\r\n            }\r\n            // We only need to hit the zone when we're selecting a range.\r\n            if (event.target && this.isRange) {\r\n                const cell = this._getCellFromElement(event.target);\r\n                if (cell) {\r\n                    this._ngZone.run(() => this.previewChange.emit({ value: cell.enabled ? cell : null, event }));\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Event handler for when the user's pointer leaves an element\r\n         * inside the calendar body (e.g. by hovering out or blurring).\r\n         */\r\n        this._leaveHandler = (event) => {\r\n            // We only need to hit the zone when we're selecting a range.\r\n            if (this.previewEnd !== null && this.isRange) {\r\n                // Only reset the preview end value when leaving cells. This looks better, because\r\n                // we have a gap between the cells and the rows and we don't want to remove the\r\n                // range just for it to show up again when the user moves a few pixels to the side.\r\n                if (event.target && isTableCell(event.target)) {\r\n                    this._ngZone.run(() => this.previewChange.emit({ value: null, event }));\r\n                }\r\n            }\r\n        };\r\n        _ngZone.runOutsideAngular(() => {\r\n            const element = _elementRef.nativeElement;\r\n            element.addEventListener('mouseenter', this._enterHandler, true);\r\n            element.addEventListener('focus', this._enterHandler, true);\r\n            element.addEventListener('mouseleave', this._leaveHandler, true);\r\n            element.addEventListener('blur', this._leaveHandler, true);\r\n        });\r\n    }\r\n    /** Called when a cell is clicked. */\r\n    _cellClicked(cell, event) {\r\n        if (cell.enabled) {\r\n            this.selectedValueChange.emit({ value: cell.value, event });\r\n        }\r\n    }\r\n    /** Returns whether a cell should be marked as selected. */\r\n    _isSelected(cell) {\r\n        return this.startValue === cell.compareValue || this.endValue === cell.compareValue;\r\n    }\r\n    ngOnChanges(changes) {\r\n        const columnChanges = changes['numCols'];\r\n        const { rows, numCols } = this;\r\n        if (changes['rows'] || columnChanges) {\r\n            this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\r\n        }\r\n        if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\r\n            this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\r\n        }\r\n        if (columnChanges || !this._cellWidth) {\r\n            this._cellWidth = `${100 / numCols}%`;\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        const element = this._elementRef.nativeElement;\r\n        element.removeEventListener('mouseenter', this._enterHandler, true);\r\n        element.removeEventListener('focus', this._enterHandler, true);\r\n        element.removeEventListener('mouseleave', this._leaveHandler, true);\r\n        element.removeEventListener('blur', this._leaveHandler, true);\r\n    }\r\n    /** Returns whether a cell is active. */\r\n    _isActiveCell(rowIndex, colIndex) {\r\n        let cellNumber = rowIndex * this.numCols + colIndex;\r\n        // Account for the fact that the first row may not have as many cells.\r\n        if (rowIndex) {\r\n            cellNumber -= this._firstRowOffset;\r\n        }\r\n        return cellNumber == this.activeCell;\r\n    }\r\n    /** Focuses the active cell after the microtask queue is empty. */\r\n    _focusActiveCell(movePreview = true) {\r\n        this._ngZone.runOutsideAngular(() => {\r\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n                const activeCell = this._elementRef.nativeElement.querySelector('.ngx-mat-calendar-body-active');\r\n                if (activeCell) {\r\n                    if (!movePreview) {\r\n                        this._skipNextFocus = true;\r\n                    }\r\n                    activeCell.focus();\r\n                }\r\n            });\r\n        });\r\n    }\r\n    /** Gets whether a value is the start of the main range. */\r\n    _isRangeStart(value) {\r\n        return isStart(value, this.startValue, this.endValue);\r\n    }\r\n    /** Gets whether a value is the end of the main range. */\r\n    _isRangeEnd(value) {\r\n        return isEnd(value, this.startValue, this.endValue);\r\n    }\r\n    /** Gets whether a value is within the currently-selected range. */\r\n    _isInRange(value) {\r\n        return isInRange(value, this.startValue, this.endValue, this.isRange);\r\n    }\r\n    /** Gets whether a value is the start of the comparison range. */\r\n    _isComparisonStart(value) {\r\n        return isStart(value, this.comparisonStart, this.comparisonEnd);\r\n    }\r\n    /** Whether the cell is a start bridge cell between the main and comparison ranges. */\r\n    _isComparisonBridgeStart(value, rowIndex, colIndex) {\r\n        if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\r\n            return false;\r\n        }\r\n        let previousCell = this.rows[rowIndex][colIndex - 1];\r\n        if (!previousCell) {\r\n            const previousRow = this.rows[rowIndex - 1];\r\n            previousCell = previousRow && previousRow[previousRow.length - 1];\r\n        }\r\n        return previousCell && !this._isRangeEnd(previousCell.compareValue);\r\n    }\r\n    /** Whether the cell is an end bridge cell between the main and comparison ranges. */\r\n    _isComparisonBridgeEnd(value, rowIndex, colIndex) {\r\n        if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\r\n            return false;\r\n        }\r\n        let nextCell = this.rows[rowIndex][colIndex + 1];\r\n        if (!nextCell) {\r\n            const nextRow = this.rows[rowIndex + 1];\r\n            nextCell = nextRow && nextRow[0];\r\n        }\r\n        return nextCell && !this._isRangeStart(nextCell.compareValue);\r\n    }\r\n    /** Gets whether a value is the end of the comparison range. */\r\n    _isComparisonEnd(value) {\r\n        return isEnd(value, this.comparisonStart, this.comparisonEnd);\r\n    }\r\n    /** Gets whether a value is within the current comparison range. */\r\n    _isInComparisonRange(value) {\r\n        return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\r\n    }\r\n    /** Gets whether a value is the start of the preview range. */\r\n    _isPreviewStart(value) {\r\n        return isStart(value, this.previewStart, this.previewEnd);\r\n    }\r\n    /** Gets whether a value is the end of the preview range. */\r\n    _isPreviewEnd(value) {\r\n        return isEnd(value, this.previewStart, this.previewEnd);\r\n    }\r\n    /** Gets whether a value is inside the preview range. */\r\n    _isInPreview(value) {\r\n        return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\r\n    }\r\n    /** Finds the NgxMatCalendarCell that corresponds to a DOM node. */\r\n    _getCellFromElement(element) {\r\n        let cell;\r\n        if (isTableCell(element)) {\r\n            cell = element;\r\n        }\r\n        else if (isTableCell(element.parentNode)) {\r\n            cell = element.parentNode;\r\n        }\r\n        if (cell) {\r\n            const row = cell.getAttribute('data-ngx-mat-row');\r\n            const col = cell.getAttribute('data-ngx-mat-col');\r\n            if (row && col) {\r\n                return this.rows[parseInt(row)][parseInt(col)];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatCalendarBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatCalendarBody, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatCalendarBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatCalendarBody, selector: \"[ngx-mat-calendar-body]\", inputs: { label: \"label\", rows: \"rows\", todayValue: \"todayValue\", startValue: \"startValue\", endValue: \"endValue\", labelMinRequiredCells: \"labelMinRequiredCells\", numCols: \"numCols\", activeCell: \"activeCell\", isRange: \"isRange\", cellAspectRatio: \"cellAspectRatio\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\", previewStart: \"previewStart\", previewEnd: \"previewEnd\" }, outputs: { selectedValueChange: \"selectedValueChange\", previewChange: \"previewChange\" }, host: { attributes: { \"role\": \"grid\", \"aria-readonly\": \"true\" }, classAttribute: \"ngx-mat-calendar-body\" }, exportAs: [\"NgxMatCalendarBody\"], usesOnChanges: true, ngImport: i0, template: \"<!--\\r\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\r\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\r\\n-->\\r\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\r\\n  <td class=\\\"mat-calendar-body-label\\\"\\r\\n      [attr.colspan]=\\\"numCols\\\"\\r\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\r\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\r\\n    {{label}}\\r\\n  </td>\\r\\n</tr>\\r\\n\\r\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\r\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\r\\n  <!--\\r\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\r\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\r\\n    percentage of the width (a variant of the trick described here:\\r\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\r\\n  -->\\r\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\r\\n      aria-hidden=\\\"true\\\"\\r\\n      class=\\\"mat-calendar-body-label\\\"\\r\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\r\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\r\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\r\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\r\\n  </td>\\r\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\r\\n      role=\\\"gridcell\\\"\\r\\n      class=\\\"mat-calendar-body-cell\\\"\\r\\n      [ngClass]=\\\"item.cssClasses\\\"\\r\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\r\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\r\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\r\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\r\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\r\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\r\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\r\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\r\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\r\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\r\\n      [attr.aria-selected]=\\\"_isSelected(item)\\\"\\r\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\r\\n      [style.width]=\\\"_cellWidth\\\"\\r\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\r\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\r\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\r\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item)\\\"\\r\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\r\\n        {{item.displayValue}}\\r\\n      </div>\\r\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\r\\n  </td>\\r\\n</tr>\\r\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell:before,.mat-calendar-body-cell:after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range):before,.mat-calendar-body-range-start:after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start):before,.mat-calendar-body-comparison-start:after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range):before,[dir=rtl] .mat-calendar-body-range-start:after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start):before,[dir=rtl] .mat-calendar-body-comparison-start:after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0 999px 999px 0}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range):before,.mat-calendar-body-range-end:after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end):before,.mat-calendar-body-comparison-end:after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range):before,[dir=rtl] .mat-calendar-body-range-end:after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end):before,[dir=rtl] .mat-calendar-body-comparison-end:after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:999px 0 0 999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end:after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start:after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end:after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end:after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start:after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start:after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media (hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatCalendarBody, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: '[ngx-mat-calendar-body]', host: {\r\n                        'class': 'ngx-mat-calendar-body',\r\n                        'role': 'grid',\r\n                        'aria-readonly': 'true'\r\n                    }, exportAs: 'NgxMatCalendarBody', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<!--\\r\\n  If there's not enough space in the first row, create a separate label row. We mark this row as\\r\\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\\r\\n-->\\r\\n<tr *ngIf=\\\"_firstRowOffset < labelMinRequiredCells\\\" aria-hidden=\\\"true\\\">\\r\\n  <td class=\\\"mat-calendar-body-label\\\"\\r\\n      [attr.colspan]=\\\"numCols\\\"\\r\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\r\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\r\\n    {{label}}\\r\\n  </td>\\r\\n</tr>\\r\\n\\r\\n<!-- Create the first row separately so we can include a special spacer cell. -->\\r\\n<tr *ngFor=\\\"let row of rows; let rowIndex = index\\\" role=\\\"row\\\">\\r\\n  <!--\\r\\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\\r\\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\\r\\n    percentage of the width (a variant of the trick described here:\\r\\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\\r\\n  -->\\r\\n  <td *ngIf=\\\"rowIndex === 0 && _firstRowOffset\\\"\\r\\n      aria-hidden=\\\"true\\\"\\r\\n      class=\\\"mat-calendar-body-label\\\"\\r\\n      [attr.colspan]=\\\"_firstRowOffset\\\"\\r\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\r\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\r\\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\\r\\n  </td>\\r\\n  <td *ngFor=\\\"let item of row; let colIndex = index\\\"\\r\\n      role=\\\"gridcell\\\"\\r\\n      class=\\\"mat-calendar-body-cell\\\"\\r\\n      [ngClass]=\\\"item.cssClasses\\\"\\r\\n      [tabindex]=\\\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\\\"\\r\\n      [attr.data-mat-row]=\\\"rowIndex\\\"\\r\\n      [attr.data-mat-col]=\\\"colIndex\\\"\\r\\n      [class.mat-calendar-body-disabled]=\\\"!item.enabled\\\"\\r\\n      [class.mat-calendar-body-active]=\\\"_isActiveCell(rowIndex, colIndex)\\\"\\r\\n      [class.mat-calendar-body-range-start]=\\\"_isRangeStart(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-range-end]=\\\"_isRangeEnd(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-in-range]=\\\"_isInRange(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-comparison-bridge-start]=\\\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\\\"\\r\\n      [class.mat-calendar-body-comparison-bridge-end]=\\\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\\\"\\r\\n      [class.mat-calendar-body-comparison-start]=\\\"_isComparisonStart(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-comparison-end]=\\\"_isComparisonEnd(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-in-comparison-range]=\\\"_isInComparisonRange(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-preview-start]=\\\"_isPreviewStart(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-preview-end]=\\\"_isPreviewEnd(item.compareValue)\\\"\\r\\n      [class.mat-calendar-body-in-preview]=\\\"_isInPreview(item.compareValue)\\\"\\r\\n      [attr.aria-label]=\\\"item.ariaLabel\\\"\\r\\n      [attr.aria-disabled]=\\\"!item.enabled || null\\\"\\r\\n      [attr.aria-selected]=\\\"_isSelected(item)\\\"\\r\\n      (click)=\\\"_cellClicked(item, $event)\\\"\\r\\n      [style.width]=\\\"_cellWidth\\\"\\r\\n      [style.paddingTop]=\\\"_cellPadding\\\"\\r\\n      [style.paddingBottom]=\\\"_cellPadding\\\">\\r\\n      <div class=\\\"mat-calendar-body-cell-content mat-focus-indicator\\\"\\r\\n        [class.mat-calendar-body-selected]=\\\"_isSelected(item)\\\"\\r\\n        [class.mat-calendar-body-today]=\\\"todayValue === item.compareValue\\\">\\r\\n        {{item.displayValue}}\\r\\n      </div>\\r\\n      <div class=\\\"mat-calendar-body-cell-preview\\\"></div>\\r\\n  </td>\\r\\n</tr>\\r\\n\", styles: [\".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell:before,.mat-calendar-body-cell:after,.mat-calendar-body-cell-preview{content:\\\"\\\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range):before,.mat-calendar-body-range-start:after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start):before,.mat-calendar-body-comparison-start:after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range):before,[dir=rtl] .mat-calendar-body-range-start:after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start):before,[dir=rtl] .mat-calendar-body-comparison-start:after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0 999px 999px 0}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range):before,.mat-calendar-body-range-end:after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end):before,.mat-calendar-body-comparison-end:after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range):before,[dir=rtl] .mat-calendar-body-range-end:after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end):before,[dir=rtl] .mat-calendar-body-comparison-end:after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:999px 0 0 999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end:after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start:after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end:after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end:after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start:after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start:after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media (hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }]; }, propDecorators: { label: [{\r\n                type: Input\r\n            }], rows: [{\r\n                type: Input\r\n            }], todayValue: [{\r\n                type: Input\r\n            }], startValue: [{\r\n                type: Input\r\n            }], endValue: [{\r\n                type: Input\r\n            }], labelMinRequiredCells: [{\r\n                type: Input\r\n            }], numCols: [{\r\n                type: Input\r\n            }], activeCell: [{\r\n                type: Input\r\n            }], isRange: [{\r\n                type: Input\r\n            }], cellAspectRatio: [{\r\n                type: Input\r\n            }], comparisonStart: [{\r\n                type: Input\r\n            }], comparisonEnd: [{\r\n                type: Input\r\n            }], previewStart: [{\r\n                type: Input\r\n            }], previewEnd: [{\r\n                type: Input\r\n            }], selectedValueChange: [{\r\n                type: Output\r\n            }], previewChange: [{\r\n                type: Output\r\n            }] } });\r\n/** Checks whether a node is a table cell element. */\r\nfunction isTableCell(node) {\r\n    return node.nodeName === 'TD';\r\n}\r\n/** Checks whether a value is the start of a range. */\r\nfunction isStart(value, start, end) {\r\n    return end !== null && start !== end && value < end && value === start;\r\n}\r\n/** Checks whether a value is the end of a range. */\r\nfunction isEnd(value, start, end) {\r\n    return start !== null && start !== end && value >= start && value === end;\r\n}\r\n/** Checks whether a value is inside of a range. */\r\nfunction isInRange(value, start, end, rangeEnabled) {\r\n    return rangeEnabled && start !== null && end !== null && start !== end &&\r\n        value >= start && value <= end;\r\n}\n\nclass NgxMatDateAdapter extends DateAdapter {\r\n    /**\r\n     * Check if two date have same time\r\n     * @param a Date 1\r\n     * @param b Date 2\r\n     */\r\n    isSameTime(a, b) {\r\n        if (a == null || b == null)\r\n            return true;\r\n        return this.getHour(a) === this.getHour(b)\r\n            && this.getMinute(a) === this.getMinute(b)\r\n            && this.getSecond(a) === this.getSecond(b);\r\n    }\r\n    /**\r\n     * Copy time from a date to a another date\r\n     * @param toDate\r\n     * @param fromDate\r\n     */\r\n    copyTime(toDate, fromDate) {\r\n        this.setHour(toDate, this.getHour(fromDate));\r\n        this.setMinute(toDate, this.getMinute(fromDate));\r\n        this.setSecond(toDate, this.getSecond(fromDate));\r\n    }\r\n    /**\r\n   * Compares two dates.\r\n   * @param first The first date to compare.\r\n   * @param second The second date to compare.\r\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n   *     a number greater than 0 if the first date is later.\r\n   */\r\n    compareDateWithTime(first, second, showSeconds) {\r\n        let res = super.compareDate(first, second) ||\r\n            this.getHour(first) - this.getHour(second) ||\r\n            this.getMinute(first) - this.getMinute(second);\r\n        if (showSeconds) {\r\n            res = res || this.getSecond(first) - this.getSecond(second);\r\n        }\r\n        return res;\r\n    }\r\n    /**\r\n     * Set time by using default values\r\n     * @param defaultTime List default values [hour, minute, second]\r\n     */\r\n    setTimeByDefaultValues(date, defaultTime) {\r\n        if (!Array.isArray(defaultTime)) {\r\n            throw Error('@Input DefaultTime should be an array');\r\n        }\r\n        this.setHour(date, defaultTime[0] || 0);\r\n        this.setMinute(date, defaultTime[1] || 0);\r\n        this.setSecond(date, defaultTime[2] || 0);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Injection token used to customize the date range selection behavior. */\r\nconst NGX_MAT_DATE_RANGE_SELECTION_STRATEGY = new InjectionToken('NGX_MAT_DATE_RANGE_SELECTION_STRATEGY');\r\n/** Provides the default date range selection behavior. */\r\nclass DefaultNgxMatCalendarRangeStrategy {\r\n    constructor(_dateAdapter) {\r\n        this._dateAdapter = _dateAdapter;\r\n    }\r\n    selectionFinished(date, currentRange) {\r\n        let { start, end } = currentRange;\r\n        if (start == null) {\r\n            start = date;\r\n        }\r\n        else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\r\n            end = date;\r\n        }\r\n        else {\r\n            start = date;\r\n            end = null;\r\n        }\r\n        return new DateRange(start, end);\r\n    }\r\n    createPreview(activeDate, currentRange) {\r\n        let start = null;\r\n        let end = null;\r\n        if (currentRange.start && !currentRange.end && activeDate) {\r\n            start = currentRange.start;\r\n            end = activeDate;\r\n        }\r\n        return new DateRange(start, end);\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ DefaultNgxMatCalendarRangeStrategy.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultNgxMatCalendarRangeStrategy, deps: [{ token: NgxMatDateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\n/** @nocollapse */ /** @nocollapse */ DefaultNgxMatCalendarRangeStrategy.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultNgxMatCalendarRangeStrategy });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: DefaultNgxMatCalendarRangeStrategy, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: NgxMatDateAdapter }]; } });\n\nconst LIMIT_TIMES = {\r\n    minHour: 0,\r\n    maxHour: 24,\r\n    minMinute: 0,\r\n    maxMinute: 60,\r\n    minSecond: 0,\r\n    maxSecond: 60,\r\n    meridian: 12\r\n};\r\nconst MERIDIANS = {\r\n    AM: 'AM',\r\n    PM: 'PM'\r\n};\r\nconst DEFAULT_STEP = 1;\r\nconst NUMERIC_REGEX = /[^0-9]/g;\r\nconst PATTERN_INPUT_HOUR = /^(2[0-3]|[0-1][0-9]|[0-9])$/;\r\nconst PATTERN_INPUT_MINUTE = /^([0-5][0-9]|[0-9])$/;\r\nconst PATTERN_INPUT_SECOND = /^([0-5][0-9]|[0-9])$/;\r\nfunction formatTwoDigitTimeValue(val) {\r\n    const txt = val.toString();\r\n    return txt.length > 1 ? txt : `0${txt}`;\r\n}\r\nfunction createMissingDateImplError(provider) {\r\n    return Error(`NgxMatDatepicker: No provider found for ${provider}. You must import one of the following ` +\r\n        `modules at your application root: NgxMatNativeDateModule, NgxMatMomentModule, or provide a ` +\r\n        `custom implementation.`);\r\n}\r\n/** Formats a range of years. */\r\nfunction formatYearRange(start, end) {\r\n    return `${start} \\u2013 ${end}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst DAYS_PER_WEEK = 7;\r\n/**\r\n * An internal component used to display a single month in the datepicker.\r\n * @docs-private\r\n */\r\nclass NgxMatMonthView {\r\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._dateFormats = _dateFormats;\r\n        this._dateAdapter = _dateAdapter;\r\n        this._dir = _dir;\r\n        this._rangeStrategy = _rangeStrategy;\r\n        this._rerenderSubscription = Subscription.EMPTY;\r\n        /** Emits when a new date is selected. */\r\n        this.selectedChange = new EventEmitter();\r\n        /** Emits when any date is selected. */\r\n        this._userSelection = new EventEmitter();\r\n        /** Emits when any date is activated. */\r\n        this.activeDateChange = new EventEmitter();\r\n        if (!this._dateAdapter) {\r\n            throw createMissingDateImplError('NgxMatDateAdapter');\r\n        }\r\n        if (!this._dateFormats) {\r\n            throw createMissingDateImplError('NGX_MAT_DATE_FORMATS');\r\n        }\r\n        this._activeDate = this._dateAdapter.today();\r\n    }\r\n    /**\r\n     * The date to display in this month view (everything other than the month and year is ignored).\r\n     */\r\n    get activeDate() { return this._activeDate; }\r\n    set activeDate(value) {\r\n        const oldActiveDate = this._activeDate;\r\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\r\n        if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\r\n            this._init();\r\n        }\r\n    }\r\n    /** The currently selected date. */\r\n    get selected() { return this._selected; }\r\n    set selected(value) {\r\n        if (value instanceof DateRange) {\r\n            this._selected = value;\r\n        }\r\n        else {\r\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n        }\r\n        this._setRanges(this._selected);\r\n    }\r\n    /** The minimum selectable date. */\r\n    get minDate() { return this._minDate; }\r\n    set minDate(value) {\r\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /** The maximum selectable date. */\r\n    get maxDate() { return this._maxDate; }\r\n    set maxDate(value) {\r\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    ngAfterContentInit() {\r\n        this._rerenderSubscription = this._dateAdapter.localeChanges\r\n            .pipe(startWith(null))\r\n            .subscribe(() => this._init());\r\n    }\r\n    ngOnDestroy() {\r\n        this._rerenderSubscription.unsubscribe();\r\n    }\r\n    /** Handles when a new date is selected. */\r\n    _dateSelected(event) {\r\n        const date = event.value;\r\n        const selectedYear = this._dateAdapter.getYear(this.activeDate);\r\n        const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\r\n        const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\r\n        let rangeStartDate;\r\n        let rangeEndDate;\r\n        if (this._selected instanceof DateRange) {\r\n            rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\r\n            rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\r\n        }\r\n        else {\r\n            rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\r\n        }\r\n        if (rangeStartDate !== date || rangeEndDate !== date) {\r\n            this.selectedChange.emit(selectedDate);\r\n        }\r\n        this._userSelection.emit({ value: selectedDate, event: event.event });\r\n    }\r\n    /** Handles keydown events on the calendar body when calendar is in month view. */\r\n    _handleCalendarBodyKeydown(event) {\r\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n        // disabled ones from being selected. This may not be ideal, we should look into whether\r\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n        const oldActiveDate = this._activeDate;\r\n        const isRtl = this._isRtl();\r\n        switch (event.keyCode) {\r\n            case LEFT_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\r\n                break;\r\n            case RIGHT_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\r\n                break;\r\n            case UP_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\r\n                break;\r\n            case DOWN_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\r\n                break;\r\n            case HOME:\r\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));\r\n                break;\r\n            case END:\r\n                this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\r\n                    this._dateAdapter.getDate(this._activeDate)));\r\n                break;\r\n            case PAGE_UP:\r\n                this.activeDate = event.altKey ?\r\n                    this._dateAdapter.addCalendarYears(this._activeDate, -1) :\r\n                    this._dateAdapter.addCalendarMonths(this._activeDate, -1);\r\n                break;\r\n            case PAGE_DOWN:\r\n                this.activeDate = event.altKey ?\r\n                    this._dateAdapter.addCalendarYears(this._activeDate, 1) :\r\n                    this._dateAdapter.addCalendarMonths(this._activeDate, 1);\r\n                break;\r\n            case ENTER:\r\n            case SPACE:\r\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\r\n                    this._dateSelected({ value: this._dateAdapter.getDate(this._activeDate), event });\r\n                    // Prevent unexpected default actions such as form submission.\r\n                    event.preventDefault();\r\n                }\r\n                return;\r\n            case ESCAPE:\r\n                // Abort the current range selection if the user presses escape mid-selection.\r\n                if (this._previewEnd != null) {\r\n                    this._previewStart = this._previewEnd = null;\r\n                    this.selectedChange.emit(null);\r\n                    this._userSelection.emit({ value: null, event });\r\n                    event.preventDefault();\r\n                    event.stopPropagation(); // Prevents the overlay from closing.\r\n                }\r\n                return;\r\n            default:\r\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n                return;\r\n        }\r\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\r\n            this.activeDateChange.emit(this.activeDate);\r\n        }\r\n        this._focusActiveCell();\r\n        // Prevent unexpected default actions such as form submission.\r\n        event.preventDefault();\r\n    }\r\n    /** Initializes this month view. */\r\n    _init() {\r\n        this._setRanges(this.selected);\r\n        this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\r\n        this._monthLabel =\r\n            this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\r\n                .toLocaleUpperCase();\r\n        let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);\r\n        this._firstWeekOffset =\r\n            (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\r\n                this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\r\n        this._initWeekdays();\r\n        this._createWeekCells();\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Focuses the active cell after the microtask queue is empty. */\r\n    _focusActiveCell(movePreview) {\r\n        this._matCalendarBody._focusActiveCell(movePreview);\r\n    }\r\n    /** Called when the user has activated a new cell and the preview needs to be updated. */\r\n    _previewChanged({ event, value: cell }) {\r\n        if (this._rangeStrategy) {\r\n            // We can assume that this will be a range, because preview\r\n            // events aren't fired for single date selections.\r\n            const value = cell ? cell.rawValue : null;\r\n            const previewRange = this._rangeStrategy.createPreview(value, this.selected, event);\r\n            this._previewStart = this._getCellCompareValue(previewRange.start);\r\n            this._previewEnd = this._getCellCompareValue(previewRange.end);\r\n            // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\r\n            // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\r\n            // when navigating one month back using the keyboard which will cause this handler\r\n            // to throw a \"changed after checked\" error when updating the preview state.\r\n            this._changeDetectorRef.detectChanges();\r\n        }\r\n    }\r\n    /** Initializes the weekdays. */\r\n    _initWeekdays() {\r\n        const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\r\n        const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\r\n        const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\r\n        // Rotate the labels for days of the week based on the configured first day of the week.\r\n        let weekdays = longWeekdays.map((long, i) => {\r\n            return { long, narrow: narrowWeekdays[i] };\r\n        });\r\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\r\n    }\r\n    /** Creates MatCalendarCells for the dates in this month. */\r\n    _createWeekCells() {\r\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\r\n        const dateNames = this._dateAdapter.getDateNames();\r\n        this._weeks = [[]];\r\n        for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\r\n            if (cell == DAYS_PER_WEEK) {\r\n                this._weeks.push([]);\r\n                cell = 0;\r\n            }\r\n            const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);\r\n            const enabled = this._shouldEnableDate(date);\r\n            const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\r\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\r\n            this._weeks[this._weeks.length - 1].push(new NgxMatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));\r\n        }\r\n    }\r\n    /** Date filter for the month */\r\n    _shouldEnableDate(date) {\r\n        return !!date &&\r\n            (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\r\n            (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\r\n            (!this.dateFilter || this.dateFilter(date));\r\n    }\r\n    /**\r\n     * Gets the date in this month that the given Date falls on.\r\n     * Returns null if the given Date is in another month.\r\n     */\r\n    _getDateInCurrentMonth(date) {\r\n        return date && this._hasSameMonthAndYear(date, this.activeDate) ?\r\n            this._dateAdapter.getDate(date) : null;\r\n    }\r\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\r\n    _hasSameMonthAndYear(d1, d2) {\r\n        return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\r\n            this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\r\n    }\r\n    /** Gets the value that will be used to one cell to another. */\r\n    _getCellCompareValue(date) {\r\n        if (date) {\r\n            // We use the time since the Unix epoch to compare dates in this view, rather than the\r\n            // cell values, because we need to support ranges that span across multiple months/years.\r\n            const year = this._dateAdapter.getYear(date);\r\n            const month = this._dateAdapter.getMonth(date);\r\n            const day = this._dateAdapter.getDate(date);\r\n            return new Date(year, month, day).getTime();\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * @param obj The object to check.\r\n     * @returns The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    _getValidDateOrNull(obj) {\r\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n    /** Determines whether the user has the RTL layout direction. */\r\n    _isRtl() {\r\n        return this._dir && this._dir.value === 'rtl';\r\n    }\r\n    /** Sets the current range based on a model value. */\r\n    _setRanges(selectedValue) {\r\n        if (selectedValue instanceof DateRange) {\r\n            this._rangeStart = this._getCellCompareValue(selectedValue.start);\r\n            this._rangeEnd = this._getCellCompareValue(selectedValue.end);\r\n            this._isRange = true;\r\n        }\r\n        else {\r\n            this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\r\n            this._isRange = false;\r\n        }\r\n        this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\r\n        this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatMonthView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatMonthView, deps: [{ token: i0.ChangeDetectorRef }, { token: NGX_MAT_DATE_FORMATS, optional: true }, { token: NgxMatDateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: NGX_MAT_DATE_RANGE_SELECTION_STRATEGY, optional: true }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatMonthView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatMonthView, selector: \"ngx-mat-month-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\", comparisonStart: \"comparisonStart\", comparisonEnd: \"comparisonEnd\" }, outputs: { selectedChange: \"selectedChange\", _userSelection: \"_userSelection\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: NgxMatCalendarBody, descendants: true }], exportAs: [\"ngxMatMonthView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\r\\n  <thead class=\\\"mat-calendar-table-header\\\">\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\r\\n    </tr>\\r\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\r\\n  </thead>\\r\\n  <tbody ngx-mat-calendar-body\\r\\n         [label]=\\\"_monthLabel\\\"\\r\\n         [rows]=\\\"_weeks\\\"\\r\\n         [todayValue]=\\\"_todayDate!\\\"\\r\\n         [startValue]=\\\"_rangeStart!\\\"\\r\\n         [endValue]=\\\"_rangeEnd!\\\"\\r\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\r\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\r\\n         [previewStart]=\\\"_previewStart\\\"\\r\\n         [previewEnd]=\\\"_previewEnd\\\"\\r\\n         [isRange]=\\\"_isRange\\\"\\r\\n         [labelMinRequiredCells]=\\\"3\\\"\\r\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\r\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\r\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\r\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\r\\n  </tbody>\\r\\n</table>\\r\\n\", components: [{ type: NgxMatCalendarBody, selector: \"[ngx-mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"NgxMatCalendarBody\"] }], directives: [{ type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatMonthView, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-month-view', exportAs: 'ngxMatMonthView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\r\\n  <thead class=\\\"mat-calendar-table-header\\\">\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\" *ngFor=\\\"let day of _weekdays\\\" [attr.aria-label]=\\\"day.long\\\">{{day.narrow}}</th>\\r\\n    </tr>\\r\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"7\\\" aria-hidden=\\\"true\\\"></th></tr>\\r\\n  </thead>\\r\\n  <tbody ngx-mat-calendar-body\\r\\n         [label]=\\\"_monthLabel\\\"\\r\\n         [rows]=\\\"_weeks\\\"\\r\\n         [todayValue]=\\\"_todayDate!\\\"\\r\\n         [startValue]=\\\"_rangeStart!\\\"\\r\\n         [endValue]=\\\"_rangeEnd!\\\"\\r\\n         [comparisonStart]=\\\"_comparisonRangeStart\\\"\\r\\n         [comparisonEnd]=\\\"_comparisonRangeEnd\\\"\\r\\n         [previewStart]=\\\"_previewStart\\\"\\r\\n         [previewEnd]=\\\"_previewEnd\\\"\\r\\n         [isRange]=\\\"_isRange\\\"\\r\\n         [labelMinRequiredCells]=\\\"3\\\"\\r\\n         [activeCell]=\\\"_dateAdapter.getDate(activeDate) - 1\\\"\\r\\n         (selectedValueChange)=\\\"_dateSelected($event)\\\"\\r\\n         (previewChange)=\\\"_previewChanged($event)\\\"\\r\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\r\\n  </tbody>\\r\\n</table>\\r\\n\" }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [NGX_MAT_DATE_FORMATS]\r\n                    }] }, { type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i2.Directionality, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [NGX_MAT_DATE_RANGE_SELECTION_STRATEGY]\r\n                    }, {\r\n                        type: Optional\r\n                    }] }];\r\n    }, propDecorators: { activeDate: [{\r\n                type: Input\r\n            }], selected: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], dateFilter: [{\r\n                type: Input\r\n            }], dateClass: [{\r\n                type: Input\r\n            }], comparisonStart: [{\r\n                type: Input\r\n            }], comparisonEnd: [{\r\n                type: Input\r\n            }], selectedChange: [{\r\n                type: Output\r\n            }], _userSelection: [{\r\n                type: Output\r\n            }], activeDateChange: [{\r\n                type: Output\r\n            }], _matCalendarBody: [{\r\n                type: ViewChild,\r\n                args: [NgxMatCalendarBody]\r\n            }] } });\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst yearsPerPage = 24;\r\nconst yearsPerRow = 4;\r\n/**\r\n * An internal component used to display a year selector in the datepicker.\r\n * @docs-private\r\n */\r\nclass NgxMatMultiYearView {\r\n    constructor(_changeDetectorRef, _dateAdapter, _dir) {\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._dateAdapter = _dateAdapter;\r\n        this._dir = _dir;\r\n        this._rerenderSubscription = Subscription.EMPTY;\r\n        /** Emits when a new year is selected. */\r\n        this.selectedChange = new EventEmitter();\r\n        /** Emits the selected year. This doesn't imply a change on the selected date */\r\n        this.yearSelected = new EventEmitter();\r\n        /** Emits when any date is activated. */\r\n        this.activeDateChange = new EventEmitter();\r\n        if (!this._dateAdapter) {\r\n            throw createMissingDateImplError('NgxMatDateAdapter');\r\n        }\r\n        this._activeDate = this._dateAdapter.today();\r\n    }\r\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\r\n    get activeDate() { return this._activeDate; }\r\n    set activeDate(value) {\r\n        let oldActiveDate = this._activeDate;\r\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\r\n        if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\r\n            this._init();\r\n        }\r\n    }\r\n    /** The currently selected date. */\r\n    get selected() { return this._selected; }\r\n    set selected(value) {\r\n        if (value instanceof DateRange) {\r\n            this._selected = value;\r\n        }\r\n        else {\r\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n        }\r\n        this._setSelectedYear(value);\r\n    }\r\n    /** The minimum selectable date. */\r\n    get minDate() { return this._minDate; }\r\n    set minDate(value) {\r\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /** The maximum selectable date. */\r\n    get maxDate() { return this._maxDate; }\r\n    set maxDate(value) {\r\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    ngAfterContentInit() {\r\n        this._rerenderSubscription = this._dateAdapter.localeChanges\r\n            .pipe(startWith(null))\r\n            .subscribe(() => this._init());\r\n    }\r\n    ngOnDestroy() {\r\n        this._rerenderSubscription.unsubscribe();\r\n    }\r\n    /** Initializes this multi-year view. */\r\n    _init() {\r\n        this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\r\n        // We want a range years such that we maximize the number of\r\n        // enabled dates visible at once. This prevents issues where the minimum year\r\n        // is the last item of a page OR the maximum year is the first item of a page.\r\n        // The offset from the active year to the \"slot\" for the starting year is the\r\n        // *actual* first rendered year in the multi-year view.\r\n        const activeYear = this._dateAdapter.getYear(this._activeDate);\r\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\r\n        this._years = [];\r\n        for (let i = 0, row = []; i < yearsPerPage; i++) {\r\n            row.push(minYearOfPage + i);\r\n            if (row.length == yearsPerRow) {\r\n                this._years.push(row.map(year => this._createCellForYear(year)));\r\n                row = [];\r\n            }\r\n        }\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Handles when a new year is selected. */\r\n    _yearSelected(event) {\r\n        const year = event.value;\r\n        this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\r\n        let month = this._dateAdapter.getMonth(this.activeDate);\r\n        let daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\r\n        this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\r\n    }\r\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\r\n    _handleCalendarBodyKeydown(event) {\r\n        const oldActiveDate = this._activeDate;\r\n        const isRtl = this._isRtl();\r\n        switch (event.keyCode) {\r\n            case LEFT_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\r\n                break;\r\n            case RIGHT_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\r\n                break;\r\n            case UP_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\r\n                break;\r\n            case DOWN_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\r\n                break;\r\n            case HOME:\r\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\r\n                break;\r\n            case END:\r\n                this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\r\n                break;\r\n            case PAGE_UP:\r\n                this.activeDate =\r\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\r\n                break;\r\n            case PAGE_DOWN:\r\n                this.activeDate =\r\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\r\n                break;\r\n            case ENTER:\r\n            case SPACE:\r\n                this._yearSelected({ value: this._dateAdapter.getYear(this._activeDate), event });\r\n                break;\r\n            default:\r\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n                return;\r\n        }\r\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\r\n            this.activeDateChange.emit(this.activeDate);\r\n        }\r\n        this._focusActiveCell();\r\n        // Prevent unexpected default actions such as form submission.\r\n        event.preventDefault();\r\n    }\r\n    _getActiveCell() {\r\n        return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\r\n    }\r\n    /** Focuses the active cell after the microtask queue is empty. */\r\n    _focusActiveCell() {\r\n        this._matCalendarBody._focusActiveCell();\r\n    }\r\n    /** Creates an MatCalendarCell for the given year. */\r\n    _createCellForYear(year) {\r\n        let yearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(year, 0, 1));\r\n        return new NgxMatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year));\r\n    }\r\n    /** Whether the given year is enabled. */\r\n    _shouldEnableYear(year) {\r\n        // disable if the year is greater than maxDate lower than minDate\r\n        if (year === undefined || year === null ||\r\n            (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\r\n            (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\r\n            return false;\r\n        }\r\n        // enable if it reaches here and there's no filter defined\r\n        if (!this.dateFilter) {\r\n            return true;\r\n        }\r\n        const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\r\n        // If any date in the year is enabled count the year as enabled.\r\n        for (let date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {\r\n            if (this.dateFilter(date)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @param obj The object to check.\r\n     * @returns The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    _getValidDateOrNull(obj) {\r\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n    /** Determines whether the user has the RTL layout direction. */\r\n    _isRtl() {\r\n        return this._dir && this._dir.value === 'rtl';\r\n    }\r\n    /** Sets the currently-highlighted year based on a model value. */\r\n    _setSelectedYear(value) {\r\n        this._selectedYear = null;\r\n        if (value instanceof DateRange) {\r\n            const displayValue = value.start || value.end;\r\n            if (displayValue) {\r\n                this._selectedYear = this._dateAdapter.getYear(displayValue);\r\n            }\r\n        }\r\n        else if (value) {\r\n            this._selectedYear = this._dateAdapter.getYear(value);\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatMultiYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatMultiYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: NgxMatDateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatMultiYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatMultiYearView, selector: \"ngx-mat-multi-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: NgxMatCalendarBody, descendants: true }], exportAs: [\"ngxMatMultiYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\r\\n  <thead class=\\\"mat-calendar-table-header\\\">\\r\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\r\\n  </thead>\\r\\n  <tbody ngx-mat-calendar-body\\r\\n         [rows]=\\\"_years\\\"\\r\\n         [todayValue]=\\\"_todayYear\\\"\\r\\n         [startValue]=\\\"_selectedYear!\\\"\\r\\n         [endValue]=\\\"_selectedYear!\\\"\\r\\n         [numCols]=\\\"4\\\"\\r\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\r\\n         [activeCell]=\\\"_getActiveCell()\\\"\\r\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\r\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n\", components: [{ type: NgxMatCalendarBody, selector: \"[ngx-mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"NgxMatCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatMultiYearView, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-multi-year-view', exportAs: 'ngxMatMultiYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\r\\n  <thead class=\\\"mat-calendar-table-header\\\">\\r\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\r\\n  </thead>\\r\\n  <tbody ngx-mat-calendar-body\\r\\n         [rows]=\\\"_years\\\"\\r\\n         [todayValue]=\\\"_todayYear\\\"\\r\\n         [startValue]=\\\"_selectedYear!\\\"\\r\\n         [endValue]=\\\"_selectedYear!\\\"\\r\\n         [numCols]=\\\"4\\\"\\r\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\r\\n         [activeCell]=\\\"_getActiveCell()\\\"\\r\\n         (selectedValueChange)=\\\"_yearSelected($event)\\\"\\r\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n\" }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ChangeDetectorRef }, { type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i2.Directionality, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, propDecorators: { activeDate: [{\r\n                type: Input\r\n            }], selected: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], dateFilter: [{\r\n                type: Input\r\n            }], selectedChange: [{\r\n                type: Output\r\n            }], yearSelected: [{\r\n                type: Output\r\n            }], activeDateChange: [{\r\n                type: Output\r\n            }], _matCalendarBody: [{\r\n                type: ViewChild,\r\n                args: [NgxMatCalendarBody]\r\n            }] } });\r\nfunction isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {\r\n    const year1 = dateAdapter.getYear(date1);\r\n    const year2 = dateAdapter.getYear(date2);\r\n    const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\r\n    return Math.floor((year1 - startingYear) / yearsPerPage) ===\r\n        Math.floor((year2 - startingYear) / yearsPerPage);\r\n}\r\n/**\r\n * When the multi-year view is first opened, the active year will be in view.\r\n * So we compute how many years are between the active year and the *slot* where our\r\n * \"startingYear\" will render when paged into view.\r\n */\r\nfunction getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {\r\n    const activeYear = dateAdapter.getYear(activeDate);\r\n    return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)), yearsPerPage);\r\n}\r\n/**\r\n * We pick a \"starting\" year such that either the maximum year would be at the end\r\n * or the minimum year would be at the beginning of a page.\r\n */\r\nfunction getStartingYear(dateAdapter, minDate, maxDate) {\r\n    let startingYear = 0;\r\n    if (maxDate) {\r\n        const maxYear = dateAdapter.getYear(maxDate);\r\n        startingYear = maxYear - yearsPerPage + 1;\r\n    }\r\n    else if (minDate) {\r\n        startingYear = dateAdapter.getYear(minDate);\r\n    }\r\n    return startingYear;\r\n}\r\n/** Gets remainder that is non-negative, even if first number is negative */\r\nfunction euclideanModulo(a, b) {\r\n    return (a % b + b) % b;\r\n}\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/**\r\n * An internal component used to display a single year in the datepicker.\r\n * @docs-private\r\n */\r\nclass NgxMatYearView {\r\n    constructor(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._dateFormats = _dateFormats;\r\n        this._dateAdapter = _dateAdapter;\r\n        this._dir = _dir;\r\n        this._rerenderSubscription = Subscription.EMPTY;\r\n        /** Emits when a new month is selected. */\r\n        this.selectedChange = new EventEmitter();\r\n        /** Emits the selected month. This doesn't imply a change on the selected date */\r\n        this.monthSelected = new EventEmitter();\r\n        /** Emits when any date is activated. */\r\n        this.activeDateChange = new EventEmitter();\r\n        if (!this._dateAdapter) {\r\n            throw createMissingDateImplError('NgxMatDateAdapter');\r\n        }\r\n        if (!this._dateFormats) {\r\n            throw createMissingDateImplError('NGX_MAT_DATE_FORMATS');\r\n        }\r\n        this._activeDate = this._dateAdapter.today();\r\n    }\r\n    /** The date to display in this year view (everything other than the year is ignored). */\r\n    get activeDate() { return this._activeDate; }\r\n    set activeDate(value) {\r\n        let oldActiveDate = this._activeDate;\r\n        const validDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();\r\n        this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\r\n        if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\r\n            this._init();\r\n        }\r\n    }\r\n    /** The currently selected date. */\r\n    get selected() { return this._selected; }\r\n    set selected(value) {\r\n        if (value instanceof DateRange) {\r\n            this._selected = value;\r\n        }\r\n        else {\r\n            this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n        }\r\n        this._setSelectedMonth(value);\r\n    }\r\n    /** The minimum selectable date. */\r\n    get minDate() { return this._minDate; }\r\n    set minDate(value) {\r\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /** The maximum selectable date. */\r\n    get maxDate() { return this._maxDate; }\r\n    set maxDate(value) {\r\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    ngAfterContentInit() {\r\n        this._rerenderSubscription = this._dateAdapter.localeChanges\r\n            .pipe(startWith(null))\r\n            .subscribe(() => this._init());\r\n    }\r\n    ngOnDestroy() {\r\n        this._rerenderSubscription.unsubscribe();\r\n    }\r\n    /** Handles when a new month is selected. */\r\n    _monthSelected(event) {\r\n        const month = event.value;\r\n        const normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\r\n        this.monthSelected.emit(normalizedDate);\r\n        const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\r\n        this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\r\n    }\r\n    /** Handles keydown events on the calendar body when calendar is in year view. */\r\n    _handleCalendarBodyKeydown(event) {\r\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\r\n        // disabled ones from being selected. This may not be ideal, we should look into whether\r\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\r\n        const oldActiveDate = this._activeDate;\r\n        const isRtl = this._isRtl();\r\n        switch (event.keyCode) {\r\n            case LEFT_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\r\n                break;\r\n            case RIGHT_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\r\n                break;\r\n            case UP_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\r\n                break;\r\n            case DOWN_ARROW:\r\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\r\n                break;\r\n            case HOME:\r\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));\r\n                break;\r\n            case END:\r\n                this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));\r\n                break;\r\n            case PAGE_UP:\r\n                this.activeDate =\r\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\r\n                break;\r\n            case PAGE_DOWN:\r\n                this.activeDate =\r\n                    this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\r\n                break;\r\n            case ENTER:\r\n            case SPACE:\r\n                this._monthSelected({ value: this._dateAdapter.getMonth(this._activeDate), event });\r\n                break;\r\n            default:\r\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\r\n                return;\r\n        }\r\n        if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\r\n            this.activeDateChange.emit(this.activeDate);\r\n        }\r\n        this._focusActiveCell();\r\n        // Prevent unexpected default actions such as form submission.\r\n        event.preventDefault();\r\n    }\r\n    /** Initializes this year view. */\r\n    _init() {\r\n        this._setSelectedMonth(this.selected);\r\n        this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\r\n        this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\r\n        let monthNames = this._dateAdapter.getMonthNames('short');\r\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\r\n        this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(month => this._createCellForMonth(month, monthNames[month])));\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Focuses the active cell after the microtask queue is empty. */\r\n    _focusActiveCell() {\r\n        this._matCalendarBody._focusActiveCell();\r\n    }\r\n    /**\r\n     * Gets the month in this year that the given Date falls on.\r\n     * Returns null if the given Date is in another year.\r\n     */\r\n    _getMonthInCurrentYear(date) {\r\n        return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\r\n            this._dateAdapter.getMonth(date) : null;\r\n    }\r\n    /** Creates an MatCalendarCell for the given month. */\r\n    _createCellForMonth(month, monthName) {\r\n        let ariaLabel = this._dateAdapter.format(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1), this._dateFormats.display.monthYearA11yLabel);\r\n        return new NgxMatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month));\r\n    }\r\n    /** Whether the given month is enabled. */\r\n    _shouldEnableMonth(month) {\r\n        const activeYear = this._dateAdapter.getYear(this.activeDate);\r\n        if (month === undefined || month === null ||\r\n            this._isYearAndMonthAfterMaxDate(activeYear, month) ||\r\n            this._isYearAndMonthBeforeMinDate(activeYear, month)) {\r\n            return false;\r\n        }\r\n        if (!this.dateFilter) {\r\n            return true;\r\n        }\r\n        const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\r\n        // If any date in the month is enabled count the month as enabled.\r\n        for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {\r\n            if (this.dateFilter(date)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Tests whether the combination month/year is after this.maxDate, considering\r\n     * just the month and year of this.maxDate\r\n     */\r\n    _isYearAndMonthAfterMaxDate(year, month) {\r\n        if (this.maxDate) {\r\n            const maxYear = this._dateAdapter.getYear(this.maxDate);\r\n            const maxMonth = this._dateAdapter.getMonth(this.maxDate);\r\n            return year > maxYear || (year === maxYear && month > maxMonth);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Tests whether the combination month/year is before this.minDate, considering\r\n     * just the month and year of this.minDate\r\n     */\r\n    _isYearAndMonthBeforeMinDate(year, month) {\r\n        if (this.minDate) {\r\n            const minYear = this._dateAdapter.getYear(this.minDate);\r\n            const minMonth = this._dateAdapter.getMonth(this.minDate);\r\n            return year < minYear || (year === minYear && month < minMonth);\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * @param obj The object to check.\r\n     * @returns The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    _getValidDateOrNull(obj) {\r\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n    /** Determines whether the user has the RTL layout direction. */\r\n    _isRtl() {\r\n        return this._dir && this._dir.value === 'rtl';\r\n    }\r\n    /** Sets the currently-selected month based on a model value. */\r\n    _setSelectedMonth(value) {\r\n        if (value instanceof DateRange) {\r\n            this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\r\n                this._getMonthInCurrentYear(value.end);\r\n        }\r\n        else {\r\n            this._selectedMonth = this._getMonthInCurrentYear(value);\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatYearView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatYearView, deps: [{ token: i0.ChangeDetectorRef }, { token: NGX_MAT_DATE_FORMATS, optional: true }, { token: NgxMatDateAdapter, optional: true }, { token: i2.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatYearView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatYearView, selector: \"ngx-mat-year-view\", inputs: { activeDate: \"activeDate\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\" }, outputs: { selectedChange: \"selectedChange\", monthSelected: \"monthSelected\", activeDateChange: \"activeDateChange\" }, viewQueries: [{ propertyName: \"_matCalendarBody\", first: true, predicate: NgxMatCalendarBody, descendants: true }], exportAs: [\"ngxMatYearView\"], ngImport: i0, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\r\\n  <thead class=\\\"mat-calendar-table-header\\\">\\r\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\r\\n  </thead>\\r\\n  <tbody ngx-mat-calendar-body\\r\\n         [label]=\\\"_yearLabel\\\"\\r\\n         [rows]=\\\"_months\\\"\\r\\n         [todayValue]=\\\"_todayMonth!\\\"\\r\\n         [startValue]=\\\"_selectedMonth!\\\"\\r\\n         [endValue]=\\\"_selectedMonth!\\\"\\r\\n         [labelMinRequiredCells]=\\\"2\\\"\\r\\n         [numCols]=\\\"4\\\"\\r\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\r\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\r\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\r\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\r\\n  </tbody>\\r\\n</table>\\r\\n\", components: [{ type: NgxMatCalendarBody, selector: \"[ngx-mat-calendar-body]\", inputs: [\"label\", \"rows\", \"todayValue\", \"startValue\", \"endValue\", \"labelMinRequiredCells\", \"numCols\", \"activeCell\", \"isRange\", \"cellAspectRatio\", \"comparisonStart\", \"comparisonEnd\", \"previewStart\", \"previewEnd\"], outputs: [\"selectedValueChange\", \"previewChange\"], exportAs: [\"NgxMatCalendarBody\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatYearView, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-year-view', exportAs: 'ngxMatYearView', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table class=\\\"mat-calendar-table\\\" role=\\\"presentation\\\">\\r\\n  <thead class=\\\"mat-calendar-table-header\\\">\\r\\n    <tr><th class=\\\"mat-calendar-table-header-divider\\\" colspan=\\\"4\\\"></th></tr>\\r\\n  </thead>\\r\\n  <tbody ngx-mat-calendar-body\\r\\n         [label]=\\\"_yearLabel\\\"\\r\\n         [rows]=\\\"_months\\\"\\r\\n         [todayValue]=\\\"_todayMonth!\\\"\\r\\n         [startValue]=\\\"_selectedMonth!\\\"\\r\\n         [endValue]=\\\"_selectedMonth!\\\"\\r\\n         [labelMinRequiredCells]=\\\"2\\\"\\r\\n         [numCols]=\\\"4\\\"\\r\\n         [cellAspectRatio]=\\\"4 / 7\\\"\\r\\n         [activeCell]=\\\"_dateAdapter.getMonth(activeDate)\\\"\\r\\n         (selectedValueChange)=\\\"_monthSelected($event)\\\"\\r\\n         (keydown)=\\\"_handleCalendarBodyKeydown($event)\\\">\\r\\n  </tbody>\\r\\n</table>\\r\\n\" }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [NGX_MAT_DATE_FORMATS]\r\n                    }] }, { type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i2.Directionality, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, propDecorators: { activeDate: [{\r\n                type: Input\r\n            }], selected: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], dateFilter: [{\r\n                type: Input\r\n            }], selectedChange: [{\r\n                type: Output\r\n            }], monthSelected: [{\r\n                type: Output\r\n            }], activeDateChange: [{\r\n                type: Output\r\n            }], _matCalendarBody: [{\r\n                type: ViewChild,\r\n                args: [NgxMatCalendarBody]\r\n            }] } });\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Default header for NgxMatCalendar */\r\nclass NgxMatCalendarHeader {\r\n    constructor(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {\r\n        this._intl = _intl;\r\n        this.calendar = calendar;\r\n        this._dateAdapter = _dateAdapter;\r\n        this._dateFormats = _dateFormats;\r\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\r\n    }\r\n    /** The label for the current calendar view. */\r\n    get periodButtonText() {\r\n        if (this.calendar.currentView == 'month') {\r\n            return this._dateAdapter\r\n                .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\r\n                .toLocaleUpperCase();\r\n        }\r\n        if (this.calendar.currentView == 'year') {\r\n            return this._dateAdapter.getYearName(this.calendar.activeDate);\r\n        }\r\n        // The offset from the active year to the \"slot\" for the starting year is the\r\n        // *actual* first rendered year in the multi-year view, and the last year is\r\n        // just yearsPerPage - 1 away.\r\n        const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\r\n        const minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\r\n        const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\r\n        const minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\r\n        const maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\r\n        return formatYearRange(minYearName, maxYearName);\r\n    }\r\n    get periodButtonLabel() {\r\n        return this.calendar.currentView == 'month' ?\r\n            this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\r\n    }\r\n    /** The label for the previous button. */\r\n    get prevButtonLabel() {\r\n        return {\r\n            'month': this._intl.prevMonthLabel,\r\n            'year': this._intl.prevYearLabel,\r\n            'multi-year': this._intl.prevMultiYearLabel\r\n        }[this.calendar.currentView];\r\n    }\r\n    /** The label for the next button. */\r\n    get nextButtonLabel() {\r\n        return {\r\n            'month': this._intl.nextMonthLabel,\r\n            'year': this._intl.nextYearLabel,\r\n            'multi-year': this._intl.nextMultiYearLabel\r\n        }[this.calendar.currentView];\r\n    }\r\n    /** Handles user clicks on the period label. */\r\n    currentPeriodClicked() {\r\n        this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\r\n    }\r\n    /** Handles user clicks on the previous button. */\r\n    previousClicked() {\r\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\r\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\r\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);\r\n    }\r\n    /** Handles user clicks on the next button. */\r\n    nextClicked() {\r\n        this.calendar.activeDate = this.calendar.currentView == 'month' ?\r\n            this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\r\n            this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);\r\n    }\r\n    /** Whether the previous period button is enabled. */\r\n    previousEnabled() {\r\n        if (!this.calendar.minDate) {\r\n            return true;\r\n        }\r\n        return !this.calendar.minDate ||\r\n            !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\r\n    }\r\n    /** Whether the next period button is enabled. */\r\n    nextEnabled() {\r\n        return !this.calendar.maxDate ||\r\n            !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\r\n    }\r\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\r\n    _isSameView(date1, date2) {\r\n        if (this.calendar.currentView == 'month') {\r\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\r\n                this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\r\n        }\r\n        if (this.calendar.currentView == 'year') {\r\n            return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\r\n        }\r\n        // Otherwise we are in 'multi-year' view.\r\n        return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatCalendarHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatCalendarHeader, deps: [{ token: i1$1.MatDatepickerIntl }, { token: forwardRef(() => NgxMatCalendar) }, { token: NgxMatDateAdapter, optional: true }, { token: NGX_MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatCalendarHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatCalendarHeader, selector: \"ngx-mat-calendar-header\", exportAs: [\"ngxMatCalendarHeader\"], ngImport: i0, template: \"<div class=\\\"mat-calendar-header\\\">\\r\\n  <div class=\\\"mat-calendar-controls\\\">\\r\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\r\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\r\\n            cdkAriaLive=\\\"polite\\\">\\r\\n      {{periodButtonText}}\\r\\n      <div class=\\\"mat-calendar-arrow\\\"\\r\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\r\\n\\r\\n    <ng-content></ng-content>\\r\\n\\r\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\r\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\r\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\r\\n    </button>\\r\\n\\r\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\r\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\r\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\", components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatCalendarHeader, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-calendar-header', exportAs: 'ngxMatCalendarHeader', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div class=\\\"mat-calendar-header\\\">\\r\\n  <div class=\\\"mat-calendar-controls\\\">\\r\\n    <button mat-button type=\\\"button\\\" class=\\\"mat-calendar-period-button\\\"\\r\\n            (click)=\\\"currentPeriodClicked()\\\" [attr.aria-label]=\\\"periodButtonLabel\\\"\\r\\n            cdkAriaLive=\\\"polite\\\">\\r\\n      {{periodButtonText}}\\r\\n      <div class=\\\"mat-calendar-arrow\\\"\\r\\n           [class.mat-calendar-invert]=\\\"calendar.currentView != 'month'\\\"></div>\\r\\n    </button>\\r\\n\\r\\n    <div class=\\\"mat-calendar-spacer\\\"></div>\\r\\n\\r\\n    <ng-content></ng-content>\\r\\n\\r\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-previous-button\\\"\\r\\n            [disabled]=\\\"!previousEnabled()\\\" (click)=\\\"previousClicked()\\\"\\r\\n            [attr.aria-label]=\\\"prevButtonLabel\\\">\\r\\n    </button>\\r\\n\\r\\n    <button mat-icon-button type=\\\"button\\\" class=\\\"mat-calendar-next-button\\\"\\r\\n            [disabled]=\\\"!nextEnabled()\\\" (click)=\\\"nextClicked()\\\"\\r\\n            [attr.aria-label]=\\\"nextButtonLabel\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\" }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i1$1.MatDatepickerIntl }, { type: NgxMatCalendar, decorators: [{\r\n                        type: Inject,\r\n                        args: [forwardRef(() => NgxMatCalendar)]\r\n                    }] }, { type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [NGX_MAT_DATE_FORMATS]\r\n                    }] }, { type: i0.ChangeDetectorRef }];\r\n    } });\r\n/**\r\n * A calendar that is used as part of the datepicker.\r\n * @docs-private\r\n */\r\nclass NgxMatCalendar {\r\n    constructor(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {\r\n        this._dateAdapter = _dateAdapter;\r\n        this._dateFormats = _dateFormats;\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        /**\r\n         * Used for scheduling that focus should be moved to the active cell on the next tick.\r\n         * We need to schedule it, rather than do it immediately, because we have to wait\r\n         * for Angular to re-evaluate the view children.\r\n         */\r\n        this._moveFocusOnNextTick = false;\r\n        /** Whether the calendar should be started in month or year view. */\r\n        this.startView = 'month';\r\n        /** Emits when the currently selected date changes. */\r\n        this.selectedChange = new EventEmitter();\r\n        /**\r\n         * Emits the year chosen in multiyear view.\r\n         * This doesn't imply a change on the selected date.\r\n         */\r\n        this.yearSelected = new EventEmitter();\r\n        /**\r\n         * Emits the month chosen in year view.\r\n         * This doesn't imply a change on the selected date.\r\n         */\r\n        this.monthSelected = new EventEmitter();\r\n        /** Emits when any date is selected. */\r\n        this._userSelection = new EventEmitter();\r\n        /**\r\n         * Emits whenever there is a state change that the header may need to respond to.\r\n         */\r\n        this.stateChanges = new Subject();\r\n        if (!this._dateAdapter) {\r\n            throw createMissingDateImplError('NgxDateAdapter');\r\n        }\r\n        if (!this._dateFormats) {\r\n            throw createMissingDateImplError('NGX_MAT_DATE_FORMATS');\r\n        }\r\n        this._intlChanges = _intl.changes.subscribe(() => {\r\n            _changeDetectorRef.markForCheck();\r\n            this.stateChanges.next();\r\n        });\r\n    }\r\n    /** A date representing the period (month or year) to start the calendar in. */\r\n    get startAt() { return this._startAt; }\r\n    set startAt(value) {\r\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /** The currently selected date. */\r\n    get selected() { return this._selected; }\r\n    set selected(value) {\r\n        this._selected = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /** The minimum selectable date. */\r\n    get minDate() { return this._minDate; }\r\n    set minDate(value) {\r\n        this._minDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /** The maximum selectable date. */\r\n    get maxDate() { return this._maxDate; }\r\n    set maxDate(value) {\r\n        this._maxDate = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /**\r\n     * The current active date. This determines which time period is shown and which date is\r\n     * highlighted when using keyboard navigation.\r\n     */\r\n    get activeDate() { return this._clampedActiveDate; }\r\n    set activeDate(value) {\r\n        this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\r\n        this.stateChanges.next();\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    /** Whether the calendar is in month view. */\r\n    get currentView() { return this._currentView; }\r\n    set currentView(value) {\r\n        this._currentView = value;\r\n        this._moveFocusOnNextTick = true;\r\n        this._changeDetectorRef.markForCheck();\r\n    }\r\n    ngAfterContentInit() {\r\n        this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || NgxMatCalendarHeader);\r\n        this.activeDate = this.startAt || this._dateAdapter.today();\r\n        // Assign to the private property since we don't want to move focus on init.\r\n        this._currentView = this.startView;\r\n    }\r\n    ngAfterViewChecked() {\r\n        if (this._moveFocusOnNextTick) {\r\n            this._moveFocusOnNextTick = false;\r\n            this.focusActiveCell();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._intlChanges.unsubscribe();\r\n        this.stateChanges.complete();\r\n    }\r\n    ngOnChanges(changes) {\r\n        const change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\r\n        if (change && !change.firstChange) {\r\n            const view = this._getCurrentViewComponent();\r\n            if (view) {\r\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\r\n                // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\r\n                this._changeDetectorRef.detectChanges();\r\n                view._init();\r\n            }\r\n        }\r\n        this.stateChanges.next();\r\n    }\r\n    focusActiveCell() {\r\n        this._getCurrentViewComponent()._focusActiveCell();\r\n    }\r\n    /** Updates today's date after an update of the active date */\r\n    updateTodaysDate() {\r\n        let view = this.currentView == 'month' ? this.monthView :\r\n            (this.currentView == 'year' ? this.yearView : this.multiYearView);\r\n        view.ngAfterContentInit();\r\n    }\r\n    /** Handles date selection in the month view. */\r\n    _dateSelected(date) {\r\n        if (date && !this._dateAdapter.sameDate(date, this.selected)) {\r\n            this.selectedChange.emit(date);\r\n        }\r\n    }\r\n    /** Handles year selection in the multiyear view. */\r\n    _yearSelectedInMultiYearView(normalizedYear) {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n    /** Handles month selection in the year view. */\r\n    _monthSelectedInYearView(normalizedMonth) {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n    _userSelected() {\r\n        this._userSelection.emit();\r\n    }\r\n    /** Handles year/month selection in the multi-year/year views. */\r\n    _goToDateInView(date, view) {\r\n        this.activeDate = date;\r\n        this.currentView = view;\r\n    }\r\n    /**\r\n     * @param obj The object to check.\r\n     * @returns The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    _getValidDateOrNull(obj) {\r\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n    /** Returns the component instance that corresponds to the current calendar view. */\r\n    _getCurrentViewComponent() {\r\n        return this.monthView || this.yearView || this.multiYearView;\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatCalendar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatCalendar, deps: [{ token: i1$1.MatDatepickerIntl }, { token: NgxMatDateAdapter, optional: true }, { token: NGX_MAT_DATE_FORMATS, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatCalendar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatCalendar, selector: \"ngx-mat-calendar\", inputs: { headerComponent: \"headerComponent\", startAt: \"startAt\", startView: \"startView\", selected: \"selected\", minDate: \"minDate\", maxDate: \"maxDate\", dateFilter: \"dateFilter\", dateClass: \"dateClass\" }, outputs: { selectedChange: \"selectedChange\", yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", _userSelection: \"_userSelection\" }, host: { classAttribute: \"mat-calendar\" }, viewQueries: [{ propertyName: \"monthView\", first: true, predicate: NgxMatMonthView, descendants: true }, { propertyName: \"yearView\", first: true, predicate: NgxMatYearView, descendants: true }, { propertyName: \"multiYearView\", first: true, predicate: NgxMatMultiYearView, descendants: true }], exportAs: [\"ngxMatCalendar\"], usesOnChanges: true, ngImport: i0, template: \"\\r\\n<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\r\\n\\r\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\r\\n  <ngx-mat-month-view\\r\\n      *ngSwitchCase=\\\"'month'\\\"\\r\\n      [(activeDate)]=\\\"activeDate\\\"\\r\\n      [selected]=\\\"selected\\\"\\r\\n      [dateFilter]=\\\"dateFilter\\\"\\r\\n      [maxDate]=\\\"maxDate\\\"\\r\\n      [minDate]=\\\"minDate\\\"\\r\\n      [dateClass]=\\\"dateClass\\\"\\r\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\r\\n      (_userSelection)=\\\"_userSelected()\\\">\\r\\n  </ngx-mat-month-view>\\r\\n\\r\\n  <ngx-mat-year-view\\r\\n      *ngSwitchCase=\\\"'year'\\\"\\r\\n      [(activeDate)]=\\\"activeDate\\\"\\r\\n      [selected]=\\\"selected\\\"\\r\\n      [dateFilter]=\\\"dateFilter\\\"\\r\\n      [maxDate]=\\\"maxDate\\\"\\r\\n      [minDate]=\\\"minDate\\\"\\r\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\r\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\r\\n  </ngx-mat-year-view>\\r\\n\\r\\n  <ngx-mat-multi-year-view\\r\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\r\\n      [(activeDate)]=\\\"activeDate\\\"\\r\\n      [selected]=\\\"selected\\\"\\r\\n      [dateFilter]=\\\"dateFilter\\\"\\r\\n      [maxDate]=\\\"maxDate\\\"\\r\\n      [minDate]=\\\"minDate\\\"\\r\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\r\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\r\\n  </ngx-mat-multi-year-view>\\r\\n</div>\\r\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0}.mat-calendar-content{padding:0 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.71429% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button:after,.mat-calendar-next-button:after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button:after{border-left-width:2px;transform:translate(2px) rotate(-45deg)}.mat-calendar-next-button:after{border-right-width:2px;transform:translate(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider:after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"], components: [{ type: NgxMatMonthView, selector: \"ngx-mat-month-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\", \"comparisonStart\", \"comparisonEnd\"], outputs: [\"selectedChange\", \"_userSelection\", \"activeDateChange\"], exportAs: [\"ngxMatMonthView\"] }, { type: NgxMatYearView, selector: \"ngx-mat-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\"], outputs: [\"selectedChange\", \"monthSelected\", \"activeDateChange\"], exportAs: [\"ngxMatYearView\"] }, { type: NgxMatMultiYearView, selector: \"ngx-mat-multi-year-view\", inputs: [\"activeDate\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\"], outputs: [\"selectedChange\", \"yearSelected\", \"activeDateChange\"], exportAs: [\"ngxMatMultiYearView\"] }], directives: [{ type: i7.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }, { type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatCalendar, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-calendar', host: {\r\n                        'class': 'mat-calendar',\r\n                    }, exportAs: 'ngxMatCalendar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"\\r\\n<ng-template [cdkPortalOutlet]=\\\"_calendarHeaderPortal\\\"></ng-template>\\r\\n\\r\\n<div class=\\\"mat-calendar-content\\\" [ngSwitch]=\\\"currentView\\\" cdkMonitorSubtreeFocus tabindex=\\\"-1\\\">\\r\\n  <ngx-mat-month-view\\r\\n      *ngSwitchCase=\\\"'month'\\\"\\r\\n      [(activeDate)]=\\\"activeDate\\\"\\r\\n      [selected]=\\\"selected\\\"\\r\\n      [dateFilter]=\\\"dateFilter\\\"\\r\\n      [maxDate]=\\\"maxDate\\\"\\r\\n      [minDate]=\\\"minDate\\\"\\r\\n      [dateClass]=\\\"dateClass\\\"\\r\\n      (selectedChange)=\\\"_dateSelected($event)\\\"\\r\\n      (_userSelection)=\\\"_userSelected()\\\">\\r\\n  </ngx-mat-month-view>\\r\\n\\r\\n  <ngx-mat-year-view\\r\\n      *ngSwitchCase=\\\"'year'\\\"\\r\\n      [(activeDate)]=\\\"activeDate\\\"\\r\\n      [selected]=\\\"selected\\\"\\r\\n      [dateFilter]=\\\"dateFilter\\\"\\r\\n      [maxDate]=\\\"maxDate\\\"\\r\\n      [minDate]=\\\"minDate\\\"\\r\\n      (monthSelected)=\\\"_monthSelectedInYearView($event)\\\"\\r\\n      (selectedChange)=\\\"_goToDateInView($event, 'month')\\\">\\r\\n  </ngx-mat-year-view>\\r\\n\\r\\n  <ngx-mat-multi-year-view\\r\\n      *ngSwitchCase=\\\"'multi-year'\\\"\\r\\n      [(activeDate)]=\\\"activeDate\\\"\\r\\n      [selected]=\\\"selected\\\"\\r\\n      [dateFilter]=\\\"dateFilter\\\"\\r\\n      [maxDate]=\\\"maxDate\\\"\\r\\n      [minDate]=\\\"minDate\\\"\\r\\n      (yearSelected)=\\\"_yearSelectedInMultiYearView($event)\\\"\\r\\n      (selectedChange)=\\\"_goToDateInView($event, 'year')\\\">\\r\\n  </ngx-mat-multi-year-view>\\r\\n</div>\\r\\n\", styles: [\".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0}.mat-calendar-content{padding:0 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(4.71429% - 16px)}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button:after,.mat-calendar-next-button:after{top:0;left:0;right:0;bottom:0;position:absolute;content:\\\"\\\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button:after{border-left-width:2px;transform:translate(2px) rotate(-45deg)}.mat-calendar-next-button:after{border-right-width:2px;transform:translate(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider:after{content:\\\"\\\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\\n\"] }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i1$1.MatDatepickerIntl }, { type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [NGX_MAT_DATE_FORMATS]\r\n                    }] }, { type: i0.ChangeDetectorRef }];\r\n    }, propDecorators: { headerComponent: [{\r\n                type: Input\r\n            }], startAt: [{\r\n                type: Input\r\n            }], startView: [{\r\n                type: Input\r\n            }], selected: [{\r\n                type: Input\r\n            }], minDate: [{\r\n                type: Input\r\n            }], maxDate: [{\r\n                type: Input\r\n            }], dateFilter: [{\r\n                type: Input\r\n            }], dateClass: [{\r\n                type: Input\r\n            }], selectedChange: [{\r\n                type: Output\r\n            }], yearSelected: [{\r\n                type: Output\r\n            }], monthSelected: [{\r\n                type: Output\r\n            }], _userSelection: [{\r\n                type: Output\r\n            }], monthView: [{\r\n                type: ViewChild,\r\n                args: [NgxMatMonthView]\r\n            }], yearView: [{\r\n                type: ViewChild,\r\n                args: [NgxMatYearView]\r\n            }], multiYearView: [{\r\n                type: ViewChild,\r\n                args: [NgxMatMultiYearView]\r\n            }] } });\n\nclass NgxMatTimepickerComponent {\r\n    constructor(_dateAdapter, cd, formBuilder) {\r\n        this._dateAdapter = _dateAdapter;\r\n        this.cd = cd;\r\n        this.formBuilder = formBuilder;\r\n        this.disabled = false;\r\n        this.showSpinners = true;\r\n        this.stepHour = DEFAULT_STEP;\r\n        this.stepMinute = DEFAULT_STEP;\r\n        this.stepSecond = DEFAULT_STEP;\r\n        this.showSeconds = false;\r\n        this.disableMinute = false;\r\n        this.enableMeridian = false;\r\n        this.color = 'primary';\r\n        this.meridian = MERIDIANS.AM;\r\n        this._onChange = () => { };\r\n        this._onTouched = () => { };\r\n        this._destroyed = new Subject();\r\n        this.pattern = PATTERN_INPUT_HOUR;\r\n        if (!this._dateAdapter) {\r\n            throw createMissingDateImplError('NgxMatDateAdapter');\r\n        }\r\n        this.form = this.formBuilder.group({\r\n            hour: [{ value: null, disabled: this.disabled }, [Validators.required, Validators.pattern(PATTERN_INPUT_HOUR)]],\r\n            minute: [{ value: null, disabled: this.disabled }, [Validators.required, Validators.pattern(PATTERN_INPUT_MINUTE)]],\r\n            second: [{ value: null, disabled: this.disabled }, [Validators.required, Validators.pattern(PATTERN_INPUT_SECOND)]]\r\n        });\r\n    }\r\n    /** Hour */\r\n    get hour() {\r\n        let val = Number(this.form.controls['hour'].value);\r\n        return isNaN(val) ? 0 : val;\r\n    }\r\n    ;\r\n    get minute() {\r\n        let val = Number(this.form.controls['minute'].value);\r\n        return isNaN(val) ? 0 : val;\r\n    }\r\n    ;\r\n    get second() {\r\n        let val = Number(this.form.controls['second'].value);\r\n        return isNaN(val) ? 0 : val;\r\n    }\r\n    ;\r\n    /** Whether or not the form is valid */\r\n    get valid() {\r\n        return this.form.valid;\r\n    }\r\n    ngOnInit() {\r\n        this.form.valueChanges.pipe(takeUntil(this._destroyed), debounceTime(400)).subscribe(val => {\r\n            this._updateModel();\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.disabled || changes.disableMinute) {\r\n            this._setDisableStates();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyed.next();\r\n        this._destroyed.complete();\r\n    }\r\n    /**\r\n     * Writes a new value to the element.\r\n     * @param obj\r\n     */\r\n    writeValue(val) {\r\n        if (val != null) {\r\n            this._model = val;\r\n        }\r\n        else {\r\n            this._model = this._dateAdapter.today();\r\n            if (this.defaultTime != null) {\r\n                this._dateAdapter.setTimeByDefaultValues(this._model, this.defaultTime);\r\n            }\r\n        }\r\n        this._updateHourMinuteSecond();\r\n    }\r\n    /** Registers a callback function that is called when the control's value changes in the UI. */\r\n    registerOnChange(fn) {\r\n        this._onChange = fn;\r\n    }\r\n    /**\r\n     * Set the function to be called when the control receives a touch event.\r\n     */\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    /** Enables or disables the appropriate DOM element */\r\n    setDisabledState(isDisabled) {\r\n        this._disabled = isDisabled;\r\n        this.cd.markForCheck();\r\n    }\r\n    /**\r\n     * Format input\r\n     * @param input\r\n     */\r\n    formatInput(input) {\r\n        input.value = input.value.replace(NUMERIC_REGEX, '');\r\n    }\r\n    /** Toggle meridian */\r\n    toggleMeridian() {\r\n        this.meridian = (this.meridian === MERIDIANS.AM) ? MERIDIANS.PM : MERIDIANS.AM;\r\n        this.change('hour');\r\n    }\r\n    /** Change property of time */\r\n    change(prop, up) {\r\n        const next = this._getNextValueByProp(prop, up);\r\n        this.form.controls[prop].setValue(formatTwoDigitTimeValue(next), { onlySelf: false, emitEvent: false });\r\n        this._updateModel();\r\n    }\r\n    /** Update controls of form by model */\r\n    _updateHourMinuteSecond() {\r\n        let _hour = this._dateAdapter.getHour(this._model);\r\n        const _minute = this._dateAdapter.getMinute(this._model);\r\n        const _second = this._dateAdapter.getSecond(this._model);\r\n        if (this.enableMeridian) {\r\n            if (_hour >= LIMIT_TIMES.meridian) {\r\n                _hour = _hour - LIMIT_TIMES.meridian;\r\n                this.meridian = MERIDIANS.PM;\r\n            }\r\n            else {\r\n                this.meridian = MERIDIANS.AM;\r\n            }\r\n            if (_hour === 0) {\r\n                _hour = LIMIT_TIMES.meridian;\r\n            }\r\n        }\r\n        this.form.controls['hour'].setValue(formatTwoDigitTimeValue(_hour));\r\n        this.form.controls['minute'].setValue(formatTwoDigitTimeValue(_minute));\r\n        this.form.controls['second'].setValue(formatTwoDigitTimeValue(_second));\r\n    }\r\n    /** Update model */\r\n    _updateModel() {\r\n        let _hour = this.hour;\r\n        if (this.enableMeridian) {\r\n            if (this.meridian === MERIDIANS.AM && _hour === LIMIT_TIMES.meridian) {\r\n                _hour = 0;\r\n            }\r\n            else if (this.meridian === MERIDIANS.PM && _hour !== LIMIT_TIMES.meridian) {\r\n                _hour = _hour + LIMIT_TIMES.meridian;\r\n            }\r\n        }\r\n        this._dateAdapter.setHour(this._model, _hour);\r\n        this._dateAdapter.setMinute(this._model, this.minute);\r\n        this._dateAdapter.setSecond(this._model, this.second);\r\n        this._onChange(this._model);\r\n    }\r\n    /**\r\n     * Get next value by property\r\n     * @param prop\r\n     * @param up\r\n     */\r\n    _getNextValueByProp(prop, up) {\r\n        const keyProp = prop[0].toUpperCase() + prop.slice(1);\r\n        const min = LIMIT_TIMES[`min${keyProp}`];\r\n        let max = LIMIT_TIMES[`max${keyProp}`];\r\n        if (prop === 'hour' && this.enableMeridian) {\r\n            max = LIMIT_TIMES.meridian;\r\n        }\r\n        let next;\r\n        if (up == null) {\r\n            next = this[prop] % (max);\r\n            if (prop === 'hour' && this.enableMeridian) {\r\n                if (next === 0)\r\n                    next = max;\r\n            }\r\n        }\r\n        else {\r\n            next = up ? this[prop] + this[`step${keyProp}`] : this[prop] - this[`step${keyProp}`];\r\n            if (prop === 'hour' && this.enableMeridian) {\r\n                next = next % (max + 1);\r\n                if (next === 0)\r\n                    next = up ? 1 : max;\r\n            }\r\n            else {\r\n                next = next % max;\r\n            }\r\n            if (up) {\r\n                next = next > max ? (next - max + min) : next;\r\n            }\r\n            else {\r\n                next = next < min ? (next - min + max) : next;\r\n            }\r\n        }\r\n        return next;\r\n    }\r\n    /**\r\n     * Set disable states\r\n     */\r\n    _setDisableStates() {\r\n        if (this.disabled) {\r\n            this.form.disable();\r\n        }\r\n        else {\r\n            this.form.enable();\r\n            if (this.disableMinute) {\r\n                this.form.get('minute').disable();\r\n                if (this.showSeconds) {\r\n                    this.form.get('second').disable();\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatTimepickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatTimepickerComponent, deps: [{ token: NgxMatDateAdapter, optional: true }, { token: i0.ChangeDetectorRef }, { token: i2$1.FormBuilder }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatTimepickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatTimepickerComponent, selector: \"ngx-mat-timepicker\", inputs: { disabled: \"disabled\", showSpinners: \"showSpinners\", stepHour: \"stepHour\", stepMinute: \"stepMinute\", stepSecond: \"stepSecond\", showSeconds: \"showSeconds\", disableMinute: \"disableMinute\", enableMeridian: \"enableMeridian\", defaultTime: \"defaultTime\", color: \"color\" }, host: { classAttribute: \"ngx-mat-timepicker\" }, providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef((() => NgxMatTimepickerComponent)),\r\n            multi: true\r\n        }\r\n    ], exportAs: [\"ngxMatTimepicker\"], usesOnChanges: true, ngImport: i0, template: \"<form [formGroup]=\\\"form\\\">\\r\\n  <table class=\\\"ngx-mat-timepicker-table\\\">\\r\\n    <tbody class=\\\"ngx-mat-timepicker-tbody\\\">\\r\\n      <tr *ngIf=\\\"showSpinners\\\">\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_less icon\\\" (click)=\\\"change('hour', true)\\\"\\r\\n            [disabled]=\\\"disabled\\\">\\r\\n            <mat-icon>expand_less</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n        <td></td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_less icon\\\" (click)=\\\"change('minute', true)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_less</mat-icon>\\r\\n          </button> </td>\\r\\n        <td></td>\\r\\n        <td *ngIf=\\\"showSeconds\\\">\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_less icon\\\" (click)=\\\"change('second', true)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_less</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-spacer\\\"></td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\"></td>\\r\\n      </tr>\\r\\n\\r\\n      <tr>\\r\\n        <td>\\r\\n          <mat-form-field appearance=\\\"legacy\\\">\\r\\n            <input type=\\\"text\\\" matInput (input)=\\\"formatInput($any($event).target)\\\" maxlength=\\\"2\\\" formControlName=\\\"hour\\\"\\r\\n              (keydown.ArrowUp)=\\\"change('hour', true); $event.preventDefault()\\\"\\r\\n              (keydown.ArrowDown)=\\\"change('hour', false); $event.preventDefault()\\\" (blur)=\\\"change('hour')\\\">\\r\\n          </mat-form-field>\\r\\n        </td>\\r\\n        <td class=\\\"ngx-mat-timepicker-spacer\\\">&#58;</td>\\r\\n        <td>\\r\\n          <mat-form-field appearance=\\\"legacy\\\">\\r\\n            <input type=\\\"text\\\" matInput (input)=\\\"formatInput($any($event).target)\\\" maxlength=\\\"2\\\"\\r\\n              formControlName=\\\"minute\\\" (keydown.ArrowUp)=\\\"change('minute', true); $event.preventDefault()\\\"\\r\\n              (keydown.ArrowDown)=\\\"change('minute', false); $event.preventDefault()\\\" (blur)=\\\"change('minute')\\\">\\r\\n          </mat-form-field>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"showSeconds\\\" class=\\\"ngx-mat-timepicker-spacer\\\">&#58;</td>\\r\\n        <td *ngIf=\\\"showSeconds\\\">\\r\\n          <mat-form-field appearance=\\\"legacy\\\">\\r\\n            <input type=\\\"text\\\" matInput (input)=\\\"formatInput($any($event).target)\\\" maxlength=\\\"2\\\"\\r\\n              formControlName=\\\"second\\\" (keydown.ArrowUp)=\\\"change('second', true); $event.preventDefault()\\\"\\r\\n              (keydown.ArrowDown)=\\\"change('second', false); $event.preventDefault()\\\" (blur)=\\\"change('second')\\\">\\r\\n          </mat-form-field>\\r\\n        </td>\\r\\n\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-spacer\\\"></td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-meridian\\\">\\r\\n          <button mat-button (click)=\\\"toggleMeridian()\\\" mat-stroked-button [color]=\\\"color\\\" [disabled]=\\\"disabled\\\">\\r\\n            {{meridian}}\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n\\r\\n      <tr *ngIf=\\\"showSpinners\\\">\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_more icon\\\" (click)=\\\"change('hour', false)\\\"\\r\\n            [disabled]=\\\"disabled\\\">\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button> </td>\\r\\n        <td></td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_more icon\\\" (click)=\\\"change('minute', false)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button> </td>\\r\\n        <td *ngIf=\\\"showSeconds\\\"></td>\\r\\n        <td *ngIf=\\\"showSeconds\\\">\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_more icon\\\" (click)=\\\"change('second', false)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-spacer\\\"></td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\"></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</form>\", styles: [\".ngx-mat-timepicker{font-size:13px}.ngx-mat-timepicker form{min-width:90px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td{text-align:center}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-spacer{font-weight:bold}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-meridian .mat-button{min-width:64px;line-height:36px;min-width:0;border-radius:50%;width:36px;height:36px;padding:0;flex-shrink:0}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-icon-button{height:24px;width:24px;line-height:24px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-icon-button .mat-icon{font-size:24px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-form-field{width:20px;max-width:20px;text-align:center}\\n\"], components: [{ type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }, { type: i2$2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }], directives: [{ type: i2$1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i2$1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i2$1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7$1.MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]\", inputs: [\"disabled\", \"id\", \"placeholder\", \"required\", \"type\", \"errorStateMatcher\", \"aria-describedby\", \"value\", \"readonly\"], exportAs: [\"matInput\"] }, { type: i2$1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i2$1.MaxLengthValidator, selector: \"[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]\", inputs: [\"maxlength\"] }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }], encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatTimepickerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-timepicker', host: {\r\n                        'class': 'ngx-mat-timepicker'\r\n                    }, providers: [\r\n                        {\r\n                            provide: NG_VALUE_ACCESSOR,\r\n                            useExisting: forwardRef((() => NgxMatTimepickerComponent)),\r\n                            multi: true\r\n                        }\r\n                    ], exportAs: 'ngxMatTimepicker', encapsulation: ViewEncapsulation.None, template: \"<form [formGroup]=\\\"form\\\">\\r\\n  <table class=\\\"ngx-mat-timepicker-table\\\">\\r\\n    <tbody class=\\\"ngx-mat-timepicker-tbody\\\">\\r\\n      <tr *ngIf=\\\"showSpinners\\\">\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_less icon\\\" (click)=\\\"change('hour', true)\\\"\\r\\n            [disabled]=\\\"disabled\\\">\\r\\n            <mat-icon>expand_less</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n        <td></td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_less icon\\\" (click)=\\\"change('minute', true)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_less</mat-icon>\\r\\n          </button> </td>\\r\\n        <td></td>\\r\\n        <td *ngIf=\\\"showSeconds\\\">\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_less icon\\\" (click)=\\\"change('second', true)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_less</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-spacer\\\"></td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\"></td>\\r\\n      </tr>\\r\\n\\r\\n      <tr>\\r\\n        <td>\\r\\n          <mat-form-field appearance=\\\"legacy\\\">\\r\\n            <input type=\\\"text\\\" matInput (input)=\\\"formatInput($any($event).target)\\\" maxlength=\\\"2\\\" formControlName=\\\"hour\\\"\\r\\n              (keydown.ArrowUp)=\\\"change('hour', true); $event.preventDefault()\\\"\\r\\n              (keydown.ArrowDown)=\\\"change('hour', false); $event.preventDefault()\\\" (blur)=\\\"change('hour')\\\">\\r\\n          </mat-form-field>\\r\\n        </td>\\r\\n        <td class=\\\"ngx-mat-timepicker-spacer\\\">&#58;</td>\\r\\n        <td>\\r\\n          <mat-form-field appearance=\\\"legacy\\\">\\r\\n            <input type=\\\"text\\\" matInput (input)=\\\"formatInput($any($event).target)\\\" maxlength=\\\"2\\\"\\r\\n              formControlName=\\\"minute\\\" (keydown.ArrowUp)=\\\"change('minute', true); $event.preventDefault()\\\"\\r\\n              (keydown.ArrowDown)=\\\"change('minute', false); $event.preventDefault()\\\" (blur)=\\\"change('minute')\\\">\\r\\n          </mat-form-field>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"showSeconds\\\" class=\\\"ngx-mat-timepicker-spacer\\\">&#58;</td>\\r\\n        <td *ngIf=\\\"showSeconds\\\">\\r\\n          <mat-form-field appearance=\\\"legacy\\\">\\r\\n            <input type=\\\"text\\\" matInput (input)=\\\"formatInput($any($event).target)\\\" maxlength=\\\"2\\\"\\r\\n              formControlName=\\\"second\\\" (keydown.ArrowUp)=\\\"change('second', true); $event.preventDefault()\\\"\\r\\n              (keydown.ArrowDown)=\\\"change('second', false); $event.preventDefault()\\\" (blur)=\\\"change('second')\\\">\\r\\n          </mat-form-field>\\r\\n        </td>\\r\\n\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-spacer\\\"></td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-meridian\\\">\\r\\n          <button mat-button (click)=\\\"toggleMeridian()\\\" mat-stroked-button [color]=\\\"color\\\" [disabled]=\\\"disabled\\\">\\r\\n            {{meridian}}\\r\\n          </button>\\r\\n        </td>\\r\\n      </tr>\\r\\n\\r\\n      <tr *ngIf=\\\"showSpinners\\\">\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_more icon\\\" (click)=\\\"change('hour', false)\\\"\\r\\n            [disabled]=\\\"disabled\\\">\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button> </td>\\r\\n        <td></td>\\r\\n        <td>\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_more icon\\\" (click)=\\\"change('minute', false)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button> </td>\\r\\n        <td *ngIf=\\\"showSeconds\\\"></td>\\r\\n        <td *ngIf=\\\"showSeconds\\\">\\r\\n          <button type=\\\"button\\\" mat-icon-button aria-label=\\\"expand_more icon\\\" (click)=\\\"change('second', false)\\\"\\r\\n            [disabled]=\\\"disabled || disableMinute\\\">\\r\\n            <mat-icon>expand_more</mat-icon>\\r\\n          </button>\\r\\n        </td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\" class=\\\"ngx-mat-timepicker-spacer\\\"></td>\\r\\n        <td *ngIf=\\\"enableMeridian\\\"></td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</form>\", styles: [\".ngx-mat-timepicker{font-size:13px}.ngx-mat-timepicker form{min-width:90px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td{text-align:center}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-spacer{font-weight:bold}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td.ngx-mat-timepicker-meridian .mat-button{min-width:64px;line-height:36px;min-width:0;border-radius:50%;width:36px;height:36px;padding:0;flex-shrink:0}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-icon-button{height:24px;width:24px;line-height:24px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-icon-button .mat-icon{font-size:24px}.ngx-mat-timepicker form .ngx-mat-timepicker-table .ngx-mat-timepicker-tbody tr td .mat-form-field{width:20px;max-width:20px;text-align:center}\\n\"] }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i2$1.FormBuilder }];\r\n    }, propDecorators: { disabled: [{\r\n                type: Input\r\n            }], showSpinners: [{\r\n                type: Input\r\n            }], stepHour: [{\r\n                type: Input\r\n            }], stepMinute: [{\r\n                type: Input\r\n            }], stepSecond: [{\r\n                type: Input\r\n            }], showSeconds: [{\r\n                type: Input\r\n            }], disableMinute: [{\r\n                type: Input\r\n            }], enableMeridian: [{\r\n                type: Input\r\n            }], defaultTime: [{\r\n                type: Input\r\n            }], color: [{\r\n                type: Input\r\n            }] } });\n\n/** Used to generate a unique ID for each datepicker instance. */\r\nlet datepickerUid = 0;\r\n// Boilerplate for applying mixins to MatDatepickerContent.\r\n/** @docs-private */\r\nconst _MatDatetimepickerContentBase = mixinColor(class {\r\n    constructor(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n    }\r\n});\r\n/**\r\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\r\n * NgxMatCalendar directly as the content so we can control the initial focus. This also gives us a\r\n * place to put additional features of the popup that are not part of the calendar itself in the\r\n * future. (e.g. confirmation buttons).\r\n * @docs-private\r\n */\r\nclass NgxMatDatetimeContent extends _MatDatetimepickerContentBase {\r\n    constructor(elementRef, cd, _viewContainerRef) {\r\n        super(elementRef);\r\n        this.cd = cd;\r\n        this._viewContainerRef = _viewContainerRef;\r\n    }\r\n    /** Whether or not the selected date is valid (min,max...) */\r\n    get valid() {\r\n        if (this.datepicker.hideTime)\r\n            return this.datepicker.valid;\r\n        return this._timePicker && this._timePicker.valid && this.datepicker.valid;\r\n    }\r\n    get isViewMonth() {\r\n        if (!this._calendar || this._calendar.currentView == null)\r\n            return true;\r\n        return this._calendar.currentView == 'month';\r\n    }\r\n    ngAfterViewInit() {\r\n        this._calendar.focusActiveCell();\r\n        if (this.datepicker._customIcon) {\r\n            this._templateCustomIconPortal = new TemplatePortal(this.datepicker._customIcon, this._viewContainerRef);\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimeContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimeContent, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimeContent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatDatetimeContent, selector: \"ngx-mat-datetime-content\", inputs: { color: \"color\" }, host: { properties: { \"@transformPanel\": \"\\\"enter\\\"\", \"class.mat-datepicker-content-touch\": \"datepicker.touchUi\" }, classAttribute: \"mat-datepicker-content\" }, viewQueries: [{ propertyName: \"_calendar\", first: true, predicate: NgxMatCalendar, descendants: true }, { propertyName: \"_timePicker\", first: true, predicate: NgxMatTimepickerComponent, descendants: true }], exportAs: [\"ngxMatDatetimeContent\"], usesInheritance: true, ngImport: i0, template: \"<ngx-mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\"\\r\\n    [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\"\\r\\n    [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\r\\n    [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\"\\r\\n    (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\r\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\">\\r\\n</ngx-mat-calendar>\\r\\n<ng-container *ngIf=\\\"isViewMonth\\\">\\r\\n    <div *ngIf=\\\"!datepicker._hideTime\\\" class=\\\"time-container\\\" [class.disable-seconds]=\\\"!datepicker._showSeconds\\\">\\r\\n        <ngx-mat-timepicker [showSpinners]=\\\"datepicker._showSpinners\\\" [showSeconds]=\\\"datepicker._showSeconds\\\"\\r\\n            [disabled]=\\\"datepicker._disabled\\\" [stepHour]=\\\"datepicker._stepHour\\\" [stepMinute]=\\\"datepicker._stepMinute\\\"\\r\\n            [stepSecond]=\\\"datepicker._stepSecond\\\" [(ngModel)]=\\\"datepicker._selected\\\" [color]=\\\"datepicker._color\\\"\\r\\n            [enableMeridian]=\\\"datepicker._enableMeridian\\\" [disableMinute]=\\\"datepicker._disableMinute\\\">\\r\\n        </ngx-mat-timepicker>\\r\\n    </div>\\r\\n    <div class=\\\"actions\\\">\\r\\n        <button mat-button (click)=\\\"datepicker.ok()\\\" mat-stroked-button [color]=\\\"datepicker._color\\\" cdkFocusInitial\\r\\n            [disabled]=\\\"!valid\\\">\\r\\n            <mat-icon *ngIf=\\\"!datepicker._customIcon\\\">done</mat-icon>\\r\\n            <ng-template [cdkPortalOutlet]=\\\"_templateCustomIconPortal\\\"></ng-template>\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-container>\", styles: [\".mat-datepicker-content{display:block;border-radius:4px;box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f}.mat-datepicker-content .mat-calendar{width:296px}.mat-datepicker-content .time-container{display:flex;position:relative;padding-top:5px;justify-content:center}.mat-datepicker-content .time-container.disable-seconds .ngx-mat-timepicker .table{margin-left:9px}.mat-datepicker-content .time-container:before{content:\\\"\\\";position:absolute;top:0;left:0;right:0;height:1px;background-color:#0000001f}.mat-datepicker-content .actions{display:flex;padding:5px 15px 10px;justify-content:flex-end}\\n\"], components: [{ type: NgxMatCalendar, selector: \"ngx-mat-calendar\", inputs: [\"headerComponent\", \"startAt\", \"startView\", \"selected\", \"minDate\", \"maxDate\", \"dateFilter\", \"dateClass\"], outputs: [\"selectedChange\", \"yearSelected\", \"monthSelected\", \"_userSelection\"], exportAs: [\"ngxMatCalendar\"] }, { type: NgxMatTimepickerComponent, selector: \"ngx-mat-timepicker\", inputs: [\"disabled\", \"showSpinners\", \"stepHour\", \"stepMinute\", \"stepSecond\", \"showSeconds\", \"disableMinute\", \"enableMeridian\", \"defaultTime\", \"color\"], exportAs: [\"ngxMatTimepicker\"] }, { type: i3.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { type: i4.MatIcon, selector: \"mat-icon\", inputs: [\"color\", \"inline\", \"svgIcon\", \"fontSet\", \"fontIcon\"], exportAs: [\"matIcon\"] }], directives: [{ type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2$1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i2$1.NgModel, selector: \"[ngModel]:not([formControlName]):not([formControl])\", inputs: [\"name\", \"disabled\", \"ngModel\", \"ngModelOptions\"], outputs: [\"ngModelChange\"], exportAs: [\"ngModel\"] }, { type: i7.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [\r\n        matDatepickerAnimations.transformPanel,\r\n        matDatepickerAnimations.fadeInCalendar,\r\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimeContent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ngx-mat-datetime-content', host: {\r\n                        'class': 'mat-datepicker-content',\r\n                        '[@transformPanel]': '\"enter\"',\r\n                        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\r\n                    }, animations: [\r\n                        matDatepickerAnimations.transformPanel,\r\n                        matDatepickerAnimations.fadeInCalendar,\r\n                    ], exportAs: 'ngxMatDatetimeContent', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['color'], template: \"<ngx-mat-calendar cdkTrapFocus [id]=\\\"datepicker.id\\\" [ngClass]=\\\"datepicker.panelClass\\\" [startAt]=\\\"datepicker.startAt\\\"\\r\\n    [startView]=\\\"datepicker.startView\\\" [minDate]=\\\"datepicker._minDate\\\" [maxDate]=\\\"datepicker._maxDate\\\"\\r\\n    [dateFilter]=\\\"datepicker._dateFilter\\\" [headerComponent]=\\\"datepicker.calendarHeaderComponent\\\"\\r\\n    [selected]=\\\"datepicker._selected\\\" [dateClass]=\\\"datepicker.dateClass\\\" [@fadeInCalendar]=\\\"'enter'\\\"\\r\\n    (selectedChange)=\\\"datepicker.select($event)\\\" (yearSelected)=\\\"datepicker._selectYear($event)\\\"\\r\\n    (monthSelected)=\\\"datepicker._selectMonth($event)\\\">\\r\\n</ngx-mat-calendar>\\r\\n<ng-container *ngIf=\\\"isViewMonth\\\">\\r\\n    <div *ngIf=\\\"!datepicker._hideTime\\\" class=\\\"time-container\\\" [class.disable-seconds]=\\\"!datepicker._showSeconds\\\">\\r\\n        <ngx-mat-timepicker [showSpinners]=\\\"datepicker._showSpinners\\\" [showSeconds]=\\\"datepicker._showSeconds\\\"\\r\\n            [disabled]=\\\"datepicker._disabled\\\" [stepHour]=\\\"datepicker._stepHour\\\" [stepMinute]=\\\"datepicker._stepMinute\\\"\\r\\n            [stepSecond]=\\\"datepicker._stepSecond\\\" [(ngModel)]=\\\"datepicker._selected\\\" [color]=\\\"datepicker._color\\\"\\r\\n            [enableMeridian]=\\\"datepicker._enableMeridian\\\" [disableMinute]=\\\"datepicker._disableMinute\\\">\\r\\n        </ngx-mat-timepicker>\\r\\n    </div>\\r\\n    <div class=\\\"actions\\\">\\r\\n        <button mat-button (click)=\\\"datepicker.ok()\\\" mat-stroked-button [color]=\\\"datepicker._color\\\" cdkFocusInitial\\r\\n            [disabled]=\\\"!valid\\\">\\r\\n            <mat-icon *ngIf=\\\"!datepicker._customIcon\\\">done</mat-icon>\\r\\n            <ng-template [cdkPortalOutlet]=\\\"_templateCustomIconPortal\\\"></ng-template>\\r\\n        </button>\\r\\n    </div>\\r\\n</ng-container>\", styles: [\".mat-datepicker-content{display:block;border-radius:4px;box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f}.mat-datepicker-content .mat-calendar{width:296px}.mat-datepicker-content .time-container{display:flex;position:relative;padding-top:5px;justify-content:center}.mat-datepicker-content .time-container.disable-seconds .ngx-mat-timepicker .table{margin-left:9px}.mat-datepicker-content .time-container:before{content:\\\"\\\";position:absolute;top:0;left:0;right:0;height:1px;background-color:#0000001f}.mat-datepicker-content .actions{display:flex;padding:5px 15px 10px;justify-content:flex-end}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i0.ViewContainerRef }]; }, propDecorators: { _calendar: [{\r\n                type: ViewChild,\r\n                args: [NgxMatCalendar]\r\n            }], _timePicker: [{\r\n                type: ViewChild,\r\n                args: [NgxMatTimepickerComponent]\r\n            }] } });\r\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\r\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\r\n// if angular adds support for `exportAs: '$implicit'` on directives.\r\n/** Component responsible for managing the datepicker popup/dialog. */\r\nclass NgxMatDatetimePicker {\r\n    constructor(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document) {\r\n        this._dialog = _dialog;\r\n        this._overlay = _overlay;\r\n        this._ngZone = _ngZone;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._dateAdapter = _dateAdapter;\r\n        this._dir = _dir;\r\n        this._document = _document;\r\n        /** The view that the calendar should start in. */\r\n        this.startView = 'month';\r\n        this._defaultColor = 'primary';\r\n        this._touchUi = false;\r\n        this._hideTime = false;\r\n        /**\r\n         * Emits selected year in multiyear view.\r\n         * This doesn't imply a change on the selected date.\r\n         */\r\n        this.yearSelected = new EventEmitter();\r\n        /**\r\n         * Emits selected month in year view.\r\n         * This doesn't imply a change on the selected date.\r\n         */\r\n        this.monthSelected = new EventEmitter();\r\n        /** Emits when the datepicker has been opened. */\r\n        this.openedStream = new EventEmitter();\r\n        /** Emits when the datepicker has been closed. */\r\n        this.closedStream = new EventEmitter();\r\n        this._opened = false;\r\n        this._showSpinners = true;\r\n        this._showSeconds = false;\r\n        this._stepHour = DEFAULT_STEP;\r\n        this._stepMinute = DEFAULT_STEP;\r\n        this._stepSecond = DEFAULT_STEP;\r\n        this._enableMeridian = false;\r\n        this._hasBackdrop = true;\r\n        /** The id for the datepicker calendar. */\r\n        this.id = `mat-datepicker-${datepickerUid++}`;\r\n        this._validSelected = null;\r\n        /** The element that was focused before the datepicker was opened. */\r\n        this._focusedElementBeforeOpen = null;\r\n        /** Subscription to value changes in the associated input element. */\r\n        this._inputSubscription = Subscription.EMPTY;\r\n        /** Emits when the datepicker is disabled. */\r\n        this.stateChanges = new Subject();\r\n        /** Emits new selected date when selected date changes. */\r\n        this._selectedChanged = new Subject();\r\n        /** The form control validator for the min date. */\r\n        this._minValidator = () => {\r\n            return (!this._minDate || !this._selected ||\r\n                this._dateAdapter.compareDateWithTime(this._minDate, this._selected, this.showSeconds) <= 0) ?\r\n                null : { 'matDatetimePickerMin': { 'min': this._minDate, 'actual': this._selected } };\r\n        };\r\n        /** The form control validator for the max date. */\r\n        this._maxValidator = () => {\r\n            return (!this._maxDate || !this._selected ||\r\n                this._dateAdapter.compareDateWithTime(this._maxDate, this._selected, this.showSeconds) >= 0) ?\r\n                null : { 'matDatetimePickerMax': { 'max': this._maxDate, 'actual': this._selected } };\r\n        };\r\n        if (!this._dateAdapter) {\r\n            throw createMissingDateImplError('NgxMatDateAdapter');\r\n        }\r\n        this._scrollStrategy = scrollStrategy;\r\n    }\r\n    /** The date to open the calendar to initially. */\r\n    get startAt() {\r\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\r\n        // selected value is.\r\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\r\n    }\r\n    set startAt(value) {\r\n        this._startAt = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n    }\r\n    /** Default Color palette to use on the datepicker's calendar. */\r\n    get defaultColor() {\r\n        return this._defaultColor;\r\n    }\r\n    set defaultColor(value) {\r\n        this._defaultColor = value;\r\n    }\r\n    /** Color palette to use on the datepicker's calendar. */\r\n    get color() {\r\n        return this._color ||\r\n            (this.datepickerInput ? this.datepickerInput._getThemePalette() : 'primary');\r\n    }\r\n    set color(value) {\r\n        this._color = value;\r\n    }\r\n    /**\r\n     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\r\n     * than a popup and elements have more padding to allow for bigger touch targets.\r\n     */\r\n    get touchUi() { return this._touchUi; }\r\n    set touchUi(value) {\r\n        this._touchUi = coerceBooleanProperty(value);\r\n    }\r\n    get hideTime() { return this._hideTime; }\r\n    set hideTime(value) {\r\n        this._hideTime = coerceBooleanProperty(value);\r\n    }\r\n    /** Whether the datepicker pop-up should be disabled. */\r\n    get disabled() {\r\n        return this._disabled === undefined && this.datepickerInput ?\r\n            this.datepickerInput.disabled : !!this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        const newValue = coerceBooleanProperty(value);\r\n        if (newValue !== this._disabled) {\r\n            this._disabled = newValue;\r\n            this.stateChanges.next(newValue);\r\n        }\r\n    }\r\n    /** Whether the calendar is open. */\r\n    get opened() { return this._opened; }\r\n    set opened(value) { value ? this.open() : this.close(); }\r\n    /** Whether the timepicker'spinners is shown. */\r\n    get showSpinners() { return this._showSpinners; }\r\n    set showSpinners(value) { this._showSpinners = value; }\r\n    /** Whether the second part is disabled. */\r\n    get showSeconds() { return this._showSeconds; }\r\n    set showSeconds(value) { this._showSeconds = value; }\r\n    /** Step hour */\r\n    get stepHour() { return this._stepHour; }\r\n    set stepHour(value) { this._stepHour = value; }\r\n    /** Step minute */\r\n    get stepMinute() { return this._stepMinute; }\r\n    set stepMinute(value) { this._stepMinute = value; }\r\n    /** Step second */\r\n    get stepSecond() { return this._stepSecond; }\r\n    set stepSecond(value) { this._stepSecond = value; }\r\n    /** Enable meridian */\r\n    get enableMeridian() { return this._enableMeridian; }\r\n    set enableMeridian(value) { this._enableMeridian = value; }\r\n    /** disable minute */\r\n    get disableMinute() { return this._disableMinute; }\r\n    set disableMinute(value) { this._disableMinute = value; }\r\n    /** Step second */\r\n    get defaultTime() { return this._defaultTime; }\r\n    set defaultTime(value) { this._defaultTime = value; }\r\n    /** The currently selected date. */\r\n    get _selected() { return this._validSelected; }\r\n    set _selected(value) { this._validSelected = value; }\r\n    /** The minimum selectable date. */\r\n    get _minDate() {\r\n        return this.datepickerInput && this.datepickerInput.min;\r\n    }\r\n    /** The maximum selectable date. */\r\n    get _maxDate() {\r\n        return this.datepickerInput && this.datepickerInput.max;\r\n    }\r\n    get valid() {\r\n        const minValidators = this._minValidator();\r\n        const maxValidators = this._maxValidator();\r\n        return minValidators == null && maxValidators == null;\r\n    }\r\n    get _dateFilter() {\r\n        return this.datepickerInput && this.datepickerInput._dateFilter;\r\n    }\r\n    ngOnDestroy() {\r\n        this.close();\r\n        if (this._popupRef) {\r\n            this._popupRef.dispose();\r\n            this._popupComponentRef = null;\r\n        }\r\n        this._inputSubscription.unsubscribe();\r\n        this.stateChanges.complete();\r\n    }\r\n    /** Selects the given date */\r\n    select(date) {\r\n        this._dateAdapter.copyTime(date, this._selected);\r\n        this._selected = date;\r\n    }\r\n    /** Emits the selected year in multiyear view */\r\n    _selectYear(normalizedYear) {\r\n        this.yearSelected.emit(normalizedYear);\r\n    }\r\n    /** Emits selected month in year view */\r\n    _selectMonth(normalizedMonth) {\r\n        this.monthSelected.emit(normalizedMonth);\r\n    }\r\n    /** OK button handler and close*/\r\n    ok() {\r\n        const cloned = this._dateAdapter.clone(this._selected);\r\n        this._selectedChanged.next(cloned);\r\n        this.close();\r\n    }\r\n    /** Cancel and close */\r\n    cancel() {\r\n        this._selected = this._rawValue;\r\n        this.close();\r\n    }\r\n    /**\r\n     * Register an input with this datepicker.\r\n     * @param input The datepicker input to register with this datepicker.\r\n     */\r\n    _registerInput(input) {\r\n        if (this.datepickerInput) {\r\n            throw Error('A NgxMatDatepicker can only be associated with a single input.');\r\n        }\r\n        this.datepickerInput = input;\r\n        this._inputSubscription =\r\n            this.datepickerInput._valueChange.subscribe((value) => this._selected = value);\r\n    }\r\n    /** Open the calendar. */\r\n    open() {\r\n        this._rawValue = this._selected != null\r\n            ? this._dateAdapter.clone(this._selected) : null;\r\n        if (this._selected == null) {\r\n            this._selected = this._dateAdapter.today();\r\n            if (this.defaultTime != null) {\r\n                this._dateAdapter.setTimeByDefaultValues(this._selected, this.defaultTime);\r\n            }\r\n        }\r\n        if (this._opened || this.disabled) {\r\n            return;\r\n        }\r\n        if (!this.datepickerInput) {\r\n            throw Error('Attempted to open an NgxMatDatepicker with no associated input.');\r\n        }\r\n        if (this._document) {\r\n            this._focusedElementBeforeOpen = this._document.activeElement;\r\n        }\r\n        this.touchUi ? this._openAsDialog() : this._openAsPopup();\r\n        this._opened = true;\r\n        this.openedStream.emit();\r\n    }\r\n    /** Close the calendar. */\r\n    close() {\r\n        if (!this._opened) {\r\n            return;\r\n        }\r\n        if (this._popupRef && this._popupRef.hasAttached()) {\r\n            this._popupRef.detach();\r\n        }\r\n        if (this._dialogRef) {\r\n            this._dialogRef.close();\r\n            this._dialogRef = null;\r\n        }\r\n        if (this._calendarPortal && this._calendarPortal.isAttached) {\r\n            this._calendarPortal.detach();\r\n        }\r\n        const completeClose = () => {\r\n            // The `_opened` could've been reset already if\r\n            // we got two events in quick succession.\r\n            if (this._opened) {\r\n                this._opened = false;\r\n                this.closedStream.emit();\r\n                this._focusedElementBeforeOpen = null;\r\n            }\r\n        };\r\n        if (this._focusedElementBeforeOpen &&\r\n            typeof this._focusedElementBeforeOpen.focus === 'function') {\r\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\r\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\r\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\r\n            // able to close the calendar at all. We work around it by making the logic, that marks\r\n            // the datepicker as closed, async as well.\r\n            this._focusedElementBeforeOpen.focus();\r\n            setTimeout(completeClose);\r\n        }\r\n        else {\r\n            completeClose();\r\n        }\r\n    }\r\n    /** Open the calendar as a dialog. */\r\n    _openAsDialog() {\r\n        // Usually this would be handled by `open` which ensures that we can only have one overlay\r\n        // open at a time, however since we reset the variables in async handlers some overlays\r\n        // may slip through if the user opens and closes multiple times in quick succession (e.g.\r\n        // by holding down the enter key).\r\n        if (this._dialogRef) {\r\n            this._dialogRef.close();\r\n        }\r\n        this._dialogRef = this._dialog.open(NgxMatDatetimeContent, {\r\n            direction: this._dir ? this._dir.value : 'ltr',\r\n            viewContainerRef: this._viewContainerRef,\r\n            panelClass: 'mat-datepicker-dialog',\r\n            hasBackdrop: this._hasBackdrop\r\n        });\r\n        this._dialogRef.afterClosed().subscribe(() => this.close());\r\n        this._dialogRef.componentInstance.datepicker = this;\r\n        this._setColor();\r\n    }\r\n    /** Open the calendar as a popup. */\r\n    _openAsPopup() {\r\n        if (!this._calendarPortal) {\r\n            this._calendarPortal = new ComponentPortal(NgxMatDatetimeContent, this._viewContainerRef);\r\n        }\r\n        if (!this._popupRef) {\r\n            this._createPopup();\r\n        }\r\n        if (!this._popupRef.hasAttached()) {\r\n            this._popupComponentRef = this._popupRef.attach(this._calendarPortal);\r\n            this._popupComponentRef.instance.datepicker = this;\r\n            this._setColor();\r\n            // Update the position once the calendar has rendered.\r\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\r\n                this._popupRef.updatePosition();\r\n            });\r\n        }\r\n    }\r\n    /** Create the popup. */\r\n    _createPopup() {\r\n        const overlayConfig = new OverlayConfig({\r\n            positionStrategy: this._createPopupPositionStrategy(),\r\n            hasBackdrop: this._hasBackdrop,\r\n            backdropClass: 'mat-overlay-transparent-backdrop',\r\n            direction: this._dir,\r\n            scrollStrategy: this._scrollStrategy(),\r\n            panelClass: 'mat-datepicker-popup',\r\n        });\r\n        this._popupRef = this._overlay.create(overlayConfig);\r\n        this._popupRef.overlayElement.setAttribute('role', 'dialog');\r\n        merge(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(filter(event => {\r\n            // Closing on alt + up is only valid when there's an input associated with the datepicker.\r\n            return event.keyCode === ESCAPE ||\r\n                (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\r\n        }))).subscribe(event => {\r\n            if (event) {\r\n                event.preventDefault();\r\n            }\r\n            (this._hasBackdrop && event) ? this.cancel() : this.close();\r\n        });\r\n    }\r\n    /** Create the popup PositionStrategy. */\r\n    _createPopupPositionStrategy() {\r\n        return this._overlay.position()\r\n            .flexibleConnectedTo(this.datepickerInput.getConnectedOverlayOrigin())\r\n            .withTransformOriginOn('.mat-datepicker-content')\r\n            .withFlexibleDimensions(false)\r\n            .withViewportMargin(8)\r\n            .withLockedPosition()\r\n            .withPositions([\r\n            {\r\n                originX: 'start',\r\n                originY: 'bottom',\r\n                overlayX: 'start',\r\n                overlayY: 'top'\r\n            },\r\n            {\r\n                originX: 'start',\r\n                originY: 'top',\r\n                overlayX: 'start',\r\n                overlayY: 'bottom'\r\n            },\r\n            {\r\n                originX: 'end',\r\n                originY: 'bottom',\r\n                overlayX: 'end',\r\n                overlayY: 'top'\r\n            },\r\n            {\r\n                originX: 'end',\r\n                originY: 'top',\r\n                overlayX: 'end',\r\n                overlayY: 'bottom'\r\n            }\r\n        ]);\r\n    }\r\n    /**\r\n     * @param obj The object to check.\r\n     * @returns The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    _getValidDateOrNull(obj) {\r\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n    /** Passes the current theme color along to the calendar overlay. */\r\n    _setColor() {\r\n        const color = this.color;\r\n        if (this._popupComponentRef) {\r\n            this._popupComponentRef.instance.color = color;\r\n        }\r\n        if (this._dialogRef) {\r\n            this._dialogRef.componentInstance.color = color;\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimePicker.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimePicker, deps: [{ token: i8.MatDialog }, { token: i9.Overlay }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: MAT_DATEPICKER_SCROLL_STRATEGY }, { token: NgxMatDateAdapter, optional: true }, { token: i2.Directionality, optional: true }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Component });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimePicker.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatDatetimePicker, selector: \"ngx-mat-datetime-picker\", inputs: { calendarHeaderComponent: \"calendarHeaderComponent\", startAt: \"startAt\", startView: \"startView\", defaultColor: \"defaultColor\", color: \"color\", touchUi: \"touchUi\", hideTime: \"hideTime\", disabled: \"disabled\", panelClass: \"panelClass\", dateClass: \"dateClass\", opened: \"opened\", showSpinners: \"showSpinners\", showSeconds: \"showSeconds\", stepHour: \"stepHour\", stepMinute: \"stepMinute\", stepSecond: \"stepSecond\", enableMeridian: \"enableMeridian\", disableMinute: \"disableMinute\", defaultTime: \"defaultTime\" }, outputs: { yearSelected: \"yearSelected\", monthSelected: \"monthSelected\", openedStream: \"opened\", closedStream: \"closed\" }, queries: [{ propertyName: \"_customIcon\", first: true, predicate: TemplateRef, descendants: true }], exportAs: [\"ngxMatDatetimePicker\"], ngImport: i0, template: '', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimePicker, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'ngx-mat-datetime-picker',\r\n                    template: '',\r\n                    exportAs: 'ngxMatDatetimePicker',\r\n                    changeDetection: ChangeDetectionStrategy.OnPush,\r\n                    encapsulation: ViewEncapsulation.None,\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i8.MatDialog }, { type: i9.Overlay }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [MAT_DATEPICKER_SCROLL_STRATEGY]\r\n                    }] }, { type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: i2.Directionality, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, propDecorators: { calendarHeaderComponent: [{\r\n                type: Input\r\n            }], _customIcon: [{\r\n                type: ContentChild,\r\n                args: [TemplateRef]\r\n            }], startAt: [{\r\n                type: Input\r\n            }], startView: [{\r\n                type: Input\r\n            }], defaultColor: [{\r\n                type: Input\r\n            }], color: [{\r\n                type: Input\r\n            }], touchUi: [{\r\n                type: Input\r\n            }], hideTime: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], yearSelected: [{\r\n                type: Output\r\n            }], monthSelected: [{\r\n                type: Output\r\n            }], panelClass: [{\r\n                type: Input\r\n            }], dateClass: [{\r\n                type: Input\r\n            }], openedStream: [{\r\n                type: Output,\r\n                args: ['opened']\r\n            }], closedStream: [{\r\n                type: Output,\r\n                args: ['closed']\r\n            }], opened: [{\r\n                type: Input\r\n            }], showSpinners: [{\r\n                type: Input\r\n            }], showSeconds: [{\r\n                type: Input\r\n            }], stepHour: [{\r\n                type: Input\r\n            }], stepMinute: [{\r\n                type: Input\r\n            }], stepSecond: [{\r\n                type: Input\r\n            }], enableMeridian: [{\r\n                type: Input\r\n            }], disableMinute: [{\r\n                type: Input\r\n            }], defaultTime: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** @docs-private */\r\nconst MAT_DATEPICKER_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => NgxMatDatetimeInput),\r\n    multi: true\r\n};\r\n/** @docs-private */\r\nconst MAT_DATEPICKER_VALIDATORS = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => NgxMatDatetimeInput),\r\n    multi: true\r\n};\r\n/**\r\n * An event used for datepicker input and change events. We don't always have access to a native\r\n * input or change event because the event may have been triggered by the user clicking on the\r\n * calendar popup. For consistency, we always use MatDatetimePickerInputEvent instead.\r\n */\r\nclass MatDatetimePickerInputEvent {\r\n    constructor(\r\n    /** Reference to the datepicker input component that emitted the event. */\r\n    target, \r\n    /** Reference to the native input element associated with the datepicker input. */\r\n    targetElement) {\r\n        this.target = target;\r\n        this.targetElement = targetElement;\r\n        this.value = this.target.value;\r\n    }\r\n}\r\n/** Directive used to connect an input to a matDatetimePicker. */\r\nclass NgxMatDatetimeInput {\r\n    constructor(_elementRef, _dateAdapter, _dateFormats, _formField) {\r\n        this._elementRef = _elementRef;\r\n        this._dateAdapter = _dateAdapter;\r\n        this._dateFormats = _dateFormats;\r\n        this._formField = _formField;\r\n        /** Emits when a `change` event is fired on this `<input>`. */\r\n        this.dateChange = new EventEmitter();\r\n        /** Emits when an `input` event is fired on this `<input>`. */\r\n        this.dateInput = new EventEmitter();\r\n        /** Emits when the value changes (either due to user input or programmatic change). */\r\n        this._valueChange = new EventEmitter();\r\n        /** Emits when the disabled state has changed */\r\n        this.stateChanges = new EventEmitter();\r\n        this._onTouched = () => { };\r\n        this._cvaOnChange = () => { };\r\n        this._validatorOnChange = () => { };\r\n        this._datepickerSubscription = Subscription.EMPTY;\r\n        this._localeSubscription = Subscription.EMPTY;\r\n        /** The form control validator for whether the input parses. */\r\n        this._parseValidator = () => {\r\n            return this._lastValueValid ?\r\n                null : { 'matDatetimePickerParse': { 'text': this._elementRef.nativeElement.value } };\r\n        };\r\n        /** The form control validator for the min date. */\r\n        this._minValidator = (control) => {\r\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n            return (!this.min || !controlValue ||\r\n                this._dateAdapter.compareDateWithTime(this.min, controlValue, this._datepicker.showSeconds) <= 0) ?\r\n                null : { 'matDatetimePickerMin': { 'min': this.min, 'actual': controlValue } };\r\n        };\r\n        /** The form control validator for the max date. */\r\n        this._maxValidator = (control) => {\r\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n            return (!this.max || !controlValue ||\r\n                this._dateAdapter.compareDateWithTime(this.max, controlValue, this._datepicker.showSeconds) >= 0) ?\r\n                null : { 'matDatetimePickerMax': { 'max': this.max, 'actual': controlValue } };\r\n        };\r\n        /** The form control validator for the date filter. */\r\n        this._filterValidator = (control) => {\r\n            const controlValue = this._getValidDateOrNull(this._dateAdapter.deserialize(control.value));\r\n            return !this._dateFilter || !controlValue || this._dateFilter(controlValue) ?\r\n                null : { 'matDatetimePickerFilter': true };\r\n        };\r\n        /** The combined form control validator for this input. */\r\n        this._validator = Validators.compose([this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\r\n        /** Whether the last value set on the input was valid. */\r\n        this._lastValueValid = false;\r\n        if (!this._dateAdapter) {\r\n            throw createMissingDateImplError('NgxMatDateAdapter');\r\n        }\r\n        if (!this._dateFormats) {\r\n            throw createMissingDateImplError('NGX_MAT_DATE_FORMATS');\r\n        }\r\n        // Update the displayed date when the locale changes.\r\n        this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\r\n            this.value = this.value;\r\n        });\r\n    }\r\n    /** The datepicker that this input is associated with. */\r\n    set ngxMatDatetimePicker(value) {\r\n        if (!value) {\r\n            return;\r\n        }\r\n        this._datepicker = value;\r\n        this._datepicker._registerInput(this);\r\n        this._datepickerSubscription.unsubscribe();\r\n        this._datepickerSubscription = this._datepicker._selectedChanged.subscribe((selected) => {\r\n            this.value = selected;\r\n            this._cvaOnChange(selected);\r\n            this._onTouched();\r\n            this.dateInput.emit(new MatDatetimePickerInputEvent(this, this._elementRef.nativeElement));\r\n            this.dateChange.emit(new MatDatetimePickerInputEvent(this, this._elementRef.nativeElement));\r\n        });\r\n    }\r\n    /** Function that can be used to filter out dates within the datepicker. */\r\n    set ngxMatDatetimePickerFilter(value) {\r\n        this._dateFilter = value;\r\n        this._validatorOnChange();\r\n    }\r\n    /** The value of the input. */\r\n    get value() { return this._value; }\r\n    set value(value) {\r\n        value = this._dateAdapter.deserialize(value);\r\n        this._lastValueValid = !value || this._dateAdapter.isValid(value);\r\n        value = this._getValidDateOrNull(value);\r\n        const oldDate = this.value;\r\n        this._value = value;\r\n        this._formatValue(value);\r\n        if (!this._dateAdapter.sameDate(oldDate, value)) {\r\n            this._valueChange.emit(value);\r\n        }\r\n    }\r\n    /** The minimum valid date. */\r\n    get min() { return this._min; }\r\n    set min(value) {\r\n        this._min = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n        this._validatorOnChange();\r\n    }\r\n    /** The maximum valid date. */\r\n    get max() { return this._max; }\r\n    set max(value) {\r\n        this._max = this._getValidDateOrNull(this._dateAdapter.deserialize(value));\r\n        this._validatorOnChange();\r\n    }\r\n    /** Whether the datepicker-input is disabled. */\r\n    get disabled() { return !!this._disabled; }\r\n    set disabled(value) {\r\n        const newValue = value != null && `${value}` !== 'false';\r\n        const element = this._elementRef.nativeElement;\r\n        if (this._disabled !== newValue) {\r\n            this._disabled = newValue;\r\n            this.stateChanges.emit(undefined);\r\n        }\r\n        // We need to null check the `blur` method, because it's undefined during SSR.\r\n        if (newValue && element.blur) {\r\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\r\n            // is problematic, because it would mean that it triggers another change detection cycle,\r\n            // which then causes a changed after checked error if the input element was focused before.\r\n            element.blur();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._datepickerSubscription.unsubscribe();\r\n        this._localeSubscription.unsubscribe();\r\n        this._valueChange.complete();\r\n        this.stateChanges.complete();\r\n    }\r\n    /** @docs-private */\r\n    registerOnValidatorChange(fn) {\r\n        this._validatorOnChange = fn;\r\n    }\r\n    /** @docs-private */\r\n    validate(c) {\r\n        return this._validator ? this._validator(c) : null;\r\n    }\r\n    /**\r\n     * @deprecated\r\n     * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\r\n     */\r\n    getPopupConnectionElementRef() {\r\n        return this.getConnectedOverlayOrigin();\r\n    }\r\n    /**\r\n     * Gets the element that the datepicker popup should be connected to.\r\n     * @return The element to connect the popup to.\r\n     */\r\n    getConnectedOverlayOrigin() {\r\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    writeValue(value) {\r\n        this.value = value;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnChange(fn) {\r\n        this._cvaOnChange = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    _onKeydown(event) {\r\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\r\n        if (this._datepicker && isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\r\n            this._datepicker.open();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    _onInput(value) {\r\n        const lastValueWasValid = this._lastValueValid;\r\n        let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\r\n        this._lastValueValid = !date || this._dateAdapter.isValid(date);\r\n        date = this._getValidDateOrNull(date);\r\n        const isSameTime = this._dateAdapter.isSameTime(date, this._value);\r\n        if ((date != null && (!isSameTime || !this._dateAdapter.sameDate(date, this._value)))\r\n            || (date == null && this._value != null)) {\r\n            this._value = date;\r\n            this._cvaOnChange(date);\r\n            this._valueChange.emit(date);\r\n            this.dateInput.emit(new MatDatetimePickerInputEvent(this, this._elementRef.nativeElement));\r\n        }\r\n        else if (lastValueWasValid !== this._lastValueValid) {\r\n            this._validatorOnChange();\r\n        }\r\n    }\r\n    _onChange() {\r\n        this.dateChange.emit(new MatDatetimePickerInputEvent(this, this._elementRef.nativeElement));\r\n    }\r\n    /** Returns the palette used by the input's form field, if any. */\r\n    _getThemePalette() {\r\n        return this._formField ? this._formField.color : undefined;\r\n    }\r\n    /** Handles blur events on the input. */\r\n    _onBlur() {\r\n        // Reformat the input only if we have a valid value.\r\n        if (this.value) {\r\n            this._formatValue(this.value);\r\n        }\r\n        this._onTouched();\r\n    }\r\n    /** Handles focus events on the input. */\r\n    _onFocus() {\r\n        // Close datetime picker if opened\r\n        if (this._datepicker && this._datepicker.opened) {\r\n            this._datepicker.cancel();\r\n        }\r\n    }\r\n    /** Formats a value and sets it on the input element. */\r\n    _formatValue(value) {\r\n        this._elementRef.nativeElement.value =\r\n            value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\r\n    }\r\n    /**\r\n     * @param obj The object to check.\r\n     * @returns The given object if it is both a date instance and valid, otherwise null.\r\n     */\r\n    _getValidDateOrNull(obj) {\r\n        return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimeInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimeInput, deps: [{ token: i0.ElementRef }, { token: NgxMatDateAdapter, optional: true }, { token: NGX_MAT_DATE_FORMATS, optional: true }, { token: i2$2.MatFormField, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimeInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.1\", type: NgxMatDatetimeInput, selector: \"input[ngxMatDatetimePicker]\", inputs: { ngxMatDatetimePicker: \"ngxMatDatetimePicker\", ngxMatDatetimePickerFilter: \"ngxMatDatetimePickerFilter\", value: \"value\", min: \"min\", max: \"max\", disabled: \"disabled\" }, outputs: { dateChange: \"dateChange\", dateInput: \"dateInput\" }, host: { listeners: { \"input\": \"_onInput($event.target.value)\", \"change\": \"_onChange()\", \"blur\": \"_onBlur()\", \"focus\": \"_onFocus()\", \"keydown\": \"_onKeydown($event)\" }, properties: { \"attr.aria-haspopup\": \"_datepicker ? \\\"dialog\\\" : null\", \"attr.aria-owns\": \"(_datepicker?.opened && _datepicker.id) || null\", \"attr.min\": \"min ? _dateAdapter.toIso8601(min) : null\", \"attr.max\": \"max ? _dateAdapter.toIso8601(max) : null\", \"disabled\": \"disabled\" } }, providers: [\r\n        MAT_DATEPICKER_VALUE_ACCESSOR,\r\n        MAT_DATEPICKER_VALIDATORS,\r\n        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: NgxMatDatetimeInput },\r\n    ], exportAs: [\"ngxMatDatetimePickerInput\"], ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimeInput, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: 'input[ngxMatDatetimePicker]',\r\n                    providers: [\r\n                        MAT_DATEPICKER_VALUE_ACCESSOR,\r\n                        MAT_DATEPICKER_VALIDATORS,\r\n                        { provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: NgxMatDatetimeInput },\r\n                    ],\r\n                    host: {\r\n                        '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\r\n                        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\r\n                        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\r\n                        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\r\n                        '[disabled]': 'disabled',\r\n                        '(input)': '_onInput($event.target.value)',\r\n                        '(change)': '_onChange()',\r\n                        '(blur)': '_onBlur()',\r\n                        '(focus)': '_onFocus()',\r\n                        '(keydown)': '_onKeydown($event)',\r\n                    },\r\n                    exportAs: 'ngxMatDatetimePickerInput',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ElementRef }, { type: NgxMatDateAdapter, decorators: [{\r\n                        type: Optional\r\n                    }] }, { type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [NGX_MAT_DATE_FORMATS]\r\n                    }] }, { type: i2$2.MatFormField, decorators: [{\r\n                        type: Optional\r\n                    }] }];\r\n    }, propDecorators: { ngxMatDatetimePicker: [{\r\n                type: Input\r\n            }], ngxMatDatetimePickerFilter: [{\r\n                type: Input\r\n            }], value: [{\r\n                type: Input\r\n            }], min: [{\r\n                type: Input\r\n            }], max: [{\r\n                type: Input\r\n            }], disabled: [{\r\n                type: Input\r\n            }], dateChange: [{\r\n                type: Output\r\n            }], dateInput: [{\r\n                type: Output\r\n            }] } });\n\nclass NgxMatTimepickerModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatTimepickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatTimepickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatTimepickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatTimepickerModule, declarations: [NgxMatTimepickerComponent], imports: [CommonModule,\r\n        MatInputModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        MatIconModule,\r\n        MatButtonModule], exports: [NgxMatTimepickerComponent] });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatTimepickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatTimepickerModule, imports: [[\r\n            CommonModule,\r\n            MatInputModule,\r\n            ReactiveFormsModule,\r\n            FormsModule,\r\n            MatIconModule,\r\n            MatButtonModule,\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatTimepickerModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        MatInputModule,\r\n                        ReactiveFormsModule,\r\n                        FormsModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                    ],\r\n                    exports: [\r\n                        NgxMatTimepickerComponent\r\n                    ],\r\n                    declarations: [\r\n                        NgxMatTimepickerComponent\r\n                    ]\r\n                }]\r\n        }] });\n\nclass NgxMatDatetimePickerModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimePickerModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimePickerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimePickerModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimePickerModule, declarations: [NgxMatDatetimePicker,\r\n        NgxMatDatetimeContent,\r\n        NgxMatDatetimeInput,\r\n        NgxMatCalendar,\r\n        NgxMatMonthView,\r\n        NgxMatCalendarBody,\r\n        NgxMatYearView,\r\n        NgxMatMultiYearView,\r\n        NgxMatCalendarHeader], imports: [CommonModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        PortalModule,\r\n        FormsModule,\r\n        MatIconModule,\r\n        MatButtonModule,\r\n        MatInputModule,\r\n        NgxMatTimepickerModule], exports: [NgxMatDatetimePicker,\r\n        NgxMatDatetimeInput,\r\n        NgxMatCalendar,\r\n        NgxMatMonthView,\r\n        NgxMatCalendarBody,\r\n        NgxMatYearView,\r\n        NgxMatMultiYearView,\r\n        NgxMatCalendarHeader] });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatDatetimePickerModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimePickerModule, providers: [\r\n        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n        {\r\n            provide: NGX_MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n            useClass: DefaultNgxMatCalendarRangeStrategy\r\n        }\r\n    ], imports: [[\r\n            CommonModule,\r\n            MatDatepickerModule,\r\n            MatDialogModule,\r\n            PortalModule,\r\n            FormsModule,\r\n            MatIconModule,\r\n            MatButtonModule,\r\n            MatInputModule,\r\n            NgxMatTimepickerModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatDatetimePickerModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        MatDatepickerModule,\r\n                        MatDialogModule,\r\n                        PortalModule,\r\n                        FormsModule,\r\n                        MatIconModule,\r\n                        MatButtonModule,\r\n                        MatInputModule,\r\n                        NgxMatTimepickerModule\r\n                    ],\r\n                    exports: [\r\n                        NgxMatDatetimePicker,\r\n                        NgxMatDatetimeInput,\r\n                        NgxMatCalendar,\r\n                        NgxMatMonthView,\r\n                        NgxMatCalendarBody,\r\n                        NgxMatYearView,\r\n                        NgxMatMultiYearView,\r\n                        NgxMatCalendarHeader\r\n                    ],\r\n                    declarations: [\r\n                        NgxMatDatetimePicker,\r\n                        NgxMatDatetimeContent,\r\n                        NgxMatDatetimeInput,\r\n                        NgxMatCalendar,\r\n                        NgxMatMonthView,\r\n                        NgxMatCalendarBody,\r\n                        NgxMatYearView,\r\n                        NgxMatMultiYearView,\r\n                        NgxMatCalendarHeader\r\n                    ],\r\n                    entryComponents: [\r\n                        NgxMatDatetimeContent,\r\n                        NgxMatCalendarHeader\r\n                    ],\r\n                    providers: [\r\n                        MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n                        {\r\n                            provide: NGX_MAT_DATE_RANGE_SELECTION_STRATEGY,\r\n                            useClass: DefaultNgxMatCalendarRangeStrategy\r\n                        }\r\n                    ]\r\n                }]\r\n        }] });\n\n// TODO(mmalerba): Remove when we no longer support safari 9.\r\n/** Whether the browser supports the Intl API. */\r\nlet SUPPORTS_INTL_API;\r\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\r\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\r\n// the consumer is providing a polyfilled `Map`. See:\r\n// https://github.com/Microsoft/ChakraCore/issues/3189\r\n// https://github.com/angular/components/issues/15687\r\ntry {\r\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\r\n}\r\ncatch (_a) {\r\n    SUPPORTS_INTL_API = false;\r\n}\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n    'long': [\r\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n        'October', 'November', 'December'\r\n    ],\r\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n/** Creates an array and fills it with values. */\r\nfunction range(length, valueFunction) {\r\n    const valuesArray = Array(length);\r\n    for (let i = 0; i < length; i++) {\r\n        valuesArray[i] = valueFunction(i);\r\n    }\r\n    return valuesArray;\r\n}\r\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\r\nclass NgxMatNativeDateAdapter extends NgxMatDateAdapter {\r\n    constructor(matDateLocale, platform) {\r\n        super();\r\n        /**\r\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n         * will produce `'8/13/1800'`.\r\n         *\r\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\r\n         * getting the string representation of a Date object from its utc representation. We're keeping\r\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\r\n         * though.\r\n         */\r\n        this.useUtcForDisplay = true;\r\n        super.setLocale(matDateLocale);\r\n        // IE does its own time zone correction, so we disable this on IE.\r\n        this.useUtcForDisplay = !platform.TRIDENT;\r\n        this._clampDate = platform.TRIDENT || platform.EDGE;\r\n    }\r\n    getYear(date) {\r\n        return date.getFullYear();\r\n    }\r\n    getMonth(date) {\r\n        return date.getMonth();\r\n    }\r\n    getDate(date) {\r\n        return date.getDate();\r\n    }\r\n    getDayOfWeek(date) {\r\n        return date.getDay();\r\n    }\r\n    getMonthNames(style) {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\r\n            return range(12, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\r\n        }\r\n        return DEFAULT_MONTH_NAMES[style];\r\n    }\r\n    getDateNames() {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\r\n            return range(31, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\r\n        }\r\n        return DEFAULT_DATE_NAMES;\r\n    }\r\n    getDayOfWeekNames(style) {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\r\n            return range(7, i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1))));\r\n        }\r\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n    }\r\n    getYearName(date) {\r\n        if (SUPPORTS_INTL_API) {\r\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\r\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n        return String(this.getYear(date));\r\n    }\r\n    getFirstDayOfWeek() {\r\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n        return 0;\r\n    }\r\n    getNumDaysInMonth(date) {\r\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\r\n    }\r\n    clone(date) {\r\n        return new Date(date.getTime());\r\n    }\r\n    createDate(year, month, date) {\r\n        // Check for invalid month and date (except upper bound on date which we have to check after\r\n        // creating the Date).\r\n        if (month < 0 || month > 11) {\r\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n        }\r\n        if (date < 1) {\r\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n        }\r\n        let result = this._createDateWithOverflow(year, month, date);\r\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n        if (result.getMonth() != month) {\r\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n        }\r\n        return result;\r\n    }\r\n    today() {\r\n        return new Date();\r\n    }\r\n    parse(value) {\r\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n        // parameters.\r\n        if (typeof value == 'number') {\r\n            return new Date(value);\r\n        }\r\n        return value ? new Date(Date.parse(value)) : null;\r\n    }\r\n    format(date, displayFormat) {\r\n        if (!this.isValid(date)) {\r\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n        }\r\n        if (SUPPORTS_INTL_API) {\r\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n                date = this.clone(date);\r\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n            }\r\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\r\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n        }\r\n        return this._stripDirectionalityCharacters(date.toDateString());\r\n    }\r\n    addCalendarYears(date, years) {\r\n        return this.addCalendarMonths(date, years * 12);\r\n    }\r\n    addCalendarMonths(date, months) {\r\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n        // It's possible to wind up in the wrong month if the original month has more days than the new\r\n        // month. In this case we want to go to the last day of the desired month.\r\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n        // guarantee this.\r\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n        }\r\n        return newDate;\r\n    }\r\n    addCalendarDays(date, days) {\r\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n    }\r\n    toIso8601(date) {\r\n        return [\r\n            date.getUTCFullYear(),\r\n            this._2digit(date.getUTCMonth() + 1),\r\n            this._2digit(date.getUTCDate())\r\n        ].join('-');\r\n    }\r\n    /**\r\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n     * invalid date for all other values.\r\n     */\r\n    deserialize(value) {\r\n        if (typeof value === 'string') {\r\n            if (!value) {\r\n                return null;\r\n            }\r\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n            // string is the right format first.\r\n            if (ISO_8601_REGEX.test(value)) {\r\n                let date = new Date(value);\r\n                if (this.isValid(date)) {\r\n                    return date;\r\n                }\r\n            }\r\n        }\r\n        return super.deserialize(value);\r\n    }\r\n    isDateInstance(obj) {\r\n        return obj instanceof Date;\r\n    }\r\n    isValid(date) {\r\n        return !isNaN(date.getTime());\r\n    }\r\n    invalid() {\r\n        return new Date(NaN);\r\n    }\r\n    getHour(date) {\r\n        return date.getHours();\r\n    }\r\n    getMinute(date) {\r\n        return date.getMinutes();\r\n    }\r\n    getSecond(date) {\r\n        return date.getSeconds();\r\n    }\r\n    setHour(date, value) {\r\n        date.setHours(value);\r\n    }\r\n    setMinute(date, value) {\r\n        date.setMinutes(value);\r\n    }\r\n    setSecond(date, value) {\r\n        date.setSeconds(value);\r\n    }\r\n    /** Creates a date but allows the month and date to overflow. */\r\n    _createDateWithOverflow(year, month, date) {\r\n        const result = new Date(year, month, date);\r\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n        // abbreviations for 19xx.\r\n        if (year >= 0 && year < 100) {\r\n            result.setFullYear(this.getYear(result) - 1900);\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Pads a number to make it two digits.\r\n     * @param n The number to pad.\r\n     * @returns The padded number.\r\n     */\r\n    _2digit(n) {\r\n        return ('00' + n).slice(-2);\r\n    }\r\n    /**\r\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n     * other browsers do not. We remove them to make output consistent and because they interfere with\r\n     * date parsing.\r\n     * @param str The string to strip direction characters from.\r\n     * @returns The stripped string.\r\n     */\r\n    _stripDirectionalityCharacters(str) {\r\n        return str.replace(/[\\u200e\\u200f]/g, '');\r\n    }\r\n    /**\r\n     * When converting Date object to string, javascript built-in functions may return wrong\r\n     * results because it applies its internal DST rules. The DST rules around the world change\r\n     * very frequently, and the current valid rule is not always valid in previous years though.\r\n     * We work around this problem building a new Date object which has its internal UTC\r\n     * representation with the local date and time.\r\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n     *    timeZone set to 'utc' to work fine.\r\n     * @param date Date from which we want to get the string representation according to dtf\r\n     * @returns A Date object with its UTC representation based on the passed in date info\r\n     */\r\n    _format(dtf, date) {\r\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\r\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\r\n        const d = new Date();\r\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\r\n        return dtf.format(d);\r\n    }\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatNativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$2.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatNativeDateAdapter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatNativeDateAdapter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [MAT_DATE_LOCALE]\r\n                    }] }, { type: i1$2.Platform }];\r\n    } });\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst DEFAULT_DATE_INPUT = {\r\n    year: 'numeric', month: 'numeric', day: 'numeric',\r\n    hour12: false, hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\r\n};\r\nconst NGX_MAT_NATIVE_DATE_FORMATS = {\r\n    parse: {\r\n        dateInput: DEFAULT_DATE_INPUT,\r\n    },\r\n    display: {\r\n        dateInput: DEFAULT_DATE_INPUT,\r\n        monthYearLabel: { year: 'numeric', month: 'short' },\r\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\r\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nclass NgxNativeDateModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ /** @nocollapse */ NgxNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxNativeDateModule, imports: [PlatformModule] });\r\n/** @nocollapse */ /** @nocollapse */ NgxNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxNativeDateModule, providers: [\r\n        { provide: NgxMatDateAdapter, useClass: NgxMatNativeDateAdapter },\r\n    ], imports: [[PlatformModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxNativeDateModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [PlatformModule],\r\n                    providers: [\r\n                        { provide: NgxMatDateAdapter, useClass: NgxMatNativeDateAdapter },\r\n                    ],\r\n                }]\r\n        }] });\r\nclass NgxMatNativeDateModule {\r\n}\r\n/** @nocollapse */ /** @nocollapse */ NgxMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatNativeDateModule, imports: [NgxNativeDateModule] });\r\n/** @nocollapse */ /** @nocollapse */ NgxMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatNativeDateModule, providers: [{ provide: NGX_MAT_DATE_FORMATS, useValue: NGX_MAT_NATIVE_DATE_FORMATS }], imports: [[NgxNativeDateModule]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.1\", ngImport: i0, type: NgxMatNativeDateModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [NgxNativeDateModule],\r\n                    providers: [{ provide: NGX_MAT_DATE_FORMATS, useValue: NGX_MAT_NATIVE_DATE_FORMATS }],\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-mat-datetime-picker\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DefaultNgxMatCalendarRangeStrategy, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MatDatetimePickerInputEvent, NGX_MAT_DATE_FORMATS, NGX_MAT_DATE_RANGE_SELECTION_STRATEGY, NGX_MAT_NATIVE_DATE_FORMATS, NgxMatCalendar, NgxMatCalendarBody, NgxMatCalendarCell, NgxMatCalendarHeader, NgxMatDateAdapter, NgxMatDatetimeContent, NgxMatDatetimeInput, NgxMatDatetimePicker, NgxMatDatetimePickerModule, NgxMatMonthView, NgxMatMultiYearView, NgxMatNativeDateAdapter, NgxMatNativeDateModule, NgxMatTimepickerComponent, NgxMatTimepickerModule, NgxMatYearView, NgxNativeDateModule, getActiveOffset, isSameMultiYearView, yearsPerPage, yearsPerRow };\n"],"names":["environment","RoleModel","AdminListBannedComponent","constructor","router","adm","bs","ds","gs","as","column","row","bannerImg","sizeContain","bgRepeat","ngOnInit","isBrowser","getBan","ngOnDestroy","subsBannedGet","_a","unsubscribe","subsBannedDelete","_b","subsDialog","_c","busy","idle","getAllBanned","q","page","sort","order","subscribe","next","res","log","count","bannedDataRow","excludedRole","currentUserSubject","value","role","ADMIN","MODERATOR","r","results","push","Id","id","foto_korban","user_","image_url","foto_pelaku","banned_by_","baseUrl","Korban","username","Pelaku","_d","Alasan","reason","Aksi","includesOneOf","type","icon","name","bannedData","error","err","action","data","unBan","openKonfirmasiDialog","afterClosed","re","onPaginatorClicked","pageIndex","pageSize","onServerSideFilter","onServerSideOrder","active","direction","openBan","navigateByUrl","i0","selectors","decls","vars","consts","template","ctx","AdminListCorsComponent","getCors","subsCorsGet","subsCorsDelete","getAllCors","corsDataRow","ip_domain","api_key","foto","Pemilik","corsData","revokeCors","openCors","AdminListDdlComponent","dls","getAttachment","subsAttachmentGet","subsAttachmentReUpload","getAttachmentNotUploaded","failed","attachmentDataRow","parent_attachment_","pending","Ext","ext","Size","size","Mime","mime","Tanggal","created_at","_e","_f","discord","google_drive","attachmentData","reUpload","AdminListFansubMemberComponent","fansub","getFansubMember","subsMemberGet","subsMemberPut","subsMemberDelete","getAllFansubMember","memberDataRow","foto_fansub","fansub_","foto_anggota","Fansub","slug","Anggota","Keterangan","keterangan","approved","memberData","kickMember","approveOrRejectFansubMember","ac","openInputDialog","title","input","inputLabel","inputPlaceholder","inputValue","inputRequired","confirmText","cancelText","infoText","approveRejectFansubMember","substring","leaveFansubMember","Validators","CONSTANTS","ctx_r13","AdminListInformationDialogComponent","fb","info","initForm","getInfo","subsInfoGet","subsInfoCreateOrUpdate","subsInfoDelete","GS","fg","group","compose","required","pattern","regexEnglishKeyboardKeys","content","confirm","cancel","close","broadcast","getAllInfo","infoDataRow","Judul","infoData","onSubmit","submitted","invalid","createUpdateInfo","c","controls","patchValue","updateValueAndValidity","setErrors","markAsUntouched","markAsPristine","deleteInfo","editInfo","ctx_r9","ctx_r11","AdminListProjectTypeComponent","imgbb","project","getProject","subsProjectCreate","subsProjectGet","subsProjectDelete","subsImgbb","description","image","regexUrl","projectDataRow","Nama","Image","Deskripsi","Berkas","total_berkas","projectData","createProject","deleteProject","nama","uploadImage","event","gambar","imageLimitExceeded","imageErrorText","file","target","files","reader","FileReader","readAsDataURL","onload","e","fileSizeImageLimit","img","document","createElement","result","toString","src","clear","submitImage","url","message","openProject","ctx_r14","_r9","ctx_r0","AdminListPushNotificationComponent","Date","now","timeMaxDaysNotification","getNotif","maxNotificationDays","subsNotifCreate","subsNotifGet","subsNotifDelete","dismissible","deadline","dateTimePicker","kalender","getAllNotif","notifDataRow","Deadline","Konten","notifData","createNotif","deleteNotif","openNotif","viewQuery","AdminListUserComponent","ss","user","getUser","subsUserGet","subsUserDelete","subsPromote","getAllUser","getBanned","map","userDataRow","Role","Username","Email","_email","kartu_tanda_penduduk_","banned","Object","keys","length","FANSUBBER","USER","userData","ban","navigate","queryParams","to","domain","cc","proDemote","disableClose","email","socketEmitVolatile","openUser","i7","ComponentPortal","TemplatePortal","PortalModule","InjectionToken","EventEmitter","Component","ViewEncapsulation","ChangeDetectionStrategy","Input","Output","Injectable","Optional","Inject","ViewChild","forwardRef","TemplateRef","ContentChild","Directive","NgModule","Subscription","Subject","merge","ESCAPE","SPACE","ENTER","PAGE_DOWN","PAGE_UP","END","HOME","DOWN_ARROW","UP_ARROW","RIGHT_ARROW","LEFT_ARROW","take","startWith","takeUntil","debounceTime","filter","i1$1","DateRange","matDatepickerAnimations","MAT_DATEPICKER_SCROLL_STRATEGY","MatDatepickerModule","MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","i1","DOCUMENT","CommonModule","DateAdapter","mixinColor","MAT_DATE_LOCALE","i2","i3","MatButtonModule","coerceBooleanProperty","i9","OverlayConfig","i2$1","NG_VALUE_ACCESSOR","NG_VALIDATORS","ReactiveFormsModule","FormsModule","i4","MatIconModule","i2$2","i7$1","MAT_INPUT_VALUE_ACCESSOR","MatInputModule","i8","MatDialogModule","i1$2","PlatformModule","NGX_MAT_DATE_FORMATS","NgxMatCalendarCell","displayValue","ariaLabel","enabled","cssClasses","compareValue","rawValue","NgxMatCalendarBody","_elementRef","_ngZone","numCols","activeCell","isRange","cellAspectRatio","previewStart","previewEnd","selectedValueChange","previewChange","_enterHandler","_skipNextFocus","cell","_getCellFromElement","run","emit","_leaveHandler","isTableCell","runOutsideAngular","element","nativeElement","addEventListener","_cellClicked","_isSelected","startValue","endValue","ngOnChanges","changes","columnChanges","rows","_firstRowOffset","_cellPadding","_cellWidth","removeEventListener","_isActiveCell","rowIndex","colIndex","cellNumber","_focusActiveCell","movePreview","onStable","asObservable","pipe","querySelector","focus","_isRangeStart","isStart","_isRangeEnd","isEnd","_isInRange","isInRange","_isComparisonStart","comparisonStart","comparisonEnd","_isComparisonBridgeStart","previousCell","previousRow","_isComparisonBridgeEnd","_isComparisonEnd","nextCell","nextRow","_isInComparisonRange","_isPreviewStart","_isPreviewEnd","_isInPreview","parentNode","getAttribute","col","parseInt","ɵfac","ElementRef","NgZone","ɵcmp","NgIf","NgForOf","NgClass","args","selector","host","exportAs","encapsulation","None","changeDetection","OnPush","styles","label","todayValue","labelMinRequiredCells","node","nodeName","start","end","rangeEnabled","NgxMatDateAdapter","isSameTime","a","b","getHour","getMinute","getSecond","copyTime","toDate","fromDate","setHour","setMinute","setSecond","compareDateWithTime","first","second","showSeconds","compareDate","setTimeByDefaultValues","date","defaultTime","Array","isArray","Error","NGX_MAT_DATE_RANGE_SELECTION_STRATEGY","DefaultNgxMatCalendarRangeStrategy","_dateAdapter","selectionFinished","currentRange","createPreview","activeDate","ɵprov","LIMIT_TIMES","minHour","maxHour","minMinute","maxMinute","minSecond","maxSecond","meridian","MERIDIANS","AM","PM","DEFAULT_STEP","NUMERIC_REGEX","PATTERN_INPUT_HOUR","PATTERN_INPUT_MINUTE","PATTERN_INPUT_SECOND","formatTwoDigitTimeValue","val","txt","createMissingDateImplError","provider","formatYearRange","DAYS_PER_WEEK","NgxMatMonthView","_changeDetectorRef","_dateFormats","_dir","_rangeStrategy","_rerenderSubscription","EMPTY","selectedChange","_userSelection","activeDateChange","_activeDate","today","oldActiveDate","validDate","_getValidDateOrNull","deserialize","clampDate","minDate","maxDate","_hasSameMonthAndYear","_init","selected","_selected","_setRanges","_minDate","_maxDate","ngAfterContentInit","localeChanges","_dateSelected","selectedYear","getYear","selectedMonth","getMonth","selectedDate","createDate","rangeStartDate","rangeEndDate","_getDateInCurrentMonth","_handleCalendarBodyKeydown","isRtl","_isRtl","keyCode","addCalendarDays","getDate","getNumDaysInMonth","altKey","addCalendarYears","addCalendarMonths","dateFilter","preventDefault","_previewEnd","_previewStart","stopPropagation","_todayDate","_getCellCompareValue","_monthLabel","getMonthNames","toLocaleUpperCase","firstOfMonth","_firstWeekOffset","getDayOfWeek","getFirstDayOfWeek","_initWeekdays","_createWeekCells","markForCheck","_matCalendarBody","_previewChanged","previewRange","detectChanges","firstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","i","narrow","_weekdays","slice","concat","daysInMonth","dateNames","getDateNames","_weeks","_shouldEnableDate","format","display","dateA11yLabel","cellClasses","dateClass","undefined","d1","d2","year","month","day","getTime","obj","isDateInstance","isValid","selectedValue","_rangeStart","_rangeEnd","_isRange","_comparisonRangeStart","_comparisonRangeEnd","ChangeDetectorRef","Directionality","decorators","yearsPerPage","yearsPerRow","NgxMatMultiYearView","yearSelected","isSameMultiYearView","_setSelectedYear","_todayYear","activeYear","minYearOfPage","getActiveOffset","_years","_createCellForYear","_yearSelected","Math","min","_getActiveCell","yearName","getYearName","_shouldEnableYear","firstOfYear","_selectedYear","dateAdapter","date1","date2","year1","year2","startingYear","getStartingYear","floor","euclideanModulo","maxYear","NgxMatYearView","monthSelected","_setSelectedMonth","_monthSelected","normalizedDate","_todayMonth","_getMonthInCurrentYear","_yearLabel","monthNames","_months","_createCellForMonth","monthName","monthYearA11yLabel","_shouldEnableMonth","_isYearAndMonthAfterMaxDate","_isYearAndMonthBeforeMinDate","maxMonth","minYear","minMonth","_selectedMonth","NgxMatCalendarHeader","_intl","calendar","changeDetectorRef","stateChanges","periodButtonText","currentView","monthYearLabel","maxYearOfPage","minYearName","maxYearName","periodButtonLabel","switchToMultiYearViewLabel","switchToMonthViewLabel","prevButtonLabel","prevMonthLabel","prevYearLabel","prevMultiYearLabel","nextButtonLabel","nextMonthLabel","nextYearLabel","nextMultiYearLabel","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","_isSameView","nextEnabled","MatDatepickerIntl","NgxMatCalendar","MatButton","_moveFocusOnNextTick","startView","_intlChanges","startAt","_startAt","_clampedActiveDate","_currentView","_calendarHeaderPortal","headerComponent","ngAfterViewChecked","focusActiveCell","complete","change","firstChange","view","_getCurrentViewComponent","updateTodaysDate","monthView","yearView","multiYearView","sameDate","_yearSelectedInMultiYearView","normalizedYear","_monthSelectedInYearView","normalizedMonth","_userSelected","_goToDateInView","CdkPortalOutlet","NgSwitch","NgSwitchCase","NgxMatTimepickerComponent","cd","formBuilder","disabled","showSpinners","stepHour","stepMinute","stepSecond","disableMinute","enableMeridian","color","_onChange","_onTouched","_destroyed","form","hour","minute","Number","isNaN","valid","valueChanges","_updateModel","_setDisableStates","writeValue","_model","_updateHourMinuteSecond","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_disabled","formatInput","replace","toggleMeridian","prop","up","_getNextValueByProp","setValue","onlySelf","emitEvent","_hour","_minute","_second","keyProp","toUpperCase","max","disable","enable","get","FormBuilder","provide","useExisting","multi","MatIcon","MatFormField","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","MatInput","DefaultValueAccessor","MaxLengthValidator","NgControlStatus","FormControlName","providers","datepickerUid","_MatDatetimepickerContentBase","NgxMatDatetimeContent","elementRef","_viewContainerRef","datepicker","hideTime","_timePicker","isViewMonth","_calendar","ngAfterViewInit","_customIcon","_templateCustomIconPortal","ViewContainerRef","NgModel","transformPanel","fadeInCalendar","animations","inputs","NgxMatDatetimePicker","_dialog","_overlay","scrollStrategy","_document","_defaultColor","_touchUi","_hideTime","openedStream","closedStream","_opened","_showSpinners","_showSeconds","_stepHour","_stepMinute","_stepSecond","_enableMeridian","_hasBackdrop","_validSelected","_focusedElementBeforeOpen","_inputSubscription","_selectedChanged","_minValidator","_maxValidator","_scrollStrategy","datepickerInput","defaultColor","_color","_getThemePalette","touchUi","newValue","opened","open","_disableMinute","_defaultTime","minValidators","maxValidators","_dateFilter","_popupRef","dispose","_popupComponentRef","select","_selectYear","_selectMonth","ok","cloned","clone","_rawValue","_registerInput","_valueChange","activeElement","_openAsDialog","_openAsPopup","hasAttached","detach","_dialogRef","_calendarPortal","isAttached","completeClose","setTimeout","viewContainerRef","panelClass","hasBackdrop","componentInstance","_setColor","_createPopup","attach","instance","updatePosition","overlayConfig","positionStrategy","_createPopupPositionStrategy","backdropClass","create","overlayElement","setAttribute","backdropClick","detachments","keydownEvents","position","flexibleConnectedTo","getConnectedOverlayOrigin","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","MatDialog","Overlay","calendarHeaderComponent","MAT_DATEPICKER_VALUE_ACCESSOR","NgxMatDatetimeInput","MAT_DATEPICKER_VALIDATORS","MatDatetimePickerInputEvent","targetElement","_formField","dateChange","dateInput","_cvaOnChange","_validatorOnChange","_datepickerSubscription","_localeSubscription","_parseValidator","_lastValueValid","control","controlValue","_datepicker","_filterValidator","_validator","ngxMatDatetimePicker","ngxMatDatetimePickerFilter","_value","oldDate","_formatValue","_min","_max","blur","registerOnValidatorChange","validate","getPopupConnectionElementRef","_onKeydown","isAltDownArrow","readOnly","_onInput","lastValueWasValid","parse","_onBlur","_onFocus","ɵdir","NgxMatTimepickerModule","ɵmod","ɵinj","imports","exports","declarations","NgxMatDatetimePickerModule","useClass","entryComponents","SUPPORTS_INTL_API","Intl","DEFAULT_MONTH_NAMES","DEFAULT_DATE_NAMES","range","String","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NgxMatNativeDateAdapter","matDateLocale","platform","useUtcForDisplay","setLocale","TRIDENT","_clampDate","EDGE","getFullYear","getDay","style","dtf","DateTimeFormat","locale","timeZone","_stripDirectionalityCharacters","_format","weekday","_createDateWithOverflow","displayFormat","setFullYear","assign","toDateString","years","months","newDate","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","NaN","getHours","getMinutes","getSeconds","setHours","setMinutes","setSeconds","n","str","d","setUTCFullYear","setUTCHours","getMilliseconds","Platform","DEFAULT_DATE_INPUT","hour12","NGX_MAT_NATIVE_DATE_FORMATS","NgxNativeDateModule","NgxMatNativeDateModule","useValue"],"sourceRoot":"webpack:///"}