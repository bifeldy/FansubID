{"version":3,"file":"default-src_app__shared_directives_custom-directive_module_ts-node_modules_angular_cdk_fesm20-ed0c89.js","mappings":"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","sources":["./src/app/_shared/directives/custom-directive.module.ts","./src/app/_shared/directives/dom-change.directive.ts","./src/app/_shared/directives/drag-drop.directive.ts","./src/app/_shared/directives/external-link.directive.ts","./src/app/_shared/services/furigana.service.ts","./node_modules/@angular/cdk/fesm2015/clipboard.mjs"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { DragDropDirective } from './drag-drop.directive';\r\nimport { ExternalLinkDirective } from './external-link.directive';\r\nimport { DomChangeDirective } from './dom-change.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DragDropDirective,\r\n    ExternalLinkDirective,\r\n    DomChangeDirective\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    DragDropDirective,\r\n    ExternalLinkDirective,\r\n    DomChangeDirective\r\n  ]\r\n})\r\nexport class CustomDirectivesModule { }","import { Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\n\nimport { GlobalService } from '../services/global.service';\nimport { BusyService } from '../services/busy.service';\nimport { FuriganaService } from '../services/furigana.service';\n\n@Directive({\n  selector: '[appDomChange]'\n})\nexport class DomChangeDirective implements OnDestroy {\n\n  changes = null;\n\n  @Output() private domChange = new EventEmitter<any>();\n\n  constructor(\n    private elementRef: ElementRef,\n    private gs: GlobalService,\n    private bs: BusyService,\n    private furi: FuriganaService\n  ) {\n    if (this.gs.isBrowser) {\n      const element = this.elementRef.nativeElement;\n      this.gs.log('[DOM_NATIVE]', element);\n      this.changes = new MutationObserver(async (mutations: MutationRecord[]) => {\n        if (this.bs.busyRequestCount > 0) return;\n        this.gs.log('[DOM_CHANGE]', mutations);\n        this.domChange.emit(mutations);\n        this.processDom(mutations);\n      });\n      this.changes.observe(element, {\n        subtree: true,\n        childList: true,\n        // attributes: true,\n        // characterData: true\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.changes?.disconnect();\n  }\n\n  processDom(mutationsList): void {\n    for (const mutation of mutationsList) {\n      this.furi.watch(mutation);\n    }\n  }\n\n}\n","import { Directive, Output, EventEmitter, HostBinding, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDragDrop]'\r\n})\r\nexport class DragDropDirective {\r\n\r\n  @HostBinding('class.fileover') fileOver: boolean;\r\n  @Output() fileDropped = new EventEmitter<any>();\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = true;\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event']) onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n  }\r\n\r\n  @HostListener('drop', ['$event']) ondrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.fileOver = false;\r\n    let files = evt.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      this.fileDropped.emit(files);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Directive, HostBinding, Input, ElementRef, OnChanges } from '@angular/core';\n\nimport { GlobalService } from '../services/global.service';\n\n@Directive({\n  selector: 'a[href]'\n})\nexport class ExternalLinkDirective implements OnChanges {\n\n  @HostBinding('attr.rel') relAttr = '';\n  @HostBinding('attr.target') targetAttr = '';\n  @HostBinding('attr.href') hrefAttr = '';\n\n  @Input() href: string;\n\n  constructor(\n    private gs: GlobalService,\n    private elementRef: ElementRef\n  ) {\n    if (this.gs.isBrowser) {\n      //\n    }\n  }\n\n  ngOnChanges(): void {\n    this.hrefAttr = this.href;\n    if (this.isLinkExternal()) {\n      this.relAttr = 'noopener';\n      this.targetAttr = '_blank';\n    }\n  }\n\n  private isLinkExternal() {\n    return this.gs.isBrowser && !this.elementRef.nativeElement.hostname.includes(location.hostname);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { BusyService } from './busy.service';\r\n\r\nimport { GlobalService } from './global.service';\r\n\r\ndeclare const Kuroshiro: any;\r\ndeclare const KuromojiAnalyzer: any;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FuriganaService {\r\n\r\n  enabled = true;\r\n\r\n  kuroshiro = null;\r\n  observer = null;\r\n  ignoreNodes = [];\r\n\r\n  constructor(\r\n    private gs: GlobalService,\r\n    private bs: BusyService\r\n  ) {\r\n    if (this.gs.isBrowser) {\r\n      this.kuroshiro = new Kuroshiro();\r\n      this.kuroshiro.init(new KuromojiAnalyzer({\r\n        dictPath: '/assets/furigana/'\r\n      }));\r\n    }\r\n  }\r\n\r\n  convert(message): any {\r\n    this.gs.log('[KUROSHIRO_CONVERT]', message);\r\n    return this.kuroshiro.convert(message, { mode: 'furigana', to: 'hiragana' });\r\n  }\r\n\r\n  replace(node, html): any[] {\r\n    const e = this.gs.document.createRange().createContextualFragment(html);\r\n    const newNodes = [];\r\n    e.childNodes.forEach((node) => newNodes.push(node));\r\n    node.parentNode?.replaceChild(e, node);\r\n    return newNodes;\r\n  }\r\n\r\n  async convertAndReplace(node): Promise<any> {\r\n    if (!this.enabled) return;\r\n    if (this.bs.busyRequestCount > 0) return;\r\n    if (!node.nodeValue.trim()) return;\r\n    if (node.parentNode.nodeName === 'RUBY') return;\r\n    if (!node.nodeValue.match(/[\\u3400-\\u9FBF]/)) return;\r\n    const result = await this.convert(node.nodeValue);\r\n    this.ignoreNodes.push(...this.replace(node, result));\r\n  }\r\n\r\n  watch(mutation): void {\r\n    if (mutation.type === 'childList') {\r\n      for (const node of mutation.addedNodes) {\r\n        this.gs.log('[KUROSHIRO_NODE_WATCHER]', node);\r\n        if (this.ignoreNodes.includes(node)) {\r\n          this.ignoreNodes.splice(this.ignoreNodes.indexOf(node), 1);\r\n          continue;\r\n        } else if (node instanceof Text) {\r\n          this.convertAndReplace(node);\r\n        } else {\r\n          const nodeList = [];\r\n          const walk = this.gs.document.createTreeWalker(node, NodeFilter.SHOW_TEXT, null);\r\n          while(walk.nextNode()) nodeList.push(walk.currentNode);\r\n          this.gs.log('[KUROSHIRO_NODE_WATCHER_LIST]', nodeList);\r\n          for (const node of nodeList) {\r\n            this.convertAndReplace(node)\r\n          }\r\n        }\r\n      }\r\n    } else if (mutation.type === 'characterData') {\r\n      this.convertAndReplace(mutation.target);\r\n    }\r\n  }\r\n\r\n}\r\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a relayout. This relayout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * relayout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = (this._textarea = this._document.createElement('textarea'));\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        this._document.body.appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try {\n            // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            textarea.remove();\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Clipboard, deps: [{ token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable });\nClipboard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Clipboard, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: Clipboard, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCopyToClipboard, deps: [{ token: Clipboard }, { token: i0.NgZone }, { token: CDK_COPY_TO_CLIPBOARD_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkCopyToClipboard.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkCopyToClipboard, selector: \"[cdkCopyToClipboard]\", inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" }, host: { listeners: { \"click\": \"copy()\" } }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkCopyToClipboard, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkCopyToClipboard]',\n                    host: {\n                        '(click)': 'copy()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: Clipboard }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [CDK_COPY_TO_CLIPBOARD_CONFIG]\n                    }] }];\n    }, propDecorators: { text: [{\n                type: Input,\n                args: ['cdkCopyToClipboard']\n            }], attempts: [{\n                type: Input,\n                args: ['cdkCopyToClipboardAttempts']\n            }], copied: [{\n                type: Output,\n                args: ['cdkCopyToClipboardCopied']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ClipboardModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nClipboardModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ClipboardModule, declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] });\nClipboardModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ClipboardModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ClipboardModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkCopyToClipboard],\n                    exports: [CdkCopyToClipboard],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n"],"names":["EventEmitter","DomChangeDirective","constructor","elementRef","gs","bs","furi","isBrowser","element","nativeElement","log","changes","MutationObserver","mutations","busyRequestCount","domChange","emit","processDom","observe","subtree","childList","ngOnDestroy","_a","disconnect","mutationsList","mutation","watch","i0","selectors","outputs","FuriganaService","kuroshiro","Kuroshiro","init","KuromojiAnalyzer","dictPath","convert","message","mode","to","replace","node","html","e","document","createRange","createContextualFragment","newNodes","childNodes","forEach","push","parentNode","replaceChild","convertAndReplace","enabled","nodeValue","trim","nodeName","match","result","ignoreNodes","type","addedNodes","includes","splice","indexOf","Text","nodeList","walk","createTreeWalker","NodeFilter","SHOW_TEXT","nextNode","currentNode","target","factory","providedIn","DOCUMENT","Injectable","Inject","InjectionToken","Directive","Optional","Input","Output","NgModule","PendingCopy","text","_document","textarea","_textarea","createElement","styles","style","position","top","opacity","left","setAttribute","value","body","appendChild","copy","successful","currentFocus","activeElement","select","setSelectionRange","length","execCommand","focus","destroy","remove","undefined","Clipboard","pendingCopy","beginCopy","ɵfac","ɵprov","args","decorators","CDK_COPY_TO_CLIPBOARD_CONFIG","CdkCopyToClipboard","_clipboard","_ngZone","config","attempts","copied","_pending","Set","remainingAttempts","pending","add","attempt","_destroyed","_currentTimeout","runOutsideAngular","setTimeout","delete","clearTimeout","clear","NgZone","ɵdir","selector","host","ClipboardModule","ɵmod","ɵinj","declarations","exports"],"sourceRoot":"webpack:///"}