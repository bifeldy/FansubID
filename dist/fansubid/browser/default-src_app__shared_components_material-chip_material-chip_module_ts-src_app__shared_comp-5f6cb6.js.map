{"version":3,"file":"default-src_app__shared_components_material-chip_material-chip_module_ts-src_app__shared_comp-5f6cb6.js","mappings":"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","sources":["./src/app/_shared/components/material-chip/material-chip.component.ts","./src/app/_shared/components/material-chip/material-chip.component.html","./src/app/_shared/components/material-chip/material-chip.module.ts","./src/app/_shared/components/notifications/notifications.component.ts","./src/app/_shared/components/notifications/notifications.component.html","./src/app/_shared/components/notifications/notifications.module.ts"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { GlobalService } from '../../services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-material-chip',\r\n  templateUrl: './material-chip.component.html',\r\n  styleUrls: ['./material-chip.component.css']\r\n})\r\nexport class MaterialChipComponent implements OnInit {\r\n\r\n  @Input() chipData = [\r\n    // {\r\n    //   name: 'Chip Name',\r\n    //   url: '/',\r\n    //   selected: true,\r\n    //   color: Warna.PINK,\r\n    // }\r\n  ];\r\n\r\n  @Output() chipClicked = new EventEmitter();\r\n\r\n  constructor(\r\n    private gs: GlobalService\r\n  ) {\r\n    if (this.gs.isBrowser) {\r\n      //\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      //\r\n    }\r\n  }\r\n\r\n  onChipClicked(data: any): void {\r\n    this.chipClicked.emit(data);\r\n  }\r\n\r\n}\r\n","<!-- Chips -->\r\n<mat-chip-list>\r\n  <mat-chip *ngFor=\"let chip of chipData\" (click)=\"$event.stopPropagation(); onChipClicked(chip)\"\r\n    [ngStyle]=\"{ 'background-color': chip.color }\" [selected]=\"chip.selected\">\r\n    {{ chip.name }}\r\n  </mat-chip>\r\n</mat-chip-list>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SharedMaterialModule } from '../../modules/shared-material.module';\r\n\r\nimport { MaterialChipComponent } from './material-chip.component';\r\n\r\n@NgModule({\r\n  declarations: [MaterialChipComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedMaterialModule\r\n  ],\r\n  exports: [MaterialChipComponent]\r\n})\r\nexport class MaterialChipModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { GlobalService } from '../../services/global.service';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'app-notifications',\r\n  templateUrl: './notifications.component.html',\r\n  styleUrls: ['./notifications.component.css']\r\n})\r\nexport class NotificationsComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private gs: GlobalService,\r\n    private notif: NotificationsService\r\n  ) {\r\n    if (this.gs.isBrowser) {\r\n      //\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.gs.isBrowser) {\r\n      //\r\n    }\r\n  }\r\n\r\n  get GS(): GlobalService {\r\n    return this.gs;\r\n  }\r\n\r\n  get ROUTER(): Router {\r\n    return this.router;\r\n  }\r\n\r\n  get NOTIF(): NotificationsService {\r\n    return this.notif;\r\n  }\r\n\r\n  removeNotif(id): void {\r\n    this.notif.removeNotif(id);\r\n  }\r\n\r\n}\r\n","<!-- Image Banner (1920px * 128px)-->\r\n<div class=\"container-fluid notif-banner align-items-center\"\r\n  [style.background-size]=\"GS.sizeContain ? 'contain' : 'cover'\"\r\n  [style.background-image]=\"'url(' + GS.bannerImg + ')'\"\r\n  [style.background-repeat]=\"GS.bgRepeat ? 'repeat-x' : 'no-repeat'\"\r\n  [style.height]=\"(\r\n    ROUTER.url === '/news' || ROUTER.url.includes('/news?') || \r\n    ROUTER.url === '/berkas' || ROUTER.url.includes('/berkas?') || \r\n    ROUTER.url === '/fansub' || ROUTER.url.includes('/fansub?')\r\n  ) ? '192px' : '128px'\"\r\n  [style.background-position-y]=\"(\r\n    ROUTER.url === '/berkas' || ROUTER.url.includes('/berkas?')\r\n  ) ? '22.5%' : ''\"\r\n  *ngIf=\"GS.bannerImg && (\r\n    ROUTER.url === '/news' || ROUTER.url.includes('/news?') || \r\n    ROUTER.url === '/berkas' || ROUTER.url.includes('/berkas?') || \r\n    ROUTER.url === '/fansub' || ROUTER.url.includes('/fansub?') ||\r\n    ROUTER.url === '/anime' || ROUTER.url.includes('/anime?') ||\r\n    ROUTER.url === '/dorama' || ROUTER.url.includes('/dorama?')\r\n  )\">\r\n  <!-- <div class=\"row align-items-center h-100\">\r\n    <div class=\"col-9 mx-auto text-bifeldy text-center\" style=\"background-color: rgba(0, 0, 0, 0.25);\">\r\n      <button type=\"button\" mat-icon-button class=\"me-3\">\r\n        <mat-icon>arrow_back</mat-icon>\r\n      </button>\r\n      {{ selectedSeasonName.toUpperCase() }}\r\n      <button type=\"button\" mat-icon-button class=\"ms-3\">\r\n        <mat-icon>arrow_forward</mat-icon>\r\n      </button>\r\n    </div>\r\n  </div> -->\r\n</div>\r\n\r\n<!-- Notification -->\r\n<div class=\"container\">\r\n  <div class=\"row pt-3\">\r\n    <div class=\"col-12\" *ngFor=\"let n of NOTIF.notifications; let i = index\">\r\n      <div class=\"alert alert-{{ n.notifData.type }} alert-dismissible fade show\">\r\n        <strong class=\"me-1\">{{ n.notifData.title }}</strong>\r\n        <span [innerHTML]=\"n.notifData.content | safeInnerHtml\"></span>\r\n        <strong class=\"ms-1\" *ngIf=\"n.notifCreator\">\r\n          --\r\n          <i>\r\n            <a routerLink=\"/user/{{ n.notifCreator }}\" class=\"text-decoration-none\">\r\n              {{ n.notifCreator }}\r\n            </a>\r\n          </i>\r\n        </strong>\r\n        <button type=\"button\" class=\"btn-close\" data-dismiss=\"alert\" *ngIf=\"n.notifData.dismissible\" (click)=\"removeNotif(n.notifData.id)\"></button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { CustomPipeModule } from '../../pipes/custom-pipe.module';\r\n\r\nimport { NotificationsComponent } from './notifications.component';\r\n\r\n@NgModule({\r\n  declarations: [NotificationsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    CustomPipeModule\r\n  ],\r\n  exports: [NotificationsComponent]\r\n})\r\nexport class NotificationsModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}