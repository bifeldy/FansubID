{"version":3,"file":"default-node_modules_ng-recaptcha_fesm2015_ng-recaptcha_mjs.js","mappings":"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","sources":["./node_modules/ng-recaptcha/fesm2015/ng-recaptcha.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, PLATFORM_ID, Injectable, Inject, Optional, EventEmitter, Component, Input, HostBinding, Output, NgModule, forwardRef, Directive, HostListener } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { of, BehaviorSubject, Subject } from 'rxjs';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\n\nconst RECAPTCHA_LANGUAGE = new InjectionToken(\"recaptcha-language\");\nconst RECAPTCHA_BASE_URL = new InjectionToken(\"recaptcha-base-url\");\nconst RECAPTCHA_NONCE = new InjectionToken(\"recaptcha-nonce-tag\");\nconst RECAPTCHA_SETTINGS = new InjectionToken(\"recaptcha-settings\");\nconst RECAPTCHA_V3_SITE_KEY = new InjectionToken(\"recaptcha-v3-site-key\");\n\nfunction loadScript(renderMode, onLoaded, urlParams, url, nonce) {\n    window.ng2recaptchaloaded = () => {\n        onLoaded(grecaptcha);\n    };\n    const script = document.createElement(\"script\");\n    script.innerHTML = \"\";\n    const baseUrl = url || \"https://www.google.com/recaptcha/api.js\";\n    script.src = `${baseUrl}?render=${renderMode}&onload=ng2recaptchaloaded${urlParams}`;\n    if (nonce) {\n        script.nonce = nonce;\n    }\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n}\nconst loader = { loadScript };\n\nclass RecaptchaLoaderService {\n    constructor(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, language, baseUrl, nonce, v3SiteKey) {\n        this.platformId = platformId;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.nonce = nonce;\n        this.v3SiteKey = v3SiteKey;\n        this.init();\n        this.ready = isPlatformBrowser(this.platformId)\n            ? RecaptchaLoaderService.ready.asObservable()\n            : of();\n    }\n    /** @internal */\n    init() {\n        if (RecaptchaLoaderService.ready) {\n            return;\n        }\n        if (isPlatformBrowser(this.platformId)) {\n            const subject = new BehaviorSubject(null);\n            RecaptchaLoaderService.ready = subject;\n            const langParam = this.language ? \"&hl=\" + this.language : \"\";\n            const renderMode = this.v3SiteKey || \"explicit\";\n            loader.loadScript(renderMode, (grecaptcha) => subject.next(grecaptcha), langParam, this.baseUrl, this.nonce);\n        }\n    }\n}\n/**\n * @internal\n * @nocollapse\n */\nRecaptchaLoaderService.ready = null;\nRecaptchaLoaderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaLoaderService, deps: [{ token: PLATFORM_ID }, { token: RECAPTCHA_LANGUAGE, optional: true }, { token: RECAPTCHA_BASE_URL, optional: true }, { token: RECAPTCHA_NONCE, optional: true }, { token: RECAPTCHA_V3_SITE_KEY, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nRecaptchaLoaderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaLoaderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaLoaderService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_LANGUAGE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_BASE_URL]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_NONCE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_V3_SITE_KEY]\n                    }] }];\n    } });\n\nlet nextId = 0;\nclass RecaptchaComponent {\n    constructor(elementRef, loader, zone, settings) {\n        this.elementRef = elementRef;\n        this.loader = loader;\n        this.zone = zone;\n        this.id = `ngrecaptcha-${nextId++}`;\n        this.errorMode = \"default\";\n        this.resolved = new EventEmitter();\n        // The rename will happen a bit later\n        // eslint-disable-next-line @angular-eslint/no-output-native\n        this.error = new EventEmitter();\n        if (settings) {\n            this.siteKey = settings.siteKey;\n            this.theme = settings.theme;\n            this.type = settings.type;\n            this.size = settings.size;\n            this.badge = settings.badge;\n        }\n    }\n    ngAfterViewInit() {\n        this.subscription = this.loader.ready.subscribe((grecaptcha) => {\n            if (grecaptcha != null && grecaptcha.render instanceof Function) {\n                this.grecaptcha = grecaptcha;\n                this.renderRecaptcha();\n            }\n        });\n    }\n    ngOnDestroy() {\n        // reset the captcha to ensure it does not leave anything behind\n        // after the component is no longer needed\n        this.grecaptchaReset();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    /**\n     * Executes the invisible recaptcha.\n     * Does nothing if component's size is not set to \"invisible\".\n     */\n    execute() {\n        if (this.size !== \"invisible\") {\n            return;\n        }\n        if (this.widget != null) {\n            this.grecaptcha.execute(this.widget);\n        }\n        else {\n            // delay execution of recaptcha until it actually renders\n            this.executeRequested = true;\n        }\n    }\n    reset() {\n        if (this.widget != null) {\n            if (this.grecaptcha.getResponse(this.widget)) {\n                // Only emit an event in case if something would actually change.\n                // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n                // on a non-resolved captcha.\n                this.resolved.emit(null);\n            }\n            this.grecaptchaReset();\n        }\n    }\n    /**\n     * ⚠️ Warning! Use this property at your own risk!\n     *\n     * While this member is `public`, it is not a part of the component's public API.\n     * The semantic versioning guarantees _will not be honored_! Thus, you might find that this property behavior changes in incompatible ways in minor or even patch releases.\n     * You are **strongly advised** against using this property.\n     * Instead, use more idiomatic ways to get reCAPTCHA value, such as `resolved` EventEmitter, or form-bound methods (ngModel, formControl, and the likes).å\n     */\n    get __unsafe_widgetValue() {\n        return this.widget != null\n            ? this.grecaptcha.getResponse(this.widget)\n            : null;\n    }\n    /** @internal */\n    expired() {\n        this.resolved.emit(null);\n    }\n    /** @internal */\n    errored(args) {\n        this.error.emit(args);\n    }\n    /** @internal */\n    captchaResponseCallback(response) {\n        this.resolved.emit(response);\n    }\n    /** @internal */\n    grecaptchaReset() {\n        if (this.widget != null) {\n            this.zone.runOutsideAngular(() => this.grecaptcha.reset(this.widget));\n        }\n    }\n    /** @internal */\n    renderRecaptcha() {\n        // This `any` can be removed after @types/grecaptcha get updated\n        const renderOptions = {\n            badge: this.badge,\n            callback: (response) => {\n                this.zone.run(() => this.captchaResponseCallback(response));\n            },\n            \"expired-callback\": () => {\n                this.zone.run(() => this.expired());\n            },\n            sitekey: this.siteKey,\n            size: this.size,\n            tabindex: this.tabIndex,\n            theme: this.theme,\n            type: this.type,\n        };\n        if (this.errorMode === \"handled\") {\n            renderOptions[\"error-callback\"] = (...args) => {\n                this.zone.run(() => this.errored(args));\n            };\n        }\n        this.widget = this.grecaptcha.render(this.elementRef.nativeElement, renderOptions);\n        if (this.executeRequested === true) {\n            this.executeRequested = false;\n            this.execute();\n        }\n    }\n}\nRecaptchaComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaComponent, deps: [{ token: i0.ElementRef }, { token: RecaptchaLoaderService }, { token: i0.NgZone }, { token: RECAPTCHA_SETTINGS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nRecaptchaComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: RecaptchaComponent, selector: \"re-captcha\", inputs: { id: \"id\", siteKey: \"siteKey\", theme: \"theme\", type: \"type\", size: \"size\", tabIndex: \"tabIndex\", badge: \"badge\", errorMode: \"errorMode\" }, outputs: { resolved: \"resolved\", error: \"error\" }, host: { properties: { \"attr.id\": \"this.id\" } }, exportAs: [\"reCaptcha\"], ngImport: i0, template: ``, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaComponent, decorators: [{\n            type: Component,\n            args: [{\n                    exportAs: \"reCaptcha\",\n                    selector: \"re-captcha\",\n                    template: ``,\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: RecaptchaLoaderService }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_SETTINGS]\n                    }] }];\n    }, propDecorators: { id: [{\n                type: Input\n            }, {\n                type: HostBinding,\n                args: [\"attr.id\"]\n            }], siteKey: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], size: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], badge: [{\n                type: Input\n            }], errorMode: [{\n                type: Input\n            }], resolved: [{\n                type: Output\n            }], error: [{\n                type: Output\n            }] } });\n\nclass RecaptchaCommonModule {\n}\nRecaptchaCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaCommonModule, declarations: [RecaptchaComponent], exports: [RecaptchaComponent] });\nRecaptchaCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaCommonModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RecaptchaComponent],\n                    exports: [RecaptchaComponent],\n                }]\n        }] });\n\nclass RecaptchaModule {\n}\nRecaptchaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaModule, imports: [RecaptchaCommonModule], exports: [RecaptchaComponent] });\nRecaptchaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaModule, providers: [RecaptchaLoaderService], imports: [[RecaptchaCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [RecaptchaComponent],\n                    imports: [RecaptchaCommonModule],\n                    providers: [RecaptchaLoaderService],\n                }]\n        }] });\n\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\nclass ReCaptchaV3Service {\n    constructor(zone, siteKey, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, baseUrl, nonce, language) {\n        /** @internal */\n        this.onLoadComplete = (grecaptcha) => {\n            this.grecaptcha = grecaptcha;\n            if (this.actionBacklog && this.actionBacklog.length > 0) {\n                this.actionBacklog.forEach(([action, subject]) => this.executeActionWithSubject(action, subject));\n                this.actionBacklog = undefined;\n            }\n        };\n        this.zone = zone;\n        this.isBrowser = isPlatformBrowser(platformId);\n        this.siteKey = siteKey;\n        this.nonce = nonce;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.init();\n    }\n    get onExecute() {\n        if (!this.onExecuteSubject) {\n            this.onExecuteSubject = new Subject();\n            this.onExecuteObservable = this.onExecuteSubject.asObservable();\n        }\n        return this.onExecuteObservable;\n    }\n    get onExecuteError() {\n        if (!this.onExecuteErrorSubject) {\n            this.onExecuteErrorSubject = new Subject();\n            this.onExecuteErrorObservable = this.onExecuteErrorSubject.asObservable();\n        }\n        return this.onExecuteErrorObservable;\n    }\n    /**\n     * Executes the provided `action` with reCAPTCHA v3 API.\n     * Use the emitted token value for verification purposes on the backend.\n     *\n     * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n     * https://developers.google.com/recaptcha/docs/v3.\n     *\n     * @param {string} action the action to execute\n     * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n     * The returned `Observable` completes immediately after emitting a value.\n     */\n    execute(action) {\n        const subject = new Subject();\n        if (this.isBrowser) {\n            if (!this.grecaptcha) {\n                // todo: add to array of later executions\n                if (!this.actionBacklog) {\n                    this.actionBacklog = [];\n                }\n                this.actionBacklog.push([action, subject]);\n            }\n            else {\n                this.executeActionWithSubject(action, subject);\n            }\n        }\n        return subject.asObservable();\n    }\n    /** @internal */\n    executeActionWithSubject(action, subject) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const onError = (error) => {\n            this.zone.run(() => {\n                subject.error(error);\n                if (this.onExecuteErrorSubject) {\n                    // We don't know any better at this point, unfortunately, so have to resort to `any`\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    this.onExecuteErrorSubject.next({ action, error });\n                }\n            });\n        };\n        this.zone.runOutsideAngular(() => {\n            try {\n                this.grecaptcha\n                    .execute(this.siteKey, { action })\n                    .then((token) => {\n                    this.zone.run(() => {\n                        subject.next(token);\n                        subject.complete();\n                        if (this.onExecuteSubject) {\n                            this.onExecuteSubject.next({ action, token });\n                        }\n                    });\n                }, onError);\n            }\n            catch (e) {\n                onError(e);\n            }\n        });\n    }\n    /** @internal */\n    init() {\n        if (this.isBrowser) {\n            if (\"grecaptcha\" in window) {\n                this.grecaptcha = grecaptcha;\n            }\n            else {\n                const langParam = this.language ? \"&hl=\" + this.language : \"\";\n                loader.loadScript(this.siteKey, this.onLoadComplete, langParam, this.baseUrl, this.nonce);\n            }\n        }\n    }\n}\nReCaptchaV3Service.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReCaptchaV3Service, deps: [{ token: i0.NgZone }, { token: RECAPTCHA_V3_SITE_KEY }, { token: PLATFORM_ID }, { token: RECAPTCHA_BASE_URL, optional: true }, { token: RECAPTCHA_NONCE, optional: true }, { token: RECAPTCHA_LANGUAGE, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nReCaptchaV3Service.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReCaptchaV3Service });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: ReCaptchaV3Service, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [RECAPTCHA_V3_SITE_KEY]\n                    }] }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_BASE_URL]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_NONCE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [RECAPTCHA_LANGUAGE]\n                    }] }];\n    } });\n\nclass RecaptchaV3Module {\n}\nRecaptchaV3Module.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaV3Module, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaV3Module.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaV3Module });\nRecaptchaV3Module.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaV3Module, providers: [ReCaptchaV3Service] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaV3Module, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [ReCaptchaV3Service],\n                }]\n        }] });\n\nclass RecaptchaValueAccessorDirective {\n    constructor(host) {\n        this.host = host;\n        this.requiresControllerReset = false;\n    }\n    writeValue(value) {\n        if (!value) {\n            this.host.reset();\n        }\n        else {\n            // In this case, it is most likely that a form controller has requested to write a specific value into the component.\n            // This isn't really a supported case - reCAPTCHA values are single-use, and, in a sense, readonly.\n            // What this means is that the form controller has recaptcha control state of X, while reCAPTCHA itself can't \"restore\"\n            // to that state. In order to make form controller aware of this discrepancy, and to fix the said misalignment,\n            // we'll be telling the controller to \"reset\" the value back to null.\n            if (this.host.__unsafe_widgetValue !== value &&\n                Boolean(this.host.__unsafe_widgetValue) === false) {\n                this.requiresControllerReset = true;\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n        if (this.requiresControllerReset) {\n            this.requiresControllerReset = false;\n            this.onChange(null);\n        }\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onResolve($event) {\n        if (this.onChange) {\n            this.onChange($event);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n}\nRecaptchaValueAccessorDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaValueAccessorDirective, deps: [{ token: RecaptchaComponent }], target: i0.ɵɵFactoryTarget.Directive });\nRecaptchaValueAccessorDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: RecaptchaValueAccessorDirective, selector: \"re-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]\", host: { listeners: { \"resolved\": \"onResolve($event)\" } }, providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RecaptchaValueAccessorDirective),\n        },\n    ], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaValueAccessorDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => RecaptchaValueAccessorDirective),\n                        },\n                    ],\n                    selector: \"re-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]\",\n                }]\n        }], ctorParameters: function () { return [{ type: RecaptchaComponent }]; }, propDecorators: { onResolve: [{\n                type: HostListener,\n                args: [\"resolved\", [\"$event\"]]\n            }] } });\n\nclass RecaptchaFormsModule {\n}\nRecaptchaFormsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaFormsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nRecaptchaFormsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaFormsModule, declarations: [RecaptchaValueAccessorDirective], imports: [FormsModule, RecaptchaCommonModule], exports: [RecaptchaValueAccessorDirective] });\nRecaptchaFormsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaFormsModule, imports: [[FormsModule, RecaptchaCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: RecaptchaFormsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [RecaptchaValueAccessorDirective],\n                    exports: [RecaptchaValueAccessorDirective],\n                    imports: [FormsModule, RecaptchaCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RECAPTCHA_BASE_URL, RECAPTCHA_LANGUAGE, RECAPTCHA_NONCE, RECAPTCHA_SETTINGS, RECAPTCHA_V3_SITE_KEY, ReCaptchaV3Service, RecaptchaComponent, RecaptchaFormsModule, RecaptchaLoaderService, RecaptchaModule, RecaptchaV3Module, RecaptchaValueAccessorDirective };\n"],"names":["i0","InjectionToken","PLATFORM_ID","Injectable","Inject","Optional","EventEmitter","Component","Input","HostBinding","Output","NgModule","forwardRef","Directive","HostListener","isPlatformBrowser","of","BehaviorSubject","Subject","NG_VALUE_ACCESSOR","FormsModule","RECAPTCHA_LANGUAGE","RECAPTCHA_BASE_URL","RECAPTCHA_NONCE","RECAPTCHA_SETTINGS","RECAPTCHA_V3_SITE_KEY","loadScript","renderMode","onLoaded","urlParams","url","nonce","window","ng2recaptchaloaded","grecaptcha","script","document","createElement","innerHTML","baseUrl","src","async","defer","head","appendChild","loader","RecaptchaLoaderService","constructor","platformId","language","v3SiteKey","init","ready","asObservable","subject","langParam","next","ɵfac","ɵprov","type","Object","decorators","args","undefined","nextId","RecaptchaComponent","elementRef","zone","settings","id","errorMode","resolved","error","siteKey","theme","size","badge","ngAfterViewInit","subscription","subscribe","render","Function","renderRecaptcha","ngOnDestroy","grecaptchaReset","unsubscribe","execute","widget","executeRequested","reset","getResponse","emit","__unsafe_widgetValue","expired","errored","captchaResponseCallback","response","runOutsideAngular","renderOptions","callback","run","sitekey","tabindex","tabIndex","nativeElement","ElementRef","NgZone","ɵcmp","exportAs","selector","template","RecaptchaCommonModule","ɵmod","ɵinj","declarations","exports","RecaptchaModule","imports","providers","ReCaptchaV3Service","onLoadComplete","actionBacklog","length","forEach","action","executeActionWithSubject","isBrowser","onExecute","onExecuteSubject","onExecuteObservable","onExecuteError","onExecuteErrorSubject","onExecuteErrorObservable","push","onError","then","token","complete","e","RecaptchaV3Module","RecaptchaValueAccessorDirective","host","requiresControllerReset","writeValue","value","Boolean","registerOnChange","fn","onChange","registerOnTouched","onTouched","onResolve","$event","ɵdir","multi","provide","useExisting","RecaptchaFormsModule"],"sourceRoot":"webpack:///"}