{"version":3,"file":"src_app__pages_anime_anime_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGiD;;;;;;;;;;;;;;;;;;;;ICFjD,0EAAyC;IAQ1B,wDAA4F;IAAA,6DAAI;IAGvG,0EAAsB;IACD,kUAAe,wBAAiB,IAAC;IAAuB,6DAAoB;IAEjG,2EAAiB;IACf,qFAAoD;IACtD,6DAAM;IACN,2EAAsB;IACpB,gGAAqF;IACvF,6DAAM;IAIR,4EAAuD;IAGjD,uEAAuD;IACzD,6DAAM;IACN,4EAAqC;IACmC,sSAAS,0BAAmB,IAAC;IAEjG,iFAAuB;IAAA,yEAAY;IAAA,6DAAW;IAAC,yDAC/C;IAAA,iFAAuB;IAAA,sEAAS;IAAA,6DAAW;IAAC,yDAA4B;IAAA,kEAAM;IAC9E,iFAAuB;IAAA,uEAAU;IAAA,6DAAW;IAAC,yDAC/C;IAAA,6DAAS;IAEX,4EAAqC;IAEjC,sSAAS,iBAAU,IAAC;IACpB,iFAAuB;IAAA,qEAAQ;IAAA,6DAAW;IAAC,yDAC3C;IAAA,iFAAuB;IAAA,kFAAqB;IAAA,6DAAW;IAAC,yDAAkC;IAAA,kEAAM;IAChG,iFAAuB;IAAA,kEAAK;IAAA,6DAAW;IAAC,yDAC1C;IAAA,6DAAS;IAKjB,2EAAiB;IAEK,kUAAe,yBAAkB,IAAC,iRAAoB,uBAAgB,IAApC,mRAA0D,iCAA0B,IAApF,mRAC0B,iCAA0B,IADpD,iRACyE,gCAAyB,IADlG,8QAEU,8BAAsB,IAFhC;IAEkC,6DAAmB;IAI/G,uEAAgI;IAElI,6DAAM;;;IAjDS,2DAA4F;IAA5F,mOAA4F;IAI5C,2DAAqB;IAArB,sFAAqB;IAM5C,2DAAuB;IAAvB,wFAAuB;IAQ1B,2DAA2B;IAA3B,0JAA2B;IAIlD,2DAAmE;IAAnE,2JAAmE;IACpB,2DAC/C;IAD+C,4HAC/C;IAA4C,2DAA4B;IAA5B,yGAA4B;IAC3B,2DAC/C;IAD+C,6JAC/C;IAK6C,2DAC3C;IAD2C,gHAC3C;IAAwD,2DAAkC;IAAlC,+GAAkC;IAClD,2DAC1C;IAD0C,wRAC1C;IAQF,2DAAmB;IAAnB,oFAAmB;IAKiC,2DAA6D;IAA7D,yHAA6D;;ADtCpH,MAAM,oBAAoB;IAoD/B,YACU,MAAc,EACd,cAA8B,EAC9B,EAAiB,EACjB,EAAe,EACf,EAAmB,EACnB,KAAmB,EACnB,EAAc,EACd,EAAiB,EACjB,MAAqB;QARrB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,OAAE,GAAF,EAAE,CAAe;QACjB,OAAE,GAAF,EAAE,CAAa;QACf,OAAE,GAAF,EAAE,CAAiB;QACnB,UAAK,GAAL,KAAK,CAAc;QACnB,OAAE,GAAF,EAAE,CAAY;QACd,OAAE,GAAF,EAAE,CAAe;QACjB,WAAM,GAAN,MAAM,CAAe;QA3D/B,cAAS,GAAG,yBAAyB,CAAC;QAEtC,YAAO,GAAG,EAAE,CAAC;QACb,cAAS,GAAG,IAAI,CAAC;QAEjB,UAAK,GAAG,CAAC,CAAC;QACV,SAAI,GAAG,CAAC,CAAC;QACT,QAAG,GAAG,EAAE,CAAC;QAET,MAAC,GAAG,EAAE,CAAC;QACP,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAG,EAAE,CAAC;QAEX,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG,EAAE,CAAC;QAEjB,qBAAgB,GAAG,EAAE,CAAC;QAEtB,uBAAkB,GAAG,KAAK,CAAC;QAE3B,eAAU,GAAG,CAAC,CAAC;QAEf,aAAQ,GAAG,EAAE,CAAC;QAEd,cAAS,GAAG,EAAE,CAAC;QAEf,YAAO,GAAQ;YACb;gBACE,IAAI,EAAE,eAAe;gBACrB,IAAI,EAAE,gBAAgB;gBACtB,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,EAAE;aACT;YACD;gBACE,IAAI,EAAE,gBAAgB;gBACtB,IAAI,EAAE,WAAW;gBACjB,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE;oBACJ,MAAM,EAAE,CAAC,QAAQ,EAAE,cAAc,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC;oBACtE,GAAG,EAAE,EAAE;iBACR;aACF;SACF,CAAC;QAEF,cAAS,GAAG,IAAI,CAAC;QACjB,eAAU,GAAG,IAAI,CAAC;QAClB,eAAU,GAAG,IAAI,CAAC;QAClB,cAAS,GAAG,IAAI,CAAC;QACjB,gBAAW,GAAG,IAAI,CAAC;QAajB,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,2BAA2B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9F,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,WAAW,EAAE,CAAC;IAC3D,CAAC;IAED,WAAW;;QACT,UAAI,CAAC,SAAS,0CAAE,WAAW,EAAE,CAAC;QAC9B,UAAI,CAAC,UAAU,0CAAE,WAAW,EAAE,CAAC;QAC/B,UAAI,CAAC,UAAU,0CAAE,WAAW,EAAE,CAAC;QAC/B,UAAI,CAAC,SAAS,0CAAE,WAAW,EAAE,CAAC;QAC9B,UAAI,CAAC,WAAW,0CAAE,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC;YACpD,IAAI,EAAE,CAAC,CAAC,EAAE;gBACR,MAAM,YAAY,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;gBACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC;oBAC3D,IAAI,EAAE,GAAG,CAAC,EAAE;;wBACV,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;wBAC3C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC;wBAC5B,IAAI,CAAC,EAAE,CAAC,kBAAkB,CACxB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,EACzB,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAC5B,GAAG,gBAAI,CAAC,SAAS,CAAC,kBAAkB,0CAAE,QAAQ,0CAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAC5D,IAAI,CAAC,SAAS,CAAC,SAAS,CACzB,CAAC;wBACF,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;wBACf,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE;4BACrB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACrC,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;gCACtB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;oCACjB,EAAE,EAAE,CAAC,CAAC,EAAE;oCACR,IAAI,EAAE,CAAC,CAAC,IAAI;oCACZ,QAAQ,EAAE,IAAI;oCACd,KAAK,EAAE,qDAAU;iCAClB,CAAC,CAAC;6BACJ;4BACD,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;4BACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gCAClB,KAAK,EAAE,kBAAkB;gCACzB,IAAI,EAAE,aAAa;gCACnB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;gCAC7B,OAAO,EAAE,wCAAwC;6BAClD,CAAC,CAAC;4BACH,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,0BAA0B,EAAE,qBAAqB,EAAE,GAAG,IAAI,CAAC,SAAS,UAAU,IAAI,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;4BAChI,IAAI,CAAC,cAAc,EAAE,CAAC;4BACtB,IAAI,CAAC,cAAc,EAAE,CAAC;yBACvB;oBACH,CAAC;oBACD,KAAK,EAAE,GAAG,CAAC,EAAE;wBACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;wBAClD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;wBACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;4BAC/B,WAAW,EAAE;gCACX,SAAS,EAAE,QAAQ;6BACpB;yBACF,CAAC,CAAC;oBACL,CAAC;iBACF,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,uBAAuB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;IAC3F,CAAC;IAED,2BAA2B,CAAC,WAAmB;QAC7C,OAAO,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACvF,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;YAC/B,WAAW,EAAE;gBACX,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,IAAI,EAAE,IAAI,CAAC,IAAI;aAChB;SACF,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,IAAS;QAC1B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;QACd,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,iBAAiB,CAAC,IAAS;QACzB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;YAC9B,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;SAChB;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YACxH,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;gBAChD,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;gBACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;gBACtB,KAAK,MAAM,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBACzC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACpB,EAAE,EAAE,CAAC,CAAC,EAAE;wBACR,OAAO,EAAE,CAAC,CAAC,OAAO;wBAClB,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS;wBACvB,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ;wBACzB,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI;wBAC5B,sBAAsB;wBACtB,OAAO,EAAE,CAAC,CAAC,UAAU;wBACrB,aAAa,EAAE,CAAC,CAAC,IAAI;qBACtB,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC;gBAC5C,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpC,IAAI,CAAC,YAAY,EAAE,CAAC;iBACrB;gBACD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,2BAA2B,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBACvD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,YAAY;QACV,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAC/B,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;SAChB;QACD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC;YAC3E,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,gCAAgC,EAAE,GAAG,CAAC,CAAC;gBACnD,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;oBAChC,CAAC,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;iBAC/B;gBACD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,8BAA8B,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBAC1D,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC;YACrF,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;gBAC3C,KAAK,MAAM,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;wBACpB,EAAE,EAAE,CAAC,CAAC,EAAE;wBACR,KAAK,EAAE,CAAC,CAAC,SAAS;wBAClB,KAAK,EAAE,CAAC,CAAC,IAAI;wBACb,IAAI,EAAE,CAAC,CAAC,IAAI;wBACZ,WAAW,EAAE,GAAG,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,WAAW,EAAE;qBAChE,CAAC,CAAC;iBACJ;gBACD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;gBACxC,IAAI,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;oBACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;iBAChC;gBACD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBAClD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,IAAI;QACZ,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;QAChD,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,SAAS,gBAAgB,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;IAED,kBAAkB,CAAC,IAAI;QACrB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;QACzB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,6BAA6B,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;;wFAxRU,oBAAoB;mHAApB,oBAAoB;QCjBjC,mHAyDM;;QAzDkB,gFAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA6B;AAEkC;AACd;AAKnB;;;;;;;;;;;;;;;;;AAgB9D,MAAM,kBAAkB;IA+B7B,YACU,cAA8B,EAC9B,MAAc,EACd,EAAe,EACf,EAAiB,EACjB,EAAc,EACd,KAAmB;QALnB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QACf,OAAE,GAAF,EAAE,CAAe;QACjB,OAAE,GAAF,EAAE,CAAY;QACd,UAAK,GAAL,KAAK,CAAc;QAjC7B,iBAAY,GAAG,IAAI,CAAC;QACpB,gBAAW,GAAG,IAAI,CAAC;QAEnB,uBAAkB,GAAG,IAAI,CAAC;QAK1B,sBAAiB,GAAG,EAAE,CAAC;QACvB,kBAAa,GAAG,EAAE,CAAC;QAEnB,YAAO,GAAG;YACR;gBACE,IAAI,EAAE,cAAc;gBACpB,IAAI,EAAE,gBAAgB;gBACtB,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE;oBACJ,MAAM,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,aAAa,CAAC;oBACzD,GAAG,EAAE,EAAE;iBACR;aACF;SACF,CAAC;QAEF,mBAAc,GAAG,IAAI,CAAC;QACtB,sBAAiB,GAAG,IAAI,CAAC;QACzB,oBAAe,GAAG,IAAI,CAAC;QAUrB,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,+BAA+B,CAAC;QACpD,IAAI,CAAC,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG,IAAI,CAAC;IAC7B,CAAC;IAED,WAAW;;QACT,UAAI,CAAC,cAAc,0CAAE,WAAW,EAAE,CAAC;QACnC,UAAI,CAAC,iBAAiB,0CAAE,WAAW,EAAE,CAAC;QACtC,UAAI,CAAC,eAAe,0CAAE,WAAW,EAAE,CAAC;IACtC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,EAAE,GAAG,IAAI,qDAAS,CAAC;YACtB,WAAW,EAAE,IAAI,uDAAW,CAAC,EAAE,KAAK,EAAE,8DAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,+DAAmB,CAAC;SACvF,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChF,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QAC9E,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACtD,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,EAAE;YACrB,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;IACH,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC;YAC9D,IAAI,EAAE,EAAE,CAAC,EAAE;gBACT,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;gBACf,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAC9B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CACrF,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;gBAC7B,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,8DAAM,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5G,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;gBAC9E,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CACvC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;qBACrC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAC,CACnG,CAAC,CAAC,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACxD,IAAI,CAAC,EAAE,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,kBAAkB,CAAC,CAAC,GAAG,CAAC;gBAChG,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;gBACf,IAAI,CAAC,gBAAgB,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpD,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,2BAA2B,CAAC,WAAmB;QAC7C,OAAO,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACvF,CAAC;IAED,iBAAiB,CAAC,cAAsB,EAAE,UAAiC;QACzE,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC;QAC5C,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChF,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC;QAC9E,UAAU,CAAC,KAAK,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,gBAAgB,CAAC,OAAO,GAAG,KAAK;QAC9B,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QACf,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC;YACxG,IAAI,EAAE,GAAG,CAAC,EAAE;gBACV,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;gBAC7C,IAAI,CAAC,aAAa,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/E,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,yBAAyB,EAAE,IAAI,EAAE,2BAA2B,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;iBACtG;gBACD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;gBACf,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBACpD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QAC9B,MAAM,mBAAmB,GAAG,EAAE,CAAC;QAC/B,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,aAAa,EAAE;YACnC,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACjC;QACD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC;YAC9E,IAAI,EAAE,GAAG,CAAC,EAAE;;gBACV,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,wBAAwB,EAAE,GAAG,CAAC,CAAC;gBAC3C,IAAI,uBAAuB,GAAG,EAAE,CAAC;gBACjC,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,aAAa,EAAE;oBACnC,EAAE,CAAC,WAAW,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;oBACpC,KAAK,MAAM,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE;wBAC9B,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;wBAClB,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;qBACjB;oBACD,uBAAuB,CAAC,IAAI,CAAC;wBAC3B,EAAE,EAAE,EAAE,CAAC,EAAE;wBACT,KAAK,EAAE,GAAG,QAAE,CAAC,UAAU,0CAAE,WAAW,EAAE,MAAM,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;wBAC1D,MAAM,EAAE,EAAE,CAAC,SAAS;wBACpB,aAAa,EAAE,EAAE,CAAC,KAAK;wBACvB,aAAa,EAAE,EAAE,CAAC,WAAW;qBAC9B,CAAC,CAAC;iBACJ;gBACD,uBAAuB,GAAG,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,CAAC;gBACpH,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,uBAAuB,CAAC;gBACnD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC5C,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,sBAAsB,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;gBAClD,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;YACjB,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;YAC/B,WAAW,EAAE;gBACX,MAAM,EAAE,IAAI,CAAC,kBAAkB;gBAC/B,IAAI,EAAE,IAAI,CAAC,WAAW;aACvB;SACF,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,IAAI;QAChB,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;QAClD,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,IAAI;YACF,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;SACvD;QAAC,OAAO,CAAC,EAAE;YACV,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,IAAI,CAAC,EAAE,IAAI,UAAU,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IACpD,CAAC;;oFAhLU,kBAAkB;gHAAlB,kBAAkB,+GALlB;YACT,EAAE,OAAO,EAAE,gEAAW,EAAE,QAAQ,EAAE,gFAAiB,EAAE,IAAI,EAAE,CAAC,oEAAe,EAAE,8FAA+B,CAAC,EAAC;YAC9G,EAAE,OAAO,EAAE,qEAAgB,EAAE,QAAQ,EAAE,8DAAU,EAAE;SACpD;;QCtBH,+EAAuC;QAGvC,yEAAuB;QAOE,qEAAU;QAAA,4DAAY;QACjC,iFAAiF;QAArE,oMAA8B,mGAAgB,yBAAqB,IAArC;QACxC,iFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAC9C,iFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAC9C,kFAA2B;QAAA,kEAAM;QAAA,4DAAa;QAC9C,kFAAyB;QAAA,gEAAI;QAAA,4DAAa;QAG9C,sFAAqD;QACxC,iEAAK;QAAA,4DAAY;QAC5B,wEAAyG;QACzG,6FAA8D;QACiD,iEAAK;QAAA,4DAAW;QAE/H,0FAAmH;QAApE,oTAAgB,kCAAiC,IAAC;QAAkB,4DAAiB;QAI1I,0EAAoB;QACK,4KAAe,yBAAqB,IAAC;QAAuC,4DAAwB;QAKnI,2EAAsB;QACF,uKAAe,sBAAkB,IAAC,uHAAoB,yBAAqB,IAAzC;QAA+D,4DAAmB;;;QA5BnF,0DAAgB;QAAhB,6EAAgB;QAEN,0DAAkB;QAAlB,2EAAkB;QAEzD,0DAA8B;QAA9B,yFAA8B;QAS1B,2DAAwB;QAAxB,8EAAwB;QACP,0DAAc;QAAd,oEAAc;QAQU,0DAAqC;QAArC,kGAAqC;QAMT,0DAAmB;QAAnB,gFAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCvE;AACQ;AACW;AAEkB;AAEU;AACG;AACgC;AACrB;AACV;AAE3B;AACM;;;AAE7E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,SAAS,EAAE,gFAAkB;KAC9B;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,sFAAoB;KAChC;CACF,CAAC;AAoBK,MAAM,WAAW;;sEAAX,WAAW;wGAAX,WAAW;4GAbb;YACP,yDAAY;YACZ,mEAAqB,CAAC,MAAM,CAAC;YAC7B,wDAAW;YACX,gEAAmB;YACnB,wFAAoB;YACpB,kGAAiB;YACjB,qIAA4B;YAC5B,qGAAkB;YAClB,gHAAqB;YACrB,sGAAmB;SACpB;mIAEU,WAAW,mBAhBpB,gFAAkB;QAClB,sFAAoB,aAGpB,yDAAY,8DAEZ,wDAAW;QACX,gEAAmB;QACnB,wFAAoB;QACpB,kGAAiB;QACjB,qIAA4B;QAC5B,qGAAkB;QAClB,gHAAqB;QACrB,sGAAmB","sources":["./src/app/_pages/anime/anime-detail/anime-detail.component.ts","./src/app/_pages/anime/anime-detail/anime-detail.component.html","./src/app/_pages/anime/anime-list/anime-list.component.ts","./src/app/_pages/anime/anime-list/anime-list.component.html","./src/app/_pages/anime/anime.module.ts"],"sourcesContent":["import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { WARNA } from '../../../../models/warna';\r\n\r\nimport { AnimeService } from '../../../_shared/services/anime.service';\r\nimport { BerkasService } from '../../../_shared/services/berkas.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\nimport { FabService } from '../../../_shared/services/fab.service';\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\nimport { PageInfoService } from '../../../_shared/services/page-info.service';\r\nimport { WinboxService } from '../../../_shared/services/winbox.service';\r\n\r\n@Component({\r\n  selector: 'app-anime-detail',\r\n  templateUrl: './anime-detail.component.html',\r\n  styleUrls: ['./anime-detail.component.css']\r\n})\r\nexport class AnimeDetailComponent implements OnInit, OnDestroy {\r\n\r\n  malDomain = 'https://myanimelist.net';\r\n\r\n  animeId = '';\r\n  animeData = null;\r\n\r\n  count = 0;\r\n  page = 1;\r\n  row = 10;\r\n\r\n  q = '';\r\n  sort = '';\r\n  order = '';\r\n\r\n  fansubAnime = [];\r\n  berkasAnime = [];\r\n\r\n  allBerkasAnimeId = [];\r\n\r\n  fansubPageFinished = false;\r\n\r\n  fansubPage = 1;\r\n\r\n  chipData = [];\r\n\r\n  panelData = [];\r\n\r\n  tabData: any = [\r\n    {\r\n      name: 'Daftar Fansub',\r\n      icon: 'closed_caption',\r\n      type: 'grid',\r\n      data: []\r\n    },\r\n    {\r\n      name: 'Berkas Terkait',\r\n      icon: 'file_copy',\r\n      type: 'table',\r\n      data: {\r\n        column: ['Proyek', /* 'Image', */ 'Nama Berkas', 'Tanggal', 'Pemilik'],\r\n        row: []\r\n      }\r\n    }\r\n  ];\r\n\r\n  subsAnime = null;\r\n  subsBerkas = null;\r\n  subsFansub = null;\r\n  subsParam = null;\r\n  subsTrusted = null;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private gs: GlobalService,\r\n    private bs: BusyService,\r\n    private pi: PageInfoService,\r\n    private anime: AnimeService,\r\n    private fs: FabService,\r\n    private wb: WinboxService,\r\n    private berkas: BerkasService\r\n  ) {\r\n    this.gs.bannerImg = null;\r\n    this.gs.bgRepeat = true;\r\n    this.gs.sizeContain = true;\r\n  }\r\n\r\n  get SEASON(): string {\r\n    return this.findSeasonNameByMonthNumber(new Date(this.animeData.start_date).getMonth() + 1);\r\n  }\r\n\r\n  get YEAR(): number {\r\n    return new Date(this.animeData.start_date).getFullYear();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsAnime?.unsubscribe();\r\n    this.subsBerkas?.unsubscribe();\r\n    this.subsFansub?.unsubscribe();\r\n    this.subsParam?.unsubscribe();\r\n    this.subsTrusted?.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.subsParam = this.activatedRoute.params.subscribe({\r\n      next: p => {\r\n        const paramAnimeId = p['animeId'];\r\n        this.animeId = paramAnimeId.split('-')[0];\r\n        this.bs.busy();\r\n        this.subsAnime = this.anime.getAnime(paramAnimeId).subscribe({\r\n          next: res => {\r\n            this.gs.log('[ANIME_DETAIL_SUCCESS]', res);\r\n            this.animeData = res.result;\r\n            this.pi.updatePageMetaData(\r\n              `${this.animeData.title}`,\r\n              `${this.animeData.synopsis}`,\r\n              `${this.animeData.alternative_titles?.synonyms?.join(', ')}`,\r\n              this.animeData.image_url\r\n            );\r\n            this.bs.idle();\r\n            if (this.gs.isBrowser) {\r\n              const genres = this.animeData.genres;\r\n              for (const g of genres) {\r\n                this.chipData.push({\r\n                  id: g.id,\r\n                  name: g.name,\r\n                  selected: true,\r\n                  color: WARNA.PINK\r\n                });\r\n              }\r\n              this.panelData = [];\r\n              this.panelData.push({\r\n                title: 'Ringkasan Cerita',\r\n                icon: 'history_edu',\r\n                text: this.animeData.synopsis,\r\n                tooltip: `Alih Bahasa Oleh 'Google Translate' 😘`\r\n              });\r\n              this.fs.initializeFab(null, '/assets/img/logo/mal.png', 'Buka Di MyAnimeList', `${this.malDomain}/anime/${this.animeId}`, true);\r\n              this.getFansubAnime();\r\n              this.getBerkasAnime();\r\n            }\r\n          },\r\n          error: err => {\r\n            this.gs.log('[ANIME_DETAIL_ERROR]', err, 'error');\r\n            this.bs.idle();\r\n            this.router.navigate(['/error'], {\r\n              queryParams: {\r\n                returnUrl: '/anime'\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openRank(): void {\r\n    this.wb.winboxOpenUri(`${this.malDomain}/topanime.php?limit=${this.animeData.rank - 1}`);\r\n  }\r\n\r\n  findSeasonNameByMonthNumber(monthNumber: number): string {\r\n    return this.gs.seasonalWeather.find(sB => sB.id === Math.ceil(monthNumber / 3)).name;\r\n  }\r\n\r\n  openSeasonalAnime(): void {\r\n    this.router.navigate(['/anime'], {\r\n      queryParams: {\r\n        season: this.SEASON,\r\n        year: this.YEAR\r\n      }\r\n    });\r\n  }\r\n\r\n  onServerSideFilter(data: any): void {\r\n    this.gs.log('[BERKAS_ANIME_ENTER_FILTER]', data);\r\n    this.q = data;\r\n    this.getBerkasAnime();\r\n  }\r\n\r\n  onServerSideOrder(data: any): void {\r\n    this.gs.log('[BERKAS_ANIME_CLICK_ORDER]', data);\r\n    this.q = data.q;\r\n    this.sort = data.active;\r\n    this.order = data.direction;\r\n    this.getBerkasAnime();\r\n  }\r\n\r\n  getBerkasAnime(): void {\r\n    this.bs.busy();\r\n    if (this.subsBerkas) {\r\n      this.subsBerkas.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsBerkas = this.anime.getBerkasAnime([this.animeId], this.q, this.page, this.row, this.sort, this.order).subscribe({\r\n      next: res => {\r\n        this.gs.log('[ANIME_BERKAS_LIST_SUCCESS]', res);\r\n        this.count = res.count;\r\n        this.berkasAnime = [];\r\n        for (const r of res.results[this.animeId]) {\r\n          this.allBerkasAnimeId.push(r.id);\r\n          this.berkasAnime.push({\r\n            id: r.id,\r\n            private: r.private,\r\n            foto: r.user_.image_url,\r\n            Pemilik: r.user_.username,\r\n            Proyek: r.project_type_.name,\r\n            // Image: r.image_url,\r\n            Tanggal: r.created_at,\r\n            'Nama Berkas': r.name\r\n          });\r\n        }\r\n        this.tabData[1].data.row = this.berkasAnime;\r\n        if (this.allBerkasAnimeId.length > 0) {\r\n          this.checkTrusted();\r\n        }\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[ANIME_BERKAS_LIST_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  checkTrusted():void {\r\n    this.bs.busy();\r\n    if (this.subsTrusted) {\r\n      this.subsTrusted.unsubscribe();\r\n      this.bs.idle();\r\n    }\r\n    this.subsTrusted = this.berkas.checkTrusted(this.allBerkasAnimeId).subscribe({\r\n      next: res => {\r\n        this.gs.log('[ANIME_BERKAS_TRUSTED_SUCCESS]', res);\r\n        for (const b of this.berkasAnime) {\r\n          b.trusted = res.results[b.id];\r\n        }\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[ANIME_BERKAS_TRUSTED_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  getFansubAnime(): void {\r\n    this.bs.busy();\r\n    this.subsFansub = this.anime.getFansubAnime([this.animeId], this.fansubPage).subscribe({\r\n      next: res => {\r\n        this.gs.log('[FANSUB_ANIME_SUCCESS]', res);\r\n        for (const r of res.results[this.animeId]) {\r\n          this.fansubAnime.push({\r\n            id: r.id,\r\n            image: r.image_url,\r\n            title: r.name,\r\n            slug: r.slug,\r\n            description: `${r.slug} :: ${r.active ? 'Aktif' : 'Non-Aktif'}`\r\n          });\r\n        }\r\n        this.tabData[0].data = this.fansubAnime;\r\n        if (res.results[this.animeId].length <= 0) {\r\n          this.fansubPageFinished = true;\r\n        }\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[FANSUB_ANIME_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  openGenre(data): void {\r\n    this.gs.log('[ANIME_DETAIL_CLICK_GENRE]', data);\r\n    this.wb.winboxOpenUri(`${this.malDomain}/anime/genre/${data.id}`);\r\n  }\r\n\r\n  openFansub(data): void {\r\n    this.gs.log('[ANIME_DETAIL_CLICK_FANSUB]', data);\r\n    this.router.navigateByUrl(`/fansub/${data.slug}`);\r\n  }\r\n\r\n  onPaginatorClicked(data): void {\r\n    this.gs.log('[ANIME_DETAIL_CLICK_PAGINATOR]', data);\r\n    this.page = data.pageIndex + 1;\r\n    this.row = data.pageSize;\r\n    this.getBerkasAnime();\r\n  }\r\n\r\n  openFile(data): void {\r\n    this.gs.log('[ANIME_DETAIL_CLICK_BERKAS]', data);\r\n    this.router.navigateByUrl(`/berkas/${data.id}`);\r\n  }\r\n\r\n  onFansubLoadNextPage(): void {\r\n    if (!this.fansubPageFinished) {\r\n      this.fansubPage++;\r\n      this.getFansubAnime();\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- Content -->\r\n<div class=\"container\" *ngIf=\"animeData\">\r\n  <div class=\"anime-info align-items-center\">\r\n    <div class=\"row py-3 px-2 d-flex\">\r\n\r\n      <!-- Data -->\r\n      <div class=\"col-md-8 col-xl-9 pt-3 order-2 order-md-1\">\r\n        <div class=\"row py-3 px-0 mt-auto\">\r\n          <h1 class=\"m-0\">\r\n            <b>{{ animeData.alternative_titles?.ja || animeData.alternative_titles.en || animeData.title }}</b>\r\n          </h1>\r\n        </div>\r\n        <div class=\"row py-3\">\r\n          <app-material-chip (chipClicked)=\"openGenre($event)\" [chipData]=\"chipData\"></app-material-chip>\r\n        </div>\r\n        <div class=\"row\">\r\n          <app-notifications class=\"px-0\"></app-notifications>\r\n        </div>\r\n        <div class=\"row py-3\">\r\n          <app-material-expansion-panel [panelData]=\"panelData\"></app-material-expansion-panel>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Information -->\r\n      <div class=\"col-md-4 col-xl-3 px-3 order-1 order-md-2\">\r\n        <div class=\"row sticky-top pt-3\">\r\n          <div class=\"col-12 pt-4\">\r\n            <img class=\"anime-image\" [src]=\"animeData.image_url\" />\r\n          </div>\r\n          <div class=\"col-12 text-center pt-3\">\r\n            <button type=\"button\" mat-stroked-button class=\"w-100\" color=\"accent\" (click)=\"openSeasonalAnime()\"\r\n              matTooltip=\"Lihat Semua Anime Pada Musim '{{ SEASON }} {{ YEAR }}'\">\r\n              <mat-icon class=\"me-1\">dynamic_feed</mat-icon> {{ animeData.num_episodes || '?' }} Eps &nbsp;\r\n              <mat-icon class=\"me-1\">star_half</mat-icon> {{ animeData.mean || '?' }} <br />\r\n              <mat-icon class=\"me-1\">date_range</mat-icon> {{ animeData.start_date || '?' }} ー {{ animeData.end_date || '?' }}\r\n            </button>\r\n          </div>\r\n          <div class=\"col-12 text-center pt-3\">\r\n            <button type=\"button\" mat-stroked-button class=\"w-100\" color=\"warn\" matTooltip=\"Buka Ranking Di MyAnimeList\"\r\n              (click)=\"openRank()\">\r\n              <mat-icon class=\"me-1\">timeline</mat-icon> {{ animeData.rank || '?' }} &nbsp;\r\n              <mat-icon class=\"me-1\">local_fire_department</mat-icon> {{ animeData.popularity || '?' }} <br />\r\n              <mat-icon class=\"me-1\">label</mat-icon> {{ animeData.status?.split('_').join(' ').toUpperCase() || '?' }} - {{ animeData.media_type?.toUpperCase() }}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <app-material-tab (gridClicked)=\"openFansub($event)\" (tableRowClicked)=\"openFile($event)\" (paginatorClicked)=\"onPaginatorClicked($event)\"\r\n          [tabData]=\"tabData\" [count]=\"count\" [serverSide]=\"true\" (serverSideFilter)=\"onServerSideFilter($event)\" (serverSideOrder)=\"onServerSideOrder($event)\"\r\n          [gridPageFinished]=\"fansubPageFinished\" (gridLoadNextPage)=\"onFansubLoadNextPage()\"></app-material-tab>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"anime-banner anime-banner-1 align-items-center\" [style.background-image]=\"'url(' + animeData.image_url + ')'\"></div>\r\n  <div class=\"anime-banner anime-banner-2 align-items-center\"></div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\r\nimport { MatDatepicker } from '@angular/material/datepicker';\r\n\r\nimport { Moment } from 'moment';\r\n\r\nimport { moment, MY_FORMATS } from '../../../_shared/helpers/moment';\r\n\r\nimport { GlobalService } from '../../../_shared/services/global.service';\r\nimport { AnimeService } from '../../../_shared/services/anime.service';\r\nimport { FabService } from '../../../_shared/services/fab.service';\r\nimport { BusyService } from '../../../_shared/services/busy.service';\r\n\r\n@Component({\r\n  selector: 'app-anime-list',\r\n  templateUrl: './anime-list.component.html',\r\n  styleUrls: ['./anime-list.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]},\r\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\r\n  ]\r\n})\r\nexport class AnimeListComponent implements OnInit, OnDestroy {\r\n\r\n  fg: FormGroup;\r\n\r\n  currentMonth = null;\r\n  currentYear = null;\r\n\r\n  selectedSeasonName = null;\r\n\r\n  minDate: Date;\r\n  maxDate: Date;\r\n\r\n  seasonalAnimeCard = [];\r\n  seasonalAnime = [];\r\n\r\n  tabData = [\r\n    {\r\n      name: 'Info Garapan',\r\n      icon: 'closed_caption',\r\n      type: 'table',\r\n      data: {\r\n        column: ['Jenis', 'Poster', 'Judul Anime', 'Nama Fansub'],\r\n        row: []\r\n      }\r\n    }\r\n  ];\r\n\r\n  subsQueryParam = null;\r\n  subsSeasonalAnime = null;\r\n  subsFansubAnime = null;\r\n\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private bs: BusyService,\r\n    private gs: GlobalService,\r\n    private fs: FabService,\r\n    private anime: AnimeService\r\n  ) {\r\n    this.gs.bannerImg = '/assets/img/season/winter.png';\r\n    this.gs.bgRepeat = true;\r\n    this.gs.sizeContain = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subsQueryParam?.unsubscribe();\r\n    this.subsSeasonalAnime?.unsubscribe();\r\n    this.subsFansubAnime?.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.fg = new FormGroup({\r\n      currentDate: new FormControl({ value: moment(), disabled: true }, Validators.required),\r\n    });\r\n    this.currentMonth = new Date(this.fg.value.currentDate.format()).getMonth() + 1;\r\n    this.currentYear = new Date(this.fg.value.currentDate.format()).getFullYear();\r\n    this.minDate = new Date('1917-01-01');\r\n    this.maxDate = new Date(this.currentYear + 1, 11, 31);\r\n    if (this.gs.isBrowser) {\r\n      this.watchUrlRoute();\r\n    }\r\n  }\r\n\r\n  watchUrlRoute(): void {\r\n    this.subsQueryParam = this.activatedRoute.queryParams.subscribe({\r\n      next: qp => {\r\n        this.bs.busy();\r\n        this.currentYear = qp['year'] ? (\r\n          Number.isNaN(parseInt(qp['year'], 10)) ? this.currentYear : parseInt(qp['year'], 10)\r\n        ) : new Date().getFullYear();\r\n        this.fg.controls['currentDate'].patchValue(moment(new Date(`${this.currentYear}-${this.currentMonth}-01`)));\r\n        this.currentYear = new Date(this.fg.value.currentDate.format()).getFullYear();\r\n        this.selectedSeasonName = qp['season'] ? (\r\n          this.gs.seasonalWeather.map(s => s.name)\r\n            .indexOf(qp['season']) >= 0 ? qp['season'] : this.findSeasonNameByMonthNumber(this.currentMonth)\r\n        ) : this.findSeasonNameByMonthNumber(this.currentMonth);\r\n        this.gs.bannerImg = this.gs.seasonalWeather.find(sB => sB.name === this.selectedSeasonName).img;\r\n        this.bs.idle();\r\n        this.getSeasonalAnime(qp['year'] && qp['season']);\r\n      }\r\n    });\r\n  }\r\n\r\n  findSeasonNameByMonthNumber(monthNumber: number): string {\r\n    return this.gs.seasonalWeather.find(sB => sB.id === Math.ceil(monthNumber / 3)).name;\r\n  }\r\n\r\n  chosenYearHandler(normalizedYear: Moment, datepicker: MatDatepicker<Moment>): void {\r\n    const ctrlValue = this.fg.value.currentDate;\r\n    ctrlValue.year(normalizedYear.year());\r\n    this.fg.controls['currentDate'].setValue(ctrlValue);\r\n    this.currentMonth = new Date(this.fg.value.currentDate.format()).getMonth() + 1;\r\n    this.currentYear = new Date(this.fg.value.currentDate.format()).getFullYear();\r\n    datepicker.close();\r\n    this.changeSeasonalAnime();\r\n  }\r\n\r\n  getSeasonalAnime(showFab = false): void {\r\n    this.bs.busy();\r\n    this.subsSeasonalAnime = this.anime.getSeasonalAnime(this.currentYear, this.selectedSeasonName).subscribe({\r\n      next: res => {\r\n        this.gs.log('[ANIME_SEASONAL_SUCCESS]', res);\r\n        this.seasonalAnime = res.results.sort((a, b) => (b.mean || 0) - (a.mean || 0));\r\n        if (showFab) {\r\n          this.fs.initializeFab('settings_backup_restore', null, 'Kembali Ke Musim Sekarang', '/anime', false);\r\n        }\r\n        this.bs.idle();\r\n        this.getFansubAnime();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[ANIME_SEASONAL_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  getFansubAnime(): void {\r\n    this.bs.busy();\r\n    this.tabData[0].data.row = [];\r\n    const seasonalAnimeListId = [];\r\n    for (const sA of this.seasonalAnime) {\r\n      seasonalAnimeListId.push(sA.id);\r\n    }\r\n    this.subsFansubAnime = this.anime.getFansubAnime(seasonalAnimeListId).subscribe({\r\n      next: res => {\r\n        this.gs.log('[FANSUB_ANIME_SUCCESS]', res);\r\n        let seasonalAnimeWithFansub = [];\r\n        for (const sA of this.seasonalAnime) {\r\n          sA.namaFansubs = res.results[sA.id];\r\n          for (const f of sA.namaFansubs) {\r\n            f.selected = true;\r\n            f.type = 'chip';\r\n          }\r\n          seasonalAnimeWithFansub.push({\r\n            id: sA.id,\r\n            Jenis: `${sA.media_type?.toUpperCase()} • ${sA.mean || 0}`,\r\n            Poster: sA.image_url,\r\n            'Judul Anime': sA.title,\r\n            'Nama Fansub': sA.namaFansubs,\r\n          });\r\n        }\r\n        seasonalAnimeWithFansub = seasonalAnimeWithFansub.sort((a, b) => b['Nama Fansub'].length - a['Nama Fansub'].length);\r\n        this.tabData[0].data.row = seasonalAnimeWithFansub;\r\n        this.seasonalAnimeCard = this.seasonalAnime;\r\n        this.bs.idle();\r\n      },\r\n      error: err => {\r\n        this.gs.log('[FANSUB_ANIME_ERROR]', err, 'error');\r\n        this.bs.idle();\r\n      }\r\n    });\r\n  }\r\n\r\n  changeSeasonalAnime(): void {\r\n    this.router.navigate(['/anime'], {\r\n      queryParams: {\r\n        season: this.selectedSeasonName,\r\n        year: this.currentYear\r\n      }\r\n    });\r\n  }\r\n\r\n  openAnimePage(data): void {\r\n    this.gs.log('[ANIME_SEASONAL_CLICK_ANIME]', data);\r\n    let judulAnime = null;\r\n    try {\r\n      judulAnime = data.title.replace(/[^a-zA-Z0-9]/g, '-');\r\n    } catch (e) {\r\n      judulAnime = data['Judul Anime'].replace(/[^a-zA-Z0-9]/g, '-');\r\n    }\r\n    this.router.navigateByUrl(`/anime/${data.id}-${judulAnime}`);\r\n  }\r\n\r\n  openFansub(data): void {\r\n    this.gs.log('[ANIME_SEASONAL_CLICK_FANSUB]', data);\r\n    this.router.navigateByUrl(`/fansub/${data.slug}`);\r\n  }\r\n\r\n}\r\n","<!-- Notification -->\r\n<app-notifications></app-notifications>\r\n\r\n<!-- Content -->\r\n<div class=\"container\">\r\n  <div class=\"row pb-3\">\r\n    <div class=\"col-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12 pb-3 sticky-top bg-bifeldy\" [formGroup]=\"fg\">\r\n          <h3 class=\"m-0 border-bottom border-primary row\">\r\n            <mat-form-field class=\"pt-3 col-6 col-md-4 col-lg-2\" [color]=\"'accent'\">\r\n              <mat-label>Tema Musim</mat-label>\r\n              <mat-select [(value)]=\"selectedSeasonName\" (valueChange)=\"changeSeasonalAnime()\">\r\n                <mat-option value=\"winter\">Winter</mat-option>\r\n                <mat-option value=\"spring\">Spring</mat-option>\r\n                <mat-option value=\"summer\">Summer</mat-option>\r\n                <mat-option value=\"fall\">Fall</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <mat-form-field class=\"pt-3 col-6 col-md-4 col-lg-2\">\r\n              <mat-label>Tahun</mat-label>\r\n              <input matInput [matDatepicker]=\"picker\" [min]=\"minDate\" [max]=\"maxDate\" formControlName=\"currentDate\" />\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker\" class=\"shiny\">\r\n                <mat-icon matDatepickerToggleIcon class=\"animate__animated animate__swing animate__infinite animate__slower\">today</mat-icon>\r\n              </mat-datepicker-toggle>\r\n              <mat-datepicker #picker startView=\"multi-year\" (yearSelected)=\"chosenYearHandler($event, picker)\" disabled=\"false\"></mat-datepicker>\r\n            </mat-form-field>\r\n          </h3>\r\n        </div>\r\n        <div class=\"col-12\">\r\n          <app-card-anime-dorama (cardClicked)=\"openAnimePage($event)\" [animeDoramaData]=\"seasonalAnimeCard\"></app-card-anime-dorama>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row pt-3\">\r\n    <app-material-tab (chipClicked)=\"openFansub($event)\" (tableRowClicked)=\"openAnimePage($event)\" [tabData]=\"tabData\"></app-material-tab>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SharedMaterialModule } from '../../_shared/modules/shared-material.module';\r\n\r\nimport { MaterialTabModule } from '../../_shared/components/material-tab/material-tab.module';\r\nimport { MaterialChipModule } from '../../_shared/components/material-chip/material-chip.module';\r\nimport { MaterialExpansionPanelModule } from '../../_shared/components/material-expansion-panel/material-expansion-panel.module';\r\nimport { CardAnimeDoramaModule } from '../../_shared/components/card-anime-dorama/card-anime-dorama.module';\r\nimport { NotificationsModule } from '../../_shared/components/notifications/notifications.module';\r\n\r\nimport { AnimeListComponent } from './anime-list/anime-list.component';\r\nimport { AnimeDetailComponent } from './anime-detail/anime-detail.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: AnimeListComponent\r\n  },\r\n  {\r\n    path: ':animeId',\r\n    component: AnimeDetailComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AnimeListComponent,\r\n    AnimeDetailComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedMaterialModule,\r\n    MaterialTabModule,\r\n    MaterialExpansionPanelModule,\r\n    MaterialChipModule,\r\n    CardAnimeDoramaModule,\r\n    NotificationsModule\r\n  ]\r\n})\r\nexport class AnimeModule { }\r\n"],"names":[],"sourceRoot":"webpack:///"}