{"version":3,"file":"src_app__pages_reset-password_reset-password_module_ts.js","mappings":"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","sources":["./src/app/_pages/reset-password/reset-password.component.ts","./src/app/_pages/reset-password/reset-password.component.html","./src/app/_pages/reset-password/reset-password.module.ts"],"sourcesContent":["import { BreakpointObserver } from '@angular/cdk/layout';\nimport { StepperOrientation } from '@angular/cdk/stepper';\nimport { Component, OnDestroy, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatStepper } from '@angular/material/stepper';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map, Observable } from 'rxjs';\n\nimport { environment } from '../../../environments/app/environment';\n\nimport { CONSTANTS } from '../../../constants';\n\nimport { AuthService } from '../../_shared/services/auth.service';\nimport { BusyService } from '../../_shared/services/busy.service';\nimport { DialogService } from '../../_shared/services/dialog.service';\nimport { GlobalService } from '../../_shared/services/global.service';\nimport { UserService } from '../../_shared/services/user.service';\nimport { CryptoService } from '../../_shared/services/crypto.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  @ViewChild('stepper', { static: true }) stepper: MatStepper;\n\n  stepperOrientation: Observable<StepperOrientation>;\n\n  fg1: FormGroup;\n  fg2: FormGroup;\n\n  captchaRef = null;\n  submitted = false;\n\n  returnUrl = '/';\n  resetInfo = '';\n\n  subsFindLostAccount = null;\n  subsResetLostAccount = null;\n  subsVerify = null;\n  subsDialog = null;\n  subsUser = null;\n  timedOut = null;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private breakpointObserver: BreakpointObserver,\n    private fb: FormBuilder,\n    private router: Router,\n    private us: UserService,\n    private bs: BusyService,\n    private ds: DialogService,\n    private gs: GlobalService,\n    private as: AuthService,\n    private cs: CryptoService\n  ) {\n    this.stepperOrientation = this.breakpointObserver\n      .observe('(min-width: 767px)')\n      .pipe(map(({matches}) => (matches ? 'horizontal' : 'vertical')));\n    this.gs.bannerImg = null;\n    this.gs.sizeContain = false;\n    this.gs.bgRepeat = false;\n  }\n\n  get ENV(): any {\n    return environment;\n  }\n\n  ngOnDestroy(): void {\n    this.subsFindLostAccount?.unsubscribe();\n    this.subsResetLostAccount?.unsubscribe();\n    this.subsVerify?.unsubscribe();\n    this.subsDialog?.unsubscribe();\n    this.subsUser?.unsubscribe();\n    if (this.timedOut) {\n      clearTimeout(this.timedOut);\n      this.timedOut = null;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (!this.timedOut) {\n      this.timedOut = setTimeout(() => {\n        const token = this.activatedRoute.snapshot.queryParamMap.get('token') || '';\n        if (token && this.fg2 && this.stepper) {\n          this.fg2.controls['token'].patchValue(token);\n          this.stepper.next();\n        }\n      }, 0);\n    }\n  }\n\n  ngOnInit(): void {\n    this.returnUrl = this.activatedRoute.snapshot.queryParamMap.get('returnUrl') || '/';\n    if (this.gs.isBrowser) {\n      this.initForm();\n      this.subsUser = this.as.currentUser.subscribe({\n        next: user => {\n          if (user) {\n            this.router.navigateByUrl(this.returnUrl);\n          }\n        }\n      });\n    }\n  }\n\n  get G_CAPTCHA_SITE_KEY(): string {\n    return CONSTANTS.gCaptchaSiteKey;\n  }\n\n  initForm(): void {\n    this.fg1 = this.fb.group({\n      userNameOrEmail: [null, [Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)]],\n      'g-recaptcha-response': [null, [Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)]]\n    });\n    this.fg2 = this.fb.group({\n      token: [null, [Validators.required, Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)]],\n      password: [null, [Validators.required, Validators.minLength(8), Validators.pattern(CONSTANTS.regexEnglishKeyboardKeys)]]\n    });\n  }\n\n  captcha(captchaResponse, captchaRef): void {\n    this.gs.log(`[GOOGLE_CAPTCHA] ${captchaResponse}`);\n    if (captchaResponse) {\n      this.captchaRef = captchaRef;\n      this.fg1.controls['g-recaptcha-response'].patchValue(captchaResponse);\n    } else {\n      if (this.fg1.value['g-recaptcha-response']) {\n        this.fg1.controls['g-recaptcha-response'].patchValue(null);\n      }\n    }\n  }\n\n  findAccount(): void {\n    this.bs.busy();\n    this.submitted = true;\n    this.subsFindLostAccount = this.us.findLostAccount({\n      userNameOrEmail: this.fg1.value.userNameOrEmail,\n      'g-recaptcha-response': this.fg1.value['g-recaptcha-response']\n    }).subscribe({\n      next: res => {\n        this.gs.log('[USER_FIND_LOST_ACCOUNT_SUCCESS]', res);\n        this.bs.idle();\n        this.submitted = false;\n        this.subsDialog = this.ds.openInfoDialog({\n          data: {\n            title: res.result.title,\n            htmlMessage: res.result.message,\n            confirmText: 'Tutup'\n          }\n        }).afterClosed().subscribe({\n          next: re => {\n            this.gs.log('[INFO_DIALOG_CLOSED]', re);\n            this.subsDialog.unsubscribe();\n          }\n        });\n        this.stepper.next();\n        this.captchaRef.reset();\n      },\n      error: err => {\n        this.gs.log('[USER_FIND_LOST_ACCOUNT_ERROR]', err);\n        this.bs.idle();\n        this.submitted = false;\n        this.resetInfo = err.result?.message || err.info;\n        this.captchaRef.reset();\n      }\n    });\n  }\n\n  resetAccount(): void {\n    this.bs.busy();\n    this.submitted = true;\n    this.subsResetLostAccount = this.us.resetLostAccount({\n      token: this.fg2.value.token,\n      password: this.cs.hashPassword(this.fg2.value.password)\n    }).subscribe({\n      next: res => {\n        this.gs.log('[USER_RESET_LOST_ACCOUNT_SUCCESS]', res);\n        this.bs.idle();\n        this.submitted = false;\n        this.as.removeUser();\n        this.bs.busy();\n        this.subsVerify = this.as.verify(res.result.token).subscribe({\n          next: success => {\n            this.gs.log('[VERIFY_LOGIN_SUCCESS]', success);\n            this.bs.idle();\n            this.router.navigateByUrl('/');\n          },\n          error: error => {\n            this.gs.log('[VERIFY_LOGIN_ERROR]', error, 'error');\n            this.bs.idle();\n            this.as.removeUser();\n            this.router.navigateByUrl('/');\n          }\n        });\n      },\n      error: err => {\n        this.gs.log('[USER_RESET_LOST_ACCOUNT_ERROR]', err, 'error');\n        this.bs.idle();\n        this.submitted = false;\n        this.resetInfo = err.result?.message || err.info;\n        this.stepper.reset();\n      }\n    });\n  }\n\n}\n","<div class=\"container-fluid align-items-center col-12 col-sm-10 col-md-9 col-lg-7 col-xl-6 h-100\">\n  <div class=\"row align-items-center h-100 m-0\">\n    <div class=\"col-12 col-md-10 m-auto py-3\">\n      <div class=\"row rgb-border rounded bg-bifeldy\">\n        <div class=\"col-12 me-auto p-0\">\n          <div class=\"card bg-transparent border-0\">\n            <div class=\"card-body p-0\">\n              <div class=\"text-center p-3\">\n                <img class=\"mb-4\" src=\"{{ ENV.baseUrl }}/assets/img/logo/reset-password.png\" style=\"max-width: 192px;\" />\n                <h1 class=\"h3 mb-3 font-weight-normal\">Hikz, Akun Kamu Kenapa (?)</h1>\n                <p class=\"text-warning\">{{ resetInfo }}</p>\n              </div>\n              <mat-vertical-stepper #stepper [orientation]=\"(stepperOrientation | async)!\" style=\"background-color: transparent;\">\n\n                <mat-step [stepControl]=\"fg1\" [editable]=\"false\">\n                  <ng-template matStepLabel>Cari & Cek Akun</ng-template>\n                  <form [formGroup]=\"fg1\" class=\"m-2\" *ngIf=\"fg1\">\n                    <div class=\"form-group row py-2\">\n                      <label for=\"userNameOrEmail\" class=\"col-md-4 col-form-label text-md-end\">Surel / Nama Pengguna</label>\n                      <div class=\"col-md-8\">\n                        <input type=\"text\" id=\"userNameOrEmail\" class=\"text-bifeldy form-control {{\n                            !fg1.get('userNameOrEmail').valid && fg1.get('userNameOrEmail').touched ? 'is-invalid' : ''\n                          }}\" placeholder=\"Username / E-Mail\" required formControlName=\"userNameOrEmail\" autocomplete=\"email, username\" />\n                        <span class=\"invalid-feedback\" role=\"alert\">\n                          <strong *ngIf=\"fg1.get('userNameOrEmail').hasError('required')\">\n                            Username / Email Tidak Boleh Kosong! <br />\n                          </strong>\n                          <strong *ngIf=\"fg1.get('userNameOrEmail').hasError('pattern')\">\n                            Username / Email Hanya Boleh Huruf Standar Papan Ketik <br />\n                          </strong>\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"form-group row mb-0 py-2\">\n                      <div class=\"col offset-md-4\">\n                        <re-captcha #captchaRef formControlName=\"g-recaptcha-response\" [siteKey]=\"G_CAPTCHA_SITE_KEY\"\n                          (resolved)=\"captcha($event, captchaRef)\"></re-captcha>\n                      </div>\n                    </div>\n                    <div class=\"form-group row mb-0 py-2\">\n                      <div class=\"col-md-8 offset-md-4\">\n                        <div class=\"row\">\n                          <div class=\"col-12\">\n                            <button type=\"button\" mat-flat-button color=\"primary\" class=\"w-100\" \n                              [disabled]=\"submitted || fg1.invalid\" (click)=\"findAccount()\">\n                              Cari Akun <mat-icon class=\"ms-1\">search</mat-icon>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </mat-step>\n\n                <mat-step [stepControl]=\"fg2\" [editable]=\"false\">\n                  <ng-template matStepLabel>Ubah Kata Sandi</ng-template>\n                  <form [formGroup]=\"fg2\" class=\"m-2\" *ngIf=\"fg2\">\n                    <div class=\"form-group row py-2\">\n                      <label for=\"token\" class=\"col-md-4 col-form-label text-md-end\">Token</label>\n                      <div class=\"col-md-8\">\n                        <textarea rows=\"3\" type=\"text\" id=\"token\" class=\"text-bifeldy form-control {{\n                            !fg2.get('token').valid && fg2.get('token').touched ? 'is-invalid' : ''\n                          }}\" placeholder=\"Token\" required formControlName=\"token\" autocomplete=\"token\">\n                        </textarea>\n                        <span class=\"invalid-feedback\" role=\"alert\">\n                          <strong *ngIf=\"fg2.get('token').hasError('required')\">\n                            Token Tidak Boleh Kosong <br />\n                          </strong>\n                          <strong *ngIf=\"fg2.get('token').hasError('pattern')\">\n                            Token Hanya Boleh Huruf Standar Papan Ketik <br />\n                          </strong>\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"form-group row py-2\">\n                      <label for=\"password\" class=\"col-md-4 col-form-label text-md-end\">Password Baru</label>\n                      <div class=\"col-md-8\">\n                        <input type=\"password\" id=\"password\" class=\"text-bifeldy form-control {{\n                            !fg2.get('password').valid && fg2.get('password').touched ? 'is-invalid' : ''\n                          }}\" placeholder=\"Password Minimal 8 Huruf\" required formControlName=\"password\" autocomplete=\"password\" />\n                        <span class=\"invalid-feedback\" role=\"alert\">\n                          <strong *ngIf=\"fg2.get('password').hasError('required')\">\n                            Password Tidak Boleh Kosong <br />\n                          </strong>\n                          <strong *ngIf=\"fg2.get('password').hasError('minlength')\">\n                            Password Minimal 8 Huruf <br />\n                          </strong>\n                          <strong *ngIf=\"fg2.get('password').hasError('pattern')\">\n                            Password Hanya Boleh Huruf Standar Papan Ketik <br />\n                          </strong>\n                        </span>\n                      </div>\n                    </div>\n                    <div class=\"form-group row mb-0 py-2\">\n                      <div class=\"col-md-8 offset-md-4\">\n                        <div class=\"row\">\n                          <div class=\"col-12\">\n                            <button type=\"button\" mat-flat-button color=\"primary\" class=\"w-100\"\n                              [disabled]=\"submitted || fg2.invalid\" (click)=\"resetAccount()\">\n                              Atur Ulang Akun <mat-icon class=\"ms-1\">check_circle_outline</mat-icon>\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </form>\n                </mat-step>\n\n              </mat-vertical-stepper>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { RecaptchaModule, RecaptchaFormsModule } from 'ng-recaptcha';\n\nimport { SharedMaterialModule } from '../../_shared/modules/shared-material.module';\n\nimport { ResetPasswordComponent } from './reset-password.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: ResetPasswordComponent\n  }\n];\n\n@NgModule({\n  declarations: [ResetPasswordComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    SharedMaterialModule,\n    RecaptchaModule,\n    RecaptchaFormsModule\n  ]\n})\nexport class ResetPasswordModule { }\n"],"names":["Validators","map","environment","CONSTANTS","i0","ctx_r8","ctx_r10","ctx_r16","ResetPasswordComponent","constructor","activatedRoute","breakpointObserver","fb","router","us","bs","ds","gs","as","cs","stepperOrientation","observe","pipe","matches","bannerImg","sizeContain","bgRepeat","ENV","ngOnDestroy","subsFindLostAccount","_a","unsubscribe","subsResetLostAccount","_b","subsVerify","_c","subsDialog","_d","subsUser","_e","timedOut","clearTimeout","ngAfterViewInit","setTimeout","token","snapshot","queryParamMap","get","fg2","stepper","controls","patchValue","next","ngOnInit","returnUrl","isBrowser","initForm","currentUser","subscribe","user","navigateByUrl","G_CAPTCHA_SITE_KEY","gCaptchaSiteKey","fg1","group","userNameOrEmail","required","pattern","regexEnglishKeyboardKeys","password","minLength","captcha","captchaResponse","captchaRef","log","value","findAccount","busy","submitted","findLostAccount","res","idle","openInfoDialog","data","title","result","htmlMessage","message","confirmText","afterClosed","re","reset","error","err","resetInfo","info","resetAccount","resetLostAccount","hashPassword","removeUser","verify","success","selectors","viewQuery"],"sourceRoot":"webpack:///"}